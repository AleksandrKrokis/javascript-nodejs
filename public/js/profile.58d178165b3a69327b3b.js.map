{"version":3,"sources":["webpack:///profile.58d178165b3a69327b3b.js","webpack:///./handlers/profile/client/index.js","webpack:///external \"angular\"","webpack:///./handlers/profile/client/profileField.js","webpack:///./handlers/profile/client/profilePhoto.js","webpack:///./handlers/profile/client/profilePassword.js","webpack:///./handlers/profile/client/profileAuthProviders.js","webpack:///./handlers/profile/client/dateValidator.js","webpack:///./handlers/profile/client/dateRangeValidator.js","webpack:///./modules/momentWithLocale.js","webpack:///./client/image.js?8da9","webpack:///./~/moment/locale/ru.js","webpack:///./~/moment/moment.js","webpack:///(webpack)/buildin/module.js"],"names":["profile","webpackJsonp_name_","module","exports","__webpack_require__","angular","notification","moment","factory","$resource","get","method","transformResponse","data","JSON","parse","created","Date","window","currentUser","id","query","isArray","forEach","result","config","$locationProvider","$stateProvider","html5Mode","state","abstract","resolve","me","Me","templateUrl","controller","states","root.aboutme","url","title","root.account","root.quiz","quizResults","QuizResults","key","profileStatesEnabled","indexOf","$scope","$state","$timeout","$http","promiseTracker","loadingTracker","filter","map","name","remove","isSure","confirm","displayName","email","tracker","headers","Content-Type","undefined","transformRequest","identity","FormData","then","alert","location","href","response","Error","status","removeProvider","providerName","this","str","toUpperCase","slice","date","format","seconds","duration","humanize",1,24,"directive","scope","formatValue","value","replace","transclude","link","element","attrs","noCtrl","edit","editing","editingValue","submit","_this","form","$invalid","formData","append","Success","Warning","setTimeout","message","cancel","clone","querySelector",25,"thumb","photo","uploadPhoto","file","changePhoto","fileInput","document","createElement","type","accept","onchange","reader","FileReader","files","onload","event","image","Image","width","height","src","target","readAsDataURL","click",26,"hasPassword","password","passwordOld","input","elements","focus","$setPristine","errors",27,"authPopup","connect","arguments","connected","providers","provider","service","onSuccess","onFail","closed","close","top","outerHeight","left","outerWidth","authModal","onAuthSuccess","onAuthFailure","open",28,"require","ngModel","$validators","modelValue","viewValue","split","length","getFullYear","getMonth","getDate",29,"range","dateRangeValidator","from","toDate","to","dateRange",30,51,"pixelRatio","devicePixelRatio","modifier","lastIndexOf",57,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","apply","plural","word","num","forms","relativeTimeWithPlural","number","withoutSuffix","mm","hh","dd","MM","yy","monthsCaseReplace","m","months","nominative","accusative","nounCase","test","month","monthsShortCaseReplace","monthsShort","weekdaysCaseReplace","weekdays","day","defineLocale","weekdaysShort","weekdaysMin","monthsParse","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","now","week","sameElse","relativeTime","future","past","s","h","d","M","y","meridiemParse","isPM","meridiem","hour","ordinalParse","ordinal","period","dow","doy",58,"global","dfl","a","b","c","hasOwnProp","hasOwnProperty","call","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","printMsg","msg","suppressDeprecationWarnings","console","warn","deprecate","fn","firstTime","extend","deprecateSimple","deprecations","padToken","func","count","leftZeroFill","ordinalizeToken","localeData","monthDiff","anchor2","adjust","wholeMonthDiff","year","anchor","add","meridiemFixWrap","locale","isPm","meridiemHour","Locale","Moment","skipOverflow","checkOverflow","copyConfig","_d","updateInProgress","updateOffset","Duration","normalizedInput","normalizeObjectUnits","years","quarters","quarter","weeks","days","hours","minutes","minute","second","milliseconds","millisecond","_milliseconds","_days","_months","_data","_locale","_bubble","i","toString","valueOf","prop","val","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_pf","momentProperties","absRound","Math","ceil","floor","targetLength","forceSign","output","abs","sign","positiveMomentsDifference","base","other","res","isAfter","momentsDifference","makeAs","isBefore","createAdder","direction","dur","tmp","isNaN","addOrSubtractDurationFromMoment","mom","isAdding","setTime","rawSetter","rawGetter","rawMonthSetter","Object","prototype","isDate","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","diffs","toInt","normalizeUnits","units","lowered","toLowerCase","unitAliases","camelFunctions","inputObject","normalizedProp","makeList","field","setter","index","getter","results","utc","set","push","argumentForCoercion","coercedNumber","isFinite","daysInMonth","UTC","getUTCDate","weeksInYear","weekOfYear","daysInYear","isLeapYear","_a","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","isValid","_isValid","getTime","bigHour","normalizeLocale","chooseLocale","names","j","next","loadLocale","join","oldLocale","locales","hasModule","e","code","model","diff","isMoment","local","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatTokenFunctions","Function","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","getParseRegexForToken","token","strict","parseTokenOneDigit","parseTokenThreeDigits","parseTokenFourDigits","parseTokenOneToFourDigits","parseTokenSignedNumber","parseTokenSixDigits","parseTokenOneToSixDigits","parseTokenTwoDigits","parseTokenOneToThreeDigits","parseTokenWord","_meridiemParse","parseTokenOffsetMs","parseTokenTimestampMs","parseTokenTimezone","parseTokenT","parseTokenDigits","parseTokenOneOrTwoDigits","_ordinalParse","_ordinalParseLenient","RegExp","regexpEscape","unescapeFormat","utcOffsetFromString","string","possibleTzMatches","tzChunk","parts","parseTimezoneChunker","addTimeToArrayFromToken","datePartArray","parseInt","_dayOfYear","parseTwoDigitYear","_meridiem","parseFloat","_useUTC","weekdaysParse","_w","invalidWeekday","substr","dayOfYearFromWeekInfo","w","weekYear","weekday","temp","GG","W","E","_week","gg","dayOfYearFromWeeks","dayOfYear","dateFromConfig","currentDate","yearToUse","currentDateArray","makeUTCDate","getUTCMonth","_nextDay","makeDate","setUTCMinutes","getUTCMinutes","dateFromObject","getUTCFullYear","makeDateFromStringAndFormat","ISO_8601","parseISO","parsedInput","tokens","skipped","stringLength","totalParsedInputLength","matched","p1","p2","p3","p4","makeDateFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","l","isoRegex","exec","isoDates","isoTimes","makeDateFromString","createFromInputFallback","arr","makeDateFromInput","aspNetJsonRegex","obj","ms","setFullYear","setUTCFullYear","parseWeekday","substituteTimeAgo","isFuture","posNegDuration","round","as","args","relativeTimeThresholds","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","end","daysToDayOfWeek","daysToAdd","getUTCDay","makeMoment","invalid","preparse","pickBy","moments","dayOfMonth","unit","makeAccessor","keepTime","daysToYears","yearsToDays","makeDurationGetter","makeGlobal","shouldDeprecate","ender","oldGlobalMoment","globalScope","VERSION","aspNetTimeSpanJsonRegex","isoDurationRegex","isoFormat","unitMillisecondFactors","Milliseconds","Seconds","Minutes","Hours","Days","Months","Years","D","Q","DDD","dayofyear","isoweekday","isoweek","weekyear","isoweekyear","ordinalizeTokens","paddedTokens","MMM","MMMM","ddd","dddd","isoWeek","YY","YYYY","YYYYY","YYYYYY","gggg","ggggg","isoWeekYear","GGGG","GGGGG","isoWeekday","A","H","S","SS","SSS","SSSS","Z","utcOffset","ZZ","z","zoneAbbr","zz","zoneName","x","X","unix","lists","pop","DDDD","source","_monthsShort","monthName","regex","_monthsParse","_longMonthsParse","_shortMonthsParse","_weekdays","_weekdaysShort","_weekdaysMin","weekdayName","_weekdaysParse","_longDateFormat","charAt","isLower","_calendar","_relativeTime","pastFuture","_ordinal","postformat","firstDayOfYear","_invalidDate","max","ret","parseIso","diffRes","isDuration","inp","version","defaultFormat","relativeTimeThreshold","threshold","limit","lang","values","_abbr","abbr","langData","flags","parseZone","toISOString","toArray","_isValidWrapper","isDSTShifted","parsingFlags","invalidAt","keepLocalTime","subtract","_dateUtcOffset","inputString","_diff","_diffWrapper","asFloat","that","zoneDiff","time","fromNow","sod","startOf","_isLeapYear","_isLeapYearWrapper","isDST","_day","_dayWrapper","getDay","endOf","inputMs","isBetween","isSame","zone","localAdjust","offset","_changeInProgress","isLocal","isUtcOffset","isUtc","hasAlignedHourOffset","_daysInMonth","_daysInMonthWrapper","_dayOfYearWrapper","_weekWrapper","_weekday","_weekdayWrapper","isoWeeksInYear","_weeksInYear","_weeksInYearWrapper","weekInfo","newLocaleData","getTimezoneOffset","dates","isoWeeks","toJSON","isUTC","withSuffix","toIsoString","asSeconds","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","noGlobal",85,"webpackPolyfill","paths","children"],"mappings":"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","file":"profile.58d178165b3a69327b3b.js","sourcesContent":["var profile =\nwebpackJsonp_name_([7],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar angular = __webpack_require__(1);\n\tvar notification = __webpack_require__(23);\n\tvar moment = __webpack_require__(30);\n\t\n\tvar profile = angular.module(\"profile\", [\"ui.router\", \"ngResource\", \"global403Interceptor\", \"ajoslin.promise-tracker\", \"progress\", \"focusOn\", \"ngMessages\"]);\n\t\n\t__webpack_require__(24);\n\t__webpack_require__(25);\n\t__webpack_require__(26);\n\t__webpack_require__(27);\n\t__webpack_require__(28);\n\t__webpack_require__(29);\n\t\n\tprofile.factory(\"Me\", [\"$resource\", function ($resource) {\n\t  return $resource(\"/users/me\", {}, {\n\t    get: {\n\t      method: \"GET\",\n\t      transformResponse: function transformResponse(data, headers) {\n\t        data = JSON.parse(data);\n\t        data.created = new Date(data.created);\n\t        return data;\n\t      }\n\t    }\n\t  });\n\t}]);\n\t\n\tprofile.factory(\"QuizResults\", [\"$resource\", function ($resource) {\n\t  return $resource(\"/quiz/results/user/\" + window.currentUser.id, {}, {\n\t    query: {\n\t      method: \"GET\",\n\t      isArray: true,\n\t      transformResponse: function transformResponse(data, headers) {\n\t\n\t        data = JSON.parse(data);\n\t        data.forEach(function (result) {\n\t          result.created = new Date(result.created);\n\t        });\n\t        console.log(data);\n\t        return data;\n\t      }\n\t    }\n\t  });\n\t}]);\n\t\n\tprofile.config([\"$locationProvider\", \"$stateProvider\", function ($locationProvider, $stateProvider) {\n\t  $locationProvider.html5Mode(true);\n\t\n\t  $stateProvider.state(\"root\", {\n\t    abstract: true,\n\t    resolve: {\n\t      me: [\"Me\", function (Me) {\n\t        return Me.get();\n\t      }]\n\t    },\n\t    templateUrl: \"/profile/templates/partials/root\",\n\t    controller: \"ProfileRootCtrl\"\n\t  });\n\t\n\t  var states = {\n\t    \"root.aboutme\": {\n\t      url: \"/\",\n\t      title: \"Публичный профиль\",\n\t      templateUrl: \"/profile/templates/partials/aboutme\",\n\t      controller: \"ProfileAboutMeCtrl\"\n\t    },\n\t    \"root.account\": {\n\t      url: \"/account\",\n\t      title: \"Аккаунт\",\n\t      templateUrl: \"/profile/templates/partials/account\",\n\t      controller: \"ProfileAccountCtrl\"\n\t    },\n\t    \"root.quiz\": {\n\t      url: \"/quiz\",\n\t      title: \"Тесты\",\n\t      templateUrl: \"/profile/templates/partials/quiz\",\n\t      controller: \"ProfileQuizResultsCtrl\",\n\t      resolve: {\n\t        quizResults: function (QuizResults) {\n\t          return QuizResults.query();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  // enabled states depend on user, are set to global variable in index.jade\n\t  for (var key in states) {\n\t    if (~window.profileStatesEnabled.indexOf(key)) {\n\t      $stateProvider.state(key, states[key]);\n\t    }\n\t  }\n\t}]).controller(\"ProfileRootCtrl\", [\"$scope\", \"$state\", \"$timeout\", \"$http\", \"me\", \"promiseTracker\", function ($scope, $state, $timeout, $http, me, promiseTracker) {\n\t\n\t  //window.me = me;\n\t  $scope.me = me;\n\t\n\t  $scope.loadingTracker = promiseTracker();\n\t\n\t  $scope.states = $state.get().filter(function (state) {\n\t    return !state.abstract;\n\t  }).map(function (state) {\n\t    return {\n\t      title: state.title,\n\t      name: state.name,\n\t      url: state.url\n\t    };\n\t  });\n\t}]).controller(\"ProfileAboutMeCtrl\", [\"$scope\", \"me\", function ($scope, me) {\n\t\n\t  $scope.me = me;\n\t}]).controller(\"ProfileQuizResultsCtrl\", [\"$scope\", \"quizResults\", function ($scope, quizResults) {\n\t\n\t  $scope.quizResults = quizResults;\n\t}]).controller(\"ProfileAccountCtrl\", [\"$scope\", \"$http\", \"me\", \"Me\", function ($scope, $http, me, Me) {\n\t\n\t  $scope.me = me;\n\t\n\t  $scope.remove = function () {\n\t    var isSure = confirm(\"\" + me.displayName + \" (\" + me.email + \") - удалить пользователя без возможности восстановления?\");\n\t\n\t    if (!isSure) return;\n\t\n\t    $http({\n\t      method: \"DELETE\",\n\t      url: \"/users/me\",\n\t      tracker: $scope.loadingTracker,\n\t      headers: { \"Content-Type\": undefined },\n\t      transformRequest: angular.identity,\n\t      data: new FormData()\n\t    }).then(function (response) {\n\t\n\t      alert(\"Пользователь удалён.\");\n\t      window.location.href = \"/\";\n\t    }, function (response) {\n\t      new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n\t    });\n\t  };\n\t\n\t  $scope.removeProvider = function (providerName) {\n\t    var isSure = confirm(\"\" + providerName + \" - удалить привязку?\");\n\t\n\t    if (!isSure) return;\n\t\n\t    $http({\n\t      method: \"POST\",\n\t      url: \"/auth/disconnect/\" + providerName,\n\t      tracker: this.loadingTracker\n\t    }).then(function (response) {\n\t      // refresh user\n\t      $scope.me = Me.get();\n\t    }, function (response) {\n\t      new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n\t    });\n\t  };\n\t}]).filter(\"capitalize\", function () {\n\t  return function (str) {\n\t    return str[0].toUpperCase() + str.slice(1);\n\t  };\n\t}).filter(\"quizDate\", function () {\n\t  return function (date) {\n\t    return moment(date).format(\"D MMMM YYYY в LT\");\n\t  };\n\t}).filter(\"quizDuration\", function () {\n\t  return function (seconds) {\n\t    return moment.duration(seconds, \"seconds\").humanize();\n\t  };\n\t});\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = angular;\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module(\"profile\").directive(\"profileField\", [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: \"/profile/templates/partials/profileField\",\n\t    scope: {\n\t      title: \"@fieldTitle\",\n\t      name: \"@fieldName\",\n\t      formatValue: \"=?fieldFormatValue\",\n\t      value: \"=fieldValue\"\n\t    },\n\t    replace: true,\n\t    transclude: true,\n\t    link: function link(scope, element, attrs, noCtrl, transclude) {\n\t\n\t      if (!scope.formatValue) {\n\t        scope.formatValue = function (value) {\n\t          return value;\n\t        };\n\t      }\n\t\n\t      scope.loadingTracker = promiseTracker();\n\t\n\t      scope.edit = function () {\n\t        if (this.editing) return;\n\t        this.editing = true;\n\t        this.editingValue = this.value;\n\t      };\n\t\n\t      scope.submit = function () {\n\t        var _this = this;\n\t\n\t        if (this.form.$invalid) return;\n\t\n\t        if (this.value == this.editingValue) {\n\t          this.editing = false;\n\t          this.editingValue = \"\";\n\t          return;\n\t        }\n\t\n\t        var formData = new FormData();\n\t        formData.append(this.name, this.editingValue);\n\t\n\t        $http({\n\t          method: \"PATCH\",\n\t          url: \"/users/me\",\n\t          tracker: this.loadingTracker,\n\t          headers: { \"Content-Type\": undefined },\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t\n\t          if (_this.name == \"displayName\") {\n\t            new notification.Success(\"Изменение имени везде произойдёт после перезагрузки страницы.\", \"slow\");\n\t          } else if (_this.name == \"email\") {\n\t            new notification.Warning(\"Требуется подтвердить смену email, проверьте почту.\", \"slow\");\n\t          } else if (_this.name == \"profileName\") {\n\t            new notification.Success(\"Ваш профиль доступен по новому адресу, страница будет перезагружена\");\n\t            setTimeout(function () {\n\t              window.location.href = \"/profile/\" + this.editingValue + \"/account\";\n\t            }, 2000);\n\t          } else {\n\t            new notification.Success(\"Информация обновлена.\");\n\t          }\n\t\n\t          _this.editing = false;\n\t          _this.value = _this.editingValue;\n\t          _this.editingValue = \"\";\n\t        }, function (response) {\n\t          //console.log(response);\n\t          if (response.status == 400) {\n\t\n\t            new notification.Error(response.data.message);\n\t          } else if (response.status == 409) {\n\t            new notification.Error(response.data.message);\n\t          } else {\n\t            new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n\t          }\n\t        });\n\t      };\n\t\n\t      scope.cancel = function () {\n\t        var _this = this;\n\t\n\t        if (!this.editing) return;\n\t        // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n\t        // so we wait until the event bubbles and ends, and *then* cancel\n\t        $timeout(function () {\n\t          _this.editing = false;\n\t          _this.editingValue = \"\";\n\t        });\n\t      };\n\t\n\t      transclude(scope, function (clone, scope) {\n\t        element[0].querySelector(\"[control-transclude]\").append(clone[0]);\n\t      });\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\tvar thumb = __webpack_require__(51).thumb;\n\t\n\tangular.module(\"profile\").directive(\"profilePhoto\", [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: \"/profile/templates/partials/profilePhoto\",\n\t    scope: {\n\t      photo: \"=\"\n\t    },\n\t    replace: true,\n\t\n\t    link: function link(scope, element, attrs, noCtrl) {\n\t      scope.loadingTracker = promiseTracker();\n\t      var self = this;\n\t\n\t      scope.changePhoto = function () {\n\t        var fileInput = document.createElement(\"input\");\n\t        fileInput.type = \"file\";\n\t        fileInput.accept = \"image/*\";\n\t\n\t        fileInput.onchange = function () {\n\t\n\t          var reader = new FileReader();\n\t          var file = fileInput.files[0];\n\t\n\t          reader.onload = function (event) {\n\t            var image = new Image();\n\t            image.onload = function () {\n\t              if (image.width != image.height || image.width < 160) {\n\t                new notification.Error(\"Изображение должно быть квадратом, размер 160x160 или больше\");\n\t              } else {\n\t                uploadPhoto(file);\n\t              }\n\t            };\n\t            image.src = event.target.result;\n\t          };\n\t          reader.readAsDataURL(file);\n\t        };\n\t        fileInput.click();\n\t      };\n\t\n\t      function uploadPhoto(file) {\n\t\n\t        var formData = new FormData();\n\t        formData.append(\"photo\", file);\n\t\n\t        $http({\n\t          method: \"PATCH\",\n\t          url: \"/users/me\",\n\t          headers: { \"Content-Type\": undefined },\n\t          tracker: scope.loadingTracker,\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t          scope.photo = response.data.photo;\n\t          new notification.Success(\"Изображение обновлено.\");\n\t        }, function (response) {\n\t          if (response.status == 400) {\n\t            new notification.Error(\"Неверный тип файла или изображение повреждено.\");\n\t          } else {\n\t            new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  };\n\t}]).filter(\"thumb\", function () {\n\t  return thumb;\n\t});\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module(\"profile\").directive(\"profilePassword\", [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: \"/profile/templates/partials/profilePassword\",\n\t    scope: {\n\t      hasPassword: \"=\"\n\t    },\n\t    replace: true,\n\t    link: function link(scope, element, attrs, noCtrl, transclude) {\n\t\n\t      scope.password = \"\";\n\t      scope.passwordOld = \"\";\n\t\n\t      scope.loadingTracker = promiseTracker();\n\t\n\t      scope.edit = function () {\n\t        if (this.editing) return;\n\t        this.editing = true;\n\t\n\t        $timeout(function () {\n\t          var input = element[0].elements[scope.hasPassword ? \"passwordOld\" : \"password\"];\n\t          input.focus();\n\t        });\n\t      };\n\t\n\t      scope.submit = function () {\n\t        if (scope.form.$invalid) return;\n\t\n\t        var formData = new FormData();\n\t        formData.append(\"password\", this.password);\n\t        formData.append(\"passwordOld\", this.passwordOld);\n\t\n\t        $http({\n\t          method: \"PATCH\",\n\t          url: \"/users/me\",\n\t          tracker: this.loadingTracker,\n\t          headers: { \"Content-Type\": undefined },\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t          new notification.Success(\"Пароль обновлён.\");\n\t          scope.editing = false;\n\t          // now have password for sure\n\t          scope.hasPassword = true;\n\t\n\t          // and clean password fields\n\t          scope.password = \"\";\n\t          scope.passwordOld = \"\";\n\t          scope.form.$setPristine();\n\t        }, function (response) {\n\t          if (response.status == 400) {\n\t            new notification.Error(response.data.message || response.data.errors.password);\n\t          } else {\n\t            new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n\t          }\n\t        });\n\t      };\n\t\n\t      scope.cancel = function () {\n\t        var _this = this;\n\t\n\t        if (!this.editing) return;\n\t        // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n\t        // so we wait until the event bubbles and ends, and *then* cancel\n\t        $timeout(function () {\n\t          _this.editing = false;\n\t        });\n\t      };\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module(\"profile\").directive(\"profileAuthProviders\", [\"promiseTracker\", \"$http\", \"authPopup\", \"Me\", function (promiseTracker, $http, authPopup, Me) {\n\t  return {\n\t    templateUrl: \"/profile/templates/partials/profileAuthProviders\",\n\t    replace: true,\n\t\n\t    link: function link(scope) {\n\t\n\t      scope.connect = function (providerName) {\n\t        var _arguments = arguments;\n\t\n\t        authPopup(\"/auth/connect/\" + providerName, function () {\n\t          // refresh user\n\t          scope.me = Me.get();\n\t        }, function () {\n\t          console.error(\"fail\", _arguments);\n\t        });\n\t      };\n\t\n\t      scope.connected = function (providerName) {\n\t        var connected = false;\n\t\n\t        if (!scope.me.providers) return false;\n\t        scope.me.providers.forEach(function (provider) {\n\t          if (provider.name == providerName) connected = true;\n\t        });\n\t\n\t        return connected;\n\t      };\n\t    }\n\t  };\n\t}]).service(\"authPopup\", function () {\n\t\n\t  var authPopup;\n\t\n\t  return function (url, onSuccess, onFail) {\n\t\n\t    if (authPopup && !authPopup.closed) {\n\t      authPopup.close(); // close old popup if any\n\t    }\n\t    var width = 800,\n\t        height = 600;\n\t    var top = (window.outerHeight - height) / 2;\n\t    var left = (window.outerWidth - width) / 2;\n\t\n\t    window.authModal = {\n\t      onAuthSuccess: onSuccess,\n\t      onAuthFailure: onFail\n\t    };\n\t\n\t    authPopup = window.open(url, \"authModal\", \"width=\" + width + \",height=\" + height + \",scrollbars=0,top=\" + top + \",left=\" + left);\n\t  };\n\t});\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module(\"profile\").directive(\"dateValidator\", function () {\n\t  return {\n\t    require: \"ngModel\",\n\t    link: function link(scope, element, attrs, ngModel) {\n\t\n\t      ngModel.$validators.date = function (modelValue, viewValue) {\n\t        var value = modelValue || viewValue;\n\t        if (!value) return true;\n\t        var split = value.split(\".\");\n\t        if (split.length != 3) return false;\n\t        var date = new Date(split[2], split[1] - 1, split[0]);\n\t\n\t        if (split[2].length != 4) return false;\n\t\n\t        return date.getFullYear() == split[2] && date.getMonth() == split[1] - 1 && date.getDate() == split[0];\n\t      };\n\t    }\n\t  };\n\t});\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\tvar moment = __webpack_require__(30);\n\t\n\tangular.module(\"profile\").directive(\"dateRangeValidator\", function () {\n\t  return {\n\t    require: \"ngModel\",\n\t    link: function link(scope, element, attrs, ngModel) {\n\t\n\t      var range = attrs.dateRangeValidator.split(\"-\");\n\t      var from = range[0] ? moment(range[0], \"DD.MM.YYYY\").toDate() : new Date();\n\t      var to = range[1] ? moment(range[1], \"DD.MM.YYYY\").toDate() : new Date();\n\t\n\t      ngModel.$validators.dateRange = function (modelValue, viewValue) {\n\t        var value = modelValue || viewValue;\n\t        if (!value) return true;\n\t\n\t        var split = value.split(\".\");\n\t        if (split.length != 3) return false;\n\t        var date = new Date(split[2], split[1] - 1, split[0]);\n\t\n\t        if (split[2].length != 4) return false;\n\t\n\t        return date >= from && date <= to;\n\t      };\n\t    }\n\t  };\n\t});\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t__webpack_require__(57);\n\t\n\tmodule.exports = __webpack_require__(58);\n\n/***/ },\n\n/***/ 51:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.thumb = function (url, width, height) {\n\t  // sometimes this may be called without url\n\t  if (!url) return url;\n\t\n\t  var pixelRatio = window.devicePixelRatio;\n\t\n\t  // return pixelRatio times larger image for retina\n\t  width *= pixelRatio;\n\t  height *= pixelRatio;\n\t\n\t  var modifier = width <= 160 && height <= 160 ? \"t\" : width <= 320 && height <= 320 ? \"m\" : width <= 640 && height <= 640 ? \"i\" : width <= 1024 && height <= 1024 ? \"h\" : \"\";\n\t\n\t  return url.slice(0, url.lastIndexOf(\".\")) + modifier + url.slice(url.lastIndexOf(\".\"));\n\t};\n\n/***/ },\n\n/***/ 57:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration\n\t// locale : russian (ru)\n\t// author : Viktorminator : https://github.com/Viktorminator\n\t// Author : Menelion Elensúle : https://github.com/Oire\n\t\n\t\"use strict\";\n\t\n\t(function (factory) {\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(58)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t    } else if (typeof exports === \"object\") {\n\t        module.exports = factory(require(\"../moment\")); // Node\n\t    } else {\n\t        factory((typeof global !== \"undefined\" ? global : this).moment); // node or other global\n\t    }\n\t})(function (moment) {\n\t    function plural(word, num) {\n\t        var forms = word.split(\"_\");\n\t        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n\t    }\n\t\n\t    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\t        var format = {\n\t            mm: withoutSuffix ? \"минута_минуты_минут\" : \"минуту_минуты_минут\",\n\t            hh: \"час_часа_часов\",\n\t            dd: \"день_дня_дней\",\n\t            MM: \"месяц_месяца_месяцев\",\n\t            yy: \"год_года_лет\"\n\t        };\n\t        if (key === \"m\") {\n\t            return withoutSuffix ? \"минута\" : \"минуту\";\n\t        } else {\n\t            return number + \" \" + plural(format[key], +number);\n\t        }\n\t    }\n\t\n\t    function monthsCaseReplace(m, format) {\n\t        var months = {\n\t            nominative: \"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\"),\n\t            accusative: \"января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря\".split(\"_\")\n\t        },\n\t            nounCase = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/.test(format) ? \"accusative\" : \"nominative\";\n\t\n\t        return months[nounCase][m.month()];\n\t    }\n\t\n\t    function monthsShortCaseReplace(m, format) {\n\t        var monthsShort = {\n\t            nominative: \"янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек\".split(\"_\"),\n\t            accusative: \"янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек\".split(\"_\")\n\t        },\n\t            nounCase = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/.test(format) ? \"accusative\" : \"nominative\";\n\t\n\t        return monthsShort[nounCase][m.month()];\n\t    }\n\t\n\t    function weekdaysCaseReplace(m, format) {\n\t        var weekdays = {\n\t            nominative: \"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота\".split(\"_\"),\n\t            accusative: \"воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу\".split(\"_\")\n\t        },\n\t            nounCase = /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/.test(format) ? \"accusative\" : \"nominative\";\n\t\n\t        return weekdays[nounCase][m.day()];\n\t    }\n\t\n\t    return moment.defineLocale(\"ru\", {\n\t        months: monthsCaseReplace,\n\t        monthsShort: monthsShortCaseReplace,\n\t        weekdays: weekdaysCaseReplace,\n\t        weekdaysShort: \"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),\n\t        weekdaysMin: \"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),\n\t        monthsParse: [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n\t        longDateFormat: {\n\t            LT: \"HH:mm\",\n\t            LTS: \"LT:ss\",\n\t            L: \"DD.MM.YYYY\",\n\t            LL: \"D MMMM YYYY г.\",\n\t            LLL: \"D MMMM YYYY г., LT\",\n\t            LLLL: \"dddd, D MMMM YYYY г., LT\"\n\t        },\n\t        calendar: {\n\t            sameDay: \"[Сегодня в] LT\",\n\t            nextDay: \"[Завтра в] LT\",\n\t            lastDay: \"[Вчера в] LT\",\n\t            nextWeek: function nextWeek() {\n\t                return this.day() === 2 ? \"[Во] dddd [в] LT\" : \"[В] dddd [в] LT\";\n\t            },\n\t            lastWeek: function lastWeek(now) {\n\t                if (now.week() !== this.week()) {\n\t                    switch (this.day()) {\n\t                        case 0:\n\t                            return \"[В прошлое] dddd [в] LT\";\n\t                        case 1:\n\t                        case 2:\n\t                        case 4:\n\t                            return \"[В прошлый] dddd [в] LT\";\n\t                        case 3:\n\t                        case 5:\n\t                        case 6:\n\t                            return \"[В прошлую] dddd [в] LT\";\n\t                    }\n\t                } else {\n\t                    if (this.day() === 2) {\n\t                        return \"[Во] dddd [в] LT\";\n\t                    } else {\n\t                        return \"[В] dddd [в] LT\";\n\t                    }\n\t                }\n\t            },\n\t            sameElse: \"L\"\n\t        },\n\t        relativeTime: {\n\t            future: \"через %s\",\n\t            past: \"%s назад\",\n\t            s: \"несколько секунд\",\n\t            m: relativeTimeWithPlural,\n\t            mm: relativeTimeWithPlural,\n\t            h: \"час\",\n\t            hh: relativeTimeWithPlural,\n\t            d: \"день\",\n\t            dd: relativeTimeWithPlural,\n\t            M: \"месяц\",\n\t            MM: relativeTimeWithPlural,\n\t            y: \"год\",\n\t            yy: relativeTimeWithPlural\n\t        },\n\t\n\t        meridiemParse: /ночи|утра|дня|вечера/i,\n\t        isPM: function isPM(input) {\n\t            return /^(дня|вечера)$/.test(input);\n\t        },\n\t\n\t        meridiem: function meridiem(hour, minute, isLower) {\n\t            if (hour < 4) {\n\t                return \"ночи\";\n\t            } else if (hour < 12) {\n\t                return \"утра\";\n\t            } else if (hour < 17) {\n\t                return \"дня\";\n\t            } else {\n\t                return \"вечера\";\n\t            }\n\t        },\n\t\n\t        ordinalParse: /\\d{1,2}-(й|го|я)/,\n\t        ordinal: function ordinal(number, period) {\n\t            switch (period) {\n\t                case \"M\":\n\t                case \"d\":\n\t                case \"DDD\":\n\t                    return number + \"-й\";\n\t                case \"D\":\n\t                    return number + \"-го\";\n\t                case \"w\":\n\t                case \"W\":\n\t                    return number + \"-я\";\n\t                default:\n\t                    return number;\n\t            }\n\t        },\n\t\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 7 // The week that contains Jan 1st is the first week of the year.\n\t        }\n\t    });\n\t});\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {//! moment.js\n\t//! version : 2.9.0\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t\"use strict\";\n\t\n\t(function (undefined) {\n\t    /************************************\n\t        Constants\n\t    ************************************/\n\t\n\t    var moment,\n\t        VERSION = \"2.9.0\",\n\t\n\t    // the global-scope this is NOT the global object in Node.js\n\t    globalScope = typeof global !== \"undefined\" && (typeof window === \"undefined\" || window === global.window) ? global : this,\n\t        oldGlobalMoment,\n\t        round = Math.round,\n\t        hasOwnProperty = Object.prototype.hasOwnProperty,\n\t        i,\n\t        YEAR = 0,\n\t        MONTH = 1,\n\t        DATE = 2,\n\t        HOUR = 3,\n\t        MINUTE = 4,\n\t        SECOND = 5,\n\t        MILLISECOND = 6,\n\t\n\t    // internal storage for locale config files\n\t    locales = {},\n\t\n\t    // extra moment internal properties (plugins register props here)\n\t    momentProperties = [],\n\t\n\t    // check for nodeJS\n\t    hasModule = typeof module !== \"undefined\" && module && module.exports,\n\t\n\t    // ASP.NET json date format regex\n\t    aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n\t        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\t\n\t    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t    isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\t\n\t    // format tokens\n\t    formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n\t        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\t\n\t    // parsing token regexes\n\t    parseTokenOneOrTwoDigits = /\\d\\d?/,\n\t        // 0 - 99\n\t    parseTokenOneToThreeDigits = /\\d{1,3}/,\n\t        // 0 - 999\n\t    parseTokenOneToFourDigits = /\\d{1,4}/,\n\t        // 0 - 9999\n\t    parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/,\n\t        // -999,999 - 999,999\n\t    parseTokenDigits = /\\d+/,\n\t        // nonzero number of digits\n\t    parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,\n\t        // any word (or two) characters or numbers including two/three word month in arabic.\n\t    parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi,\n\t        // +00:00 -00:00 +0000 -0000 or Z\n\t    parseTokenT = /T/i,\n\t        // T (ISO separator)\n\t    parseTokenOffsetMs = /[\\+\\-]?\\d+/,\n\t        // 1234567890123\n\t    parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/,\n\t        // 123456789 123456789.123\n\t\n\t    //strict parsing regexes\n\t    parseTokenOneDigit = /\\d/,\n\t        // 0 - 9\n\t    parseTokenTwoDigits = /\\d\\d/,\n\t        // 00 - 99\n\t    parseTokenThreeDigits = /\\d{3}/,\n\t        // 000 - 999\n\t    parseTokenFourDigits = /\\d{4}/,\n\t        // 0000 - 9999\n\t    parseTokenSixDigits = /[+-]?\\d{6}/,\n\t        // -999,999 - 999,999\n\t    parseTokenSignedNumber = /[+-]?\\d+/,\n\t        // -inf - inf\n\t\n\t    // iso 8601 regex\n\t    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\t    isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\t        isoFormat = \"YYYY-MM-DDTHH:mm:ssZ\",\n\t        isoDates = [[\"YYYYYY-MM-DD\", /[+-]\\d{6}-\\d{2}-\\d{2}/], [\"YYYY-MM-DD\", /\\d{4}-\\d{2}-\\d{2}/], [\"GGGG-[W]WW-E\", /\\d{4}-W\\d{2}-\\d/], [\"GGGG-[W]WW\", /\\d{4}-W\\d{2}/], [\"YYYY-DDD\", /\\d{4}-\\d{3}/]],\n\t\n\t    // iso time formats and regexes\n\t    isoTimes = [[\"HH:mm:ss.SSSS\", /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/], [\"HH:mm:ss\", /(T| )\\d\\d:\\d\\d:\\d\\d/], [\"HH:mm\", /(T| )\\d\\d:\\d\\d/], [\"HH\", /(T| )\\d\\d/]],\n\t\n\t    // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']\n\t    parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\t\n\t    // getter and setter names\n\t    proxyGettersAndSetters = \"Date|Hours|Minutes|Seconds|Milliseconds\".split(\"|\"),\n\t        unitMillisecondFactors = {\n\t        Milliseconds: 1,\n\t        Seconds: 1000,\n\t        Minutes: 60000,\n\t        Hours: 3600000,\n\t        Days: 86400000,\n\t        Months: 2592000000,\n\t        Years: 31536000000\n\t    },\n\t        unitAliases = {\n\t        ms: \"millisecond\",\n\t        s: \"second\",\n\t        m: \"minute\",\n\t        h: \"hour\",\n\t        d: \"day\",\n\t        D: \"date\",\n\t        w: \"week\",\n\t        W: \"isoWeek\",\n\t        M: \"month\",\n\t        Q: \"quarter\",\n\t        y: \"year\",\n\t        DDD: \"dayOfYear\",\n\t        e: \"weekday\",\n\t        E: \"isoWeekday\",\n\t        gg: \"weekYear\",\n\t        GG: \"isoWeekYear\"\n\t    },\n\t        camelFunctions = {\n\t        dayofyear: \"dayOfYear\",\n\t        isoweekday: \"isoWeekday\",\n\t        isoweek: \"isoWeek\",\n\t        weekyear: \"weekYear\",\n\t        isoweekyear: \"isoWeekYear\"\n\t    },\n\t\n\t    // format function strings\n\t    formatFunctions = {},\n\t\n\t    // default relative time thresholds\n\t    relativeTimeThresholds = {\n\t        s: 45, // seconds to minute\n\t        m: 45, // minutes to hour\n\t        h: 22, // hours to day\n\t        d: 26, // days to month\n\t        M: 11 // months to year\n\t    },\n\t\n\t    // tokens to ordinalize and pad\n\t    ordinalizeTokens = \"DDD w W M D d\".split(\" \"),\n\t        paddedTokens = \"M D H h m s w W\".split(\" \"),\n\t        formatTokenFunctions = {\n\t        M: function M() {\n\t            return this.month() + 1;\n\t        },\n\t        MMM: function MMM(format) {\n\t            return this.localeData().monthsShort(this, format);\n\t        },\n\t        MMMM: function MMMM(format) {\n\t            return this.localeData().months(this, format);\n\t        },\n\t        D: function D() {\n\t            return this.date();\n\t        },\n\t        DDD: function DDD() {\n\t            return this.dayOfYear();\n\t        },\n\t        d: function d() {\n\t            return this.day();\n\t        },\n\t        dd: function dd(format) {\n\t            return this.localeData().weekdaysMin(this, format);\n\t        },\n\t        ddd: function ddd(format) {\n\t            return this.localeData().weekdaysShort(this, format);\n\t        },\n\t        dddd: function dddd(format) {\n\t            return this.localeData().weekdays(this, format);\n\t        },\n\t        w: function w() {\n\t            return this.week();\n\t        },\n\t        W: function W() {\n\t            return this.isoWeek();\n\t        },\n\t        YY: function YY() {\n\t            return leftZeroFill(this.year() % 100, 2);\n\t        },\n\t        YYYY: function YYYY() {\n\t            return leftZeroFill(this.year(), 4);\n\t        },\n\t        YYYYY: function YYYYY() {\n\t            return leftZeroFill(this.year(), 5);\n\t        },\n\t        YYYYYY: function YYYYYY() {\n\t            var y = this.year(),\n\t                sign = y >= 0 ? \"+\" : \"-\";\n\t            return sign + leftZeroFill(Math.abs(y), 6);\n\t        },\n\t        gg: function gg() {\n\t            return leftZeroFill(this.weekYear() % 100, 2);\n\t        },\n\t        gggg: function gggg() {\n\t            return leftZeroFill(this.weekYear(), 4);\n\t        },\n\t        ggggg: function ggggg() {\n\t            return leftZeroFill(this.weekYear(), 5);\n\t        },\n\t        GG: function GG() {\n\t            return leftZeroFill(this.isoWeekYear() % 100, 2);\n\t        },\n\t        GGGG: function GGGG() {\n\t            return leftZeroFill(this.isoWeekYear(), 4);\n\t        },\n\t        GGGGG: function GGGGG() {\n\t            return leftZeroFill(this.isoWeekYear(), 5);\n\t        },\n\t        e: function e() {\n\t            return this.weekday();\n\t        },\n\t        E: function E() {\n\t            return this.isoWeekday();\n\t        },\n\t        a: function a() {\n\t            return this.localeData().meridiem(this.hours(), this.minutes(), true);\n\t        },\n\t        A: function A() {\n\t            return this.localeData().meridiem(this.hours(), this.minutes(), false);\n\t        },\n\t        H: function H() {\n\t            return this.hours();\n\t        },\n\t        h: function h() {\n\t            return this.hours() % 12 || 12;\n\t        },\n\t        m: function m() {\n\t            return this.minutes();\n\t        },\n\t        s: function s() {\n\t            return this.seconds();\n\t        },\n\t        S: function S() {\n\t            return toInt(this.milliseconds() / 100);\n\t        },\n\t        SS: function SS() {\n\t            return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n\t        },\n\t        SSS: function SSS() {\n\t            return leftZeroFill(this.milliseconds(), 3);\n\t        },\n\t        SSSS: function SSSS() {\n\t            return leftZeroFill(this.milliseconds(), 3);\n\t        },\n\t        Z: function Z() {\n\t            var a = this.utcOffset(),\n\t                b = \"+\";\n\t            if (a < 0) {\n\t                a = -a;\n\t                b = \"-\";\n\t            }\n\t            return b + leftZeroFill(toInt(a / 60), 2) + \":\" + leftZeroFill(toInt(a) % 60, 2);\n\t        },\n\t        ZZ: function ZZ() {\n\t            var a = this.utcOffset(),\n\t                b = \"+\";\n\t            if (a < 0) {\n\t                a = -a;\n\t                b = \"-\";\n\t            }\n\t            return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n\t        },\n\t        z: function z() {\n\t            return this.zoneAbbr();\n\t        },\n\t        zz: function zz() {\n\t            return this.zoneName();\n\t        },\n\t        x: function x() {\n\t            return this.valueOf();\n\t        },\n\t        X: function X() {\n\t            return this.unix();\n\t        },\n\t        Q: function Q() {\n\t            return this.quarter();\n\t        }\n\t    },\n\t        deprecations = {},\n\t        lists = [\"months\", \"monthsShort\", \"weekdays\", \"weekdaysShort\", \"weekdaysMin\"],\n\t        updateInProgress = false;\n\t\n\t    // Pick the first defined of two or three arguments. dfl comes from\n\t    // default.\n\t    function dfl(a, b, c) {\n\t        switch (arguments.length) {\n\t            case 2:\n\t                return a != null ? a : b;\n\t            case 3:\n\t                return a != null ? a : b != null ? b : c;\n\t            default:\n\t                throw new Error(\"Implement me\");\n\t        }\n\t    }\n\t\n\t    function hasOwnProp(a, b) {\n\t        return hasOwnProperty.call(a, b);\n\t    }\n\t\n\t    function defaultParsingFlags() {\n\t        // We need to deep clone this object, and es5 standard is not very\n\t        // helpful.\n\t        return {\n\t            empty: false,\n\t            unusedTokens: [],\n\t            unusedInput: [],\n\t            overflow: -2,\n\t            charsLeftOver: 0,\n\t            nullInput: false,\n\t            invalidMonth: null,\n\t            invalidFormat: false,\n\t            userInvalidated: false,\n\t            iso: false\n\t        };\n\t    }\n\t\n\t    function printMsg(msg) {\n\t        if (moment.suppressDeprecationWarnings === false && typeof console !== \"undefined\" && console.warn) {\n\t            console.warn(\"Deprecation warning: \" + msg);\n\t        }\n\t    }\n\t\n\t    function deprecate(msg, fn) {\n\t        var firstTime = true;\n\t        return extend(function () {\n\t            if (firstTime) {\n\t                printMsg(msg);\n\t                firstTime = false;\n\t            }\n\t            return fn.apply(this, arguments);\n\t        }, fn);\n\t    }\n\t\n\t    function deprecateSimple(name, msg) {\n\t        if (!deprecations[name]) {\n\t            printMsg(msg);\n\t            deprecations[name] = true;\n\t        }\n\t    }\n\t\n\t    function padToken(func, count) {\n\t        return function (a) {\n\t            return leftZeroFill(func.call(this, a), count);\n\t        };\n\t    }\n\t    function ordinalizeToken(func, period) {\n\t        return function (a) {\n\t            return this.localeData().ordinal(func.call(this, a), period);\n\t        };\n\t    }\n\t\n\t    function monthDiff(a, b) {\n\t        // difference in months\n\t        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n\t\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, \"months\"),\n\t            anchor2,\n\t            adjust;\n\t\n\t        if (b - anchor < 0) {\n\t            anchor2 = a.clone().add(wholeMonthDiff - 1, \"months\");\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor - anchor2);\n\t        } else {\n\t            anchor2 = a.clone().add(wholeMonthDiff + 1, \"months\");\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor2 - anchor);\n\t        }\n\t\n\t        return -(wholeMonthDiff + adjust);\n\t    }\n\t\n\t    while (ordinalizeTokens.length) {\n\t        i = ordinalizeTokens.pop();\n\t        formatTokenFunctions[i + \"o\"] = ordinalizeToken(formatTokenFunctions[i], i);\n\t    }\n\t    while (paddedTokens.length) {\n\t        i = paddedTokens.pop();\n\t        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n\t    }\n\t    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\t\n\t    function meridiemFixWrap(locale, hour, meridiem) {\n\t        var isPm;\n\t\n\t        if (meridiem == null) {\n\t            // nothing to do\n\t            return hour;\n\t        }\n\t        if (locale.meridiemHour != null) {\n\t            return locale.meridiemHour(hour, meridiem);\n\t        } else if (locale.isPM != null) {\n\t            // Fallback\n\t            isPm = locale.isPM(meridiem);\n\t            if (isPm && hour < 12) {\n\t                hour += 12;\n\t            }\n\t            if (!isPm && hour === 12) {\n\t                hour = 0;\n\t            }\n\t            return hour;\n\t        } else {\n\t            // thie is not supposed to happen\n\t            return hour;\n\t        }\n\t    }\n\t\n\t    /************************************\n\t        Constructors\n\t    ************************************/\n\t\n\t    function Locale() {}\n\t\n\t    // Moment prototype object\n\t    function Moment(config, skipOverflow) {\n\t        if (skipOverflow !== false) {\n\t            checkOverflow(config);\n\t        }\n\t        copyConfig(this, config);\n\t        this._d = new Date(+config._d);\n\t        // Prevent infinite loop in case updateOffset creates new moment\n\t        // objects.\n\t        if (updateInProgress === false) {\n\t            updateInProgress = true;\n\t            moment.updateOffset(this);\n\t            updateInProgress = false;\n\t        }\n\t    }\n\t\n\t    // Duration Constructor\n\t    function Duration(duration) {\n\t        var normalizedInput = normalizeObjectUnits(duration),\n\t            years = normalizedInput.year || 0,\n\t            quarters = normalizedInput.quarter || 0,\n\t            months = normalizedInput.month || 0,\n\t            weeks = normalizedInput.week || 0,\n\t            days = normalizedInput.day || 0,\n\t            hours = normalizedInput.hour || 0,\n\t            minutes = normalizedInput.minute || 0,\n\t            seconds = normalizedInput.second || 0,\n\t            milliseconds = normalizedInput.millisecond || 0;\n\t\n\t        // representation for dateAddRemove\n\t        this._milliseconds = +milliseconds + seconds * 1000 + // 1000\n\t        minutes * 60000 + // 1000 * 60\n\t        hours * 3600000; // 1000 * 60 * 60\n\t        // Because of dateAddRemove treats 24 hours as different from a\n\t        // day when working around DST, we need to store them separately\n\t        this._days = +days + weeks * 7;\n\t        // It is impossible translate months into days without knowing\n\t        // which months you are are talking about, so we have to store\n\t        // it separately.\n\t        this._months = +months + quarters * 3 + years * 12;\n\t\n\t        this._data = {};\n\t\n\t        this._locale = moment.localeData();\n\t\n\t        this._bubble();\n\t    }\n\t\n\t    /************************************\n\t        Helpers\n\t    ************************************/\n\t\n\t    function extend(a, b) {\n\t        for (var i in b) {\n\t            if (hasOwnProp(b, i)) {\n\t                a[i] = b[i];\n\t            }\n\t        }\n\t\n\t        if (hasOwnProp(b, \"toString\")) {\n\t            a.toString = b.toString;\n\t        }\n\t\n\t        if (hasOwnProp(b, \"valueOf\")) {\n\t            a.valueOf = b.valueOf;\n\t        }\n\t\n\t        return a;\n\t    }\n\t\n\t    function copyConfig(to, from) {\n\t        var i, prop, val;\n\t\n\t        if (typeof from._isAMomentObject !== \"undefined\") {\n\t            to._isAMomentObject = from._isAMomentObject;\n\t        }\n\t        if (typeof from._i !== \"undefined\") {\n\t            to._i = from._i;\n\t        }\n\t        if (typeof from._f !== \"undefined\") {\n\t            to._f = from._f;\n\t        }\n\t        if (typeof from._l !== \"undefined\") {\n\t            to._l = from._l;\n\t        }\n\t        if (typeof from._strict !== \"undefined\") {\n\t            to._strict = from._strict;\n\t        }\n\t        if (typeof from._tzm !== \"undefined\") {\n\t            to._tzm = from._tzm;\n\t        }\n\t        if (typeof from._isUTC !== \"undefined\") {\n\t            to._isUTC = from._isUTC;\n\t        }\n\t        if (typeof from._offset !== \"undefined\") {\n\t            to._offset = from._offset;\n\t        }\n\t        if (typeof from._pf !== \"undefined\") {\n\t            to._pf = from._pf;\n\t        }\n\t        if (typeof from._locale !== \"undefined\") {\n\t            to._locale = from._locale;\n\t        }\n\t\n\t        if (momentProperties.length > 0) {\n\t            for (i in momentProperties) {\n\t                prop = momentProperties[i];\n\t                val = from[prop];\n\t                if (typeof val !== \"undefined\") {\n\t                    to[prop] = val;\n\t                }\n\t            }\n\t        }\n\t\n\t        return to;\n\t    }\n\t\n\t    function absRound(number) {\n\t        if (number < 0) {\n\t            return Math.ceil(number);\n\t        } else {\n\t            return Math.floor(number);\n\t        }\n\t    }\n\t\n\t    // left zero fill a number\n\t    // see http://jsperf.com/left-zero-filling for performance comparison\n\t    function leftZeroFill(number, targetLength, forceSign) {\n\t        var output = \"\" + Math.abs(number),\n\t            sign = number >= 0;\n\t\n\t        while (output.length < targetLength) {\n\t            output = \"0\" + output;\n\t        }\n\t        return (sign ? forceSign ? \"+\" : \"\" : \"-\") + output;\n\t    }\n\t\n\t    function positiveMomentsDifference(base, other) {\n\t        var res = { milliseconds: 0, months: 0 };\n\t\n\t        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\t        if (base.clone().add(res.months, \"M\").isAfter(other)) {\n\t            --res.months;\n\t        }\n\t\n\t        res.milliseconds = +other - +base.clone().add(res.months, \"M\");\n\t\n\t        return res;\n\t    }\n\t\n\t    function momentsDifference(base, other) {\n\t        var res;\n\t        other = makeAs(other, base);\n\t        if (base.isBefore(other)) {\n\t            res = positiveMomentsDifference(base, other);\n\t        } else {\n\t            res = positiveMomentsDifference(other, base);\n\t            res.milliseconds = -res.milliseconds;\n\t            res.months = -res.months;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    // TODO: remove 'name' arg after deprecation is removed\n\t    function createAdder(direction, name) {\n\t        return function (val, period) {\n\t            var dur, tmp;\n\t            //invert the arguments, but complain about it\n\t            if (period !== null && !isNaN(+period)) {\n\t                deprecateSimple(name, \"moment().\" + name + \"(period, number) is deprecated. Please use moment().\" + name + \"(number, period).\");\n\t                tmp = val;val = period;period = tmp;\n\t            }\n\t\n\t            val = typeof val === \"string\" ? +val : val;\n\t            dur = moment.duration(val, period);\n\t            addOrSubtractDurationFromMoment(this, dur, direction);\n\t            return this;\n\t        };\n\t    }\n\t\n\t    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n\t        var milliseconds = duration._milliseconds,\n\t            days = duration._days,\n\t            months = duration._months;\n\t        updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t        if (milliseconds) {\n\t            mom._d.setTime(+mom._d + milliseconds * isAdding);\n\t        }\n\t        if (days) {\n\t            rawSetter(mom, \"Date\", rawGetter(mom, \"Date\") + days * isAdding);\n\t        }\n\t        if (months) {\n\t            rawMonthSetter(mom, rawGetter(mom, \"Month\") + months * isAdding);\n\t        }\n\t        if (updateOffset) {\n\t            moment.updateOffset(mom, days || months);\n\t        }\n\t    }\n\t\n\t    // check if is an array\n\t    function isArray(input) {\n\t        return Object.prototype.toString.call(input) === \"[object Array]\";\n\t    }\n\t\n\t    function isDate(input) {\n\t        return Object.prototype.toString.call(input) === \"[object Date]\" || input instanceof Date;\n\t    }\n\t\n\t    // compare two arrays, return the number of differences\n\t    function compareArrays(array1, array2, dontConvert) {\n\t        var len = Math.min(array1.length, array2.length),\n\t            lengthDiff = Math.abs(array1.length - array2.length),\n\t            diffs = 0,\n\t            i;\n\t        for (i = 0; i < len; i++) {\n\t            if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n\t                diffs++;\n\t            }\n\t        }\n\t        return diffs + lengthDiff;\n\t    }\n\t\n\t    function normalizeUnits(units) {\n\t        if (units) {\n\t            var lowered = units.toLowerCase().replace(/(.)s$/, \"$1\");\n\t            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n\t        }\n\t        return units;\n\t    }\n\t\n\t    function normalizeObjectUnits(inputObject) {\n\t        var normalizedInput = {},\n\t            normalizedProp,\n\t            prop;\n\t\n\t        for (prop in inputObject) {\n\t            if (hasOwnProp(inputObject, prop)) {\n\t                normalizedProp = normalizeUnits(prop);\n\t                if (normalizedProp) {\n\t                    normalizedInput[normalizedProp] = inputObject[prop];\n\t                }\n\t            }\n\t        }\n\t\n\t        return normalizedInput;\n\t    }\n\t\n\t    function makeList(field) {\n\t        var count, setter;\n\t\n\t        if (field.indexOf(\"week\") === 0) {\n\t            count = 7;\n\t            setter = \"day\";\n\t        } else if (field.indexOf(\"month\") === 0) {\n\t            count = 12;\n\t            setter = \"month\";\n\t        } else {\n\t            return;\n\t        }\n\t\n\t        moment[field] = function (format, index) {\n\t            var i,\n\t                getter,\n\t                method = moment._locale[field],\n\t                results = [];\n\t\n\t            if (typeof format === \"number\") {\n\t                index = format;\n\t                format = undefined;\n\t            }\n\t\n\t            getter = function (i) {\n\t                var m = moment().utc().set(setter, i);\n\t                return method.call(moment._locale, m, format || \"\");\n\t            };\n\t\n\t            if (index != null) {\n\t                return getter(index);\n\t            } else {\n\t                for (i = 0; i < count; i++) {\n\t                    results.push(getter(i));\n\t                }\n\t                return results;\n\t            }\n\t        };\n\t    }\n\t\n\t    function toInt(argumentForCoercion) {\n\t        var coercedNumber = +argumentForCoercion,\n\t            value = 0;\n\t\n\t        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t            if (coercedNumber >= 0) {\n\t                value = Math.floor(coercedNumber);\n\t            } else {\n\t                value = Math.ceil(coercedNumber);\n\t            }\n\t        }\n\t\n\t        return value;\n\t    }\n\t\n\t    function daysInMonth(year, month) {\n\t        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t    }\n\t\n\t    function weeksInYear(year, dow, doy) {\n\t        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n\t    }\n\t\n\t    function daysInYear(year) {\n\t        return isLeapYear(year) ? 366 : 365;\n\t    }\n\t\n\t    function isLeapYear(year) {\n\t        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n\t    }\n\t\n\t    function checkOverflow(m) {\n\t        var overflow;\n\t        if (m._a && m._pf.overflow === -2) {\n\t            overflow = m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH : m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE : m._a[HOUR] < 0 || m._a[HOUR] > 24 || m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 || m._a[SECOND] !== 0 || m._a[MILLISECOND] !== 0) ? HOUR : m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE : m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND : m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\t\n\t            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t                overflow = DATE;\n\t            }\n\t\n\t            m._pf.overflow = overflow;\n\t        }\n\t    }\n\t\n\t    function isValid(m) {\n\t        if (m._isValid == null) {\n\t            m._isValid = !isNaN(m._d.getTime()) && m._pf.overflow < 0 && !m._pf.empty && !m._pf.invalidMonth && !m._pf.nullInput && !m._pf.invalidFormat && !m._pf.userInvalidated;\n\t\n\t            if (m._strict) {\n\t                m._isValid = m._isValid && m._pf.charsLeftOver === 0 && m._pf.unusedTokens.length === 0 && m._pf.bigHour === undefined;\n\t            }\n\t        }\n\t        return m._isValid;\n\t    }\n\t\n\t    function normalizeLocale(key) {\n\t        return key ? key.toLowerCase().replace(\"_\", \"-\") : key;\n\t    }\n\t\n\t    // pick the locale from the array\n\t    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\t    function chooseLocale(names) {\n\t        var i = 0,\n\t            j,\n\t            next,\n\t            locale,\n\t            split;\n\t\n\t        while (i < names.length) {\n\t            split = normalizeLocale(names[i]).split(\"-\");\n\t            j = split.length;\n\t            next = normalizeLocale(names[i + 1]);\n\t            next = next ? next.split(\"-\") : null;\n\t            while (j > 0) {\n\t                locale = loadLocale(split.slice(0, j).join(\"-\"));\n\t                if (locale) {\n\t                    return locale;\n\t                }\n\t                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                    //the next array item is better than a shallower substring of this one\n\t                    break;\n\t                }\n\t                j--;\n\t            }\n\t            i++;\n\t        }\n\t        return null;\n\t    }\n\t\n\t    function loadLocale(name) {\n\t        var oldLocale = null;\n\t        if (!locales[name] && hasModule) {\n\t            try {\n\t                oldLocale = moment.locale();\n\t                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\t                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n\t                moment.locale(oldLocale);\n\t            } catch (e) {}\n\t        }\n\t        return locales[name];\n\t    }\n\t\n\t    // Return a moment from input, that is local/utc/utcOffset equivalent to\n\t    // model.\n\t    function makeAs(input, model) {\n\t        var res, diff;\n\t        if (model._isUTC) {\n\t            res = model.clone();\n\t            diff = (moment.isMoment(input) || isDate(input) ? +input : +moment(input)) - +res;\n\t            // Use low-level api, because this fn is low-level api.\n\t            res._d.setTime(+res._d + diff);\n\t            moment.updateOffset(res, false);\n\t            return res;\n\t        } else {\n\t            return moment(input).local();\n\t        }\n\t    }\n\t\n\t    /************************************\n\t        Locale\n\t    ************************************/\n\t\n\t    extend(Locale.prototype, {\n\t\n\t        set: function set(config) {\n\t            var prop, i;\n\t            for (i in config) {\n\t                prop = config[i];\n\t                if (typeof prop === \"function\") {\n\t                    this[i] = prop;\n\t                } else {\n\t                    this[\"_\" + i] = prop;\n\t                }\n\t            }\n\t            // Lenient ordinal parsing accepts just a number in addition to\n\t            // number + (possibly) stuff coming from _ordinalParseLenient.\n\t            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + \"|\" + /\\d{1,2}/.source);\n\t        },\n\t\n\t        _months: \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n\t        months: function months(m) {\n\t            return this._months[m.month()];\n\t        },\n\t\n\t        _monthsShort: \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n\t        monthsShort: function monthsShort(m) {\n\t            return this._monthsShort[m.month()];\n\t        },\n\t\n\t        monthsParse: function monthsParse(monthName, format, strict) {\n\t            var i, mom, regex;\n\t\n\t            if (!this._monthsParse) {\n\t                this._monthsParse = [];\n\t                this._longMonthsParse = [];\n\t                this._shortMonthsParse = [];\n\t            }\n\t\n\t            for (i = 0; i < 12; i++) {\n\t                // make the regex if we don't have it already\n\t                mom = moment.utc([2000, i]);\n\t                if (strict && !this._longMonthsParse[i]) {\n\t                    this._longMonthsParse[i] = new RegExp(\"^\" + this.months(mom, \"\").replace(\".\", \"\") + \"$\", \"i\");\n\t                    this._shortMonthsParse[i] = new RegExp(\"^\" + this.monthsShort(mom, \"\").replace(\".\", \"\") + \"$\", \"i\");\n\t                }\n\t                if (!strict && !this._monthsParse[i]) {\n\t                    regex = \"^\" + this.months(mom, \"\") + \"|^\" + this.monthsShort(mom, \"\");\n\t                    this._monthsParse[i] = new RegExp(regex.replace(\".\", \"\"), \"i\");\n\t                }\n\t                // test the regex\n\t                if (strict && format === \"MMMM\" && this._longMonthsParse[i].test(monthName)) {\n\t                    return i;\n\t                } else if (strict && format === \"MMM\" && this._shortMonthsParse[i].test(monthName)) {\n\t                    return i;\n\t                } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t                    return i;\n\t                }\n\t            }\n\t        },\n\t\n\t        _weekdays: \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n\t        weekdays: function weekdays(m) {\n\t            return this._weekdays[m.day()];\n\t        },\n\t\n\t        _weekdaysShort: \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n\t        weekdaysShort: function weekdaysShort(m) {\n\t            return this._weekdaysShort[m.day()];\n\t        },\n\t\n\t        _weekdaysMin: \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n\t        weekdaysMin: function weekdaysMin(m) {\n\t            return this._weekdaysMin[m.day()];\n\t        },\n\t\n\t        weekdaysParse: function weekdaysParse(weekdayName) {\n\t            var i, mom, regex;\n\t\n\t            if (!this._weekdaysParse) {\n\t                this._weekdaysParse = [];\n\t            }\n\t\n\t            for (i = 0; i < 7; i++) {\n\t                // make the regex if we don't have it already\n\t                if (!this._weekdaysParse[i]) {\n\t                    mom = moment([2000, 1]).day(i);\n\t                    regex = \"^\" + this.weekdays(mom, \"\") + \"|^\" + this.weekdaysShort(mom, \"\") + \"|^\" + this.weekdaysMin(mom, \"\");\n\t                    this._weekdaysParse[i] = new RegExp(regex.replace(\".\", \"\"), \"i\");\n\t                }\n\t                // test the regex\n\t                if (this._weekdaysParse[i].test(weekdayName)) {\n\t                    return i;\n\t                }\n\t            }\n\t        },\n\t\n\t        _longDateFormat: {\n\t            LTS: \"h:mm:ss A\",\n\t            LT: \"h:mm A\",\n\t            L: \"MM/DD/YYYY\",\n\t            LL: \"MMMM D, YYYY\",\n\t            LLL: \"MMMM D, YYYY LT\",\n\t            LLLL: \"dddd, MMMM D, YYYY LT\"\n\t        },\n\t        longDateFormat: function longDateFormat(key) {\n\t            var output = this._longDateFormat[key];\n\t            if (!output && this._longDateFormat[key.toUpperCase()]) {\n\t                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t                    return val.slice(1);\n\t                });\n\t                this._longDateFormat[key] = output;\n\t            }\n\t            return output;\n\t        },\n\t\n\t        isPM: function isPM(input) {\n\t            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t            // Using charAt should be more compatible.\n\t            return (input + \"\").toLowerCase().charAt(0) === \"p\";\n\t        },\n\t\n\t        _meridiemParse: /[ap]\\.?m?\\.?/i,\n\t        meridiem: function meridiem(hours, minutes, isLower) {\n\t            if (hours > 11) {\n\t                return isLower ? \"pm\" : \"PM\";\n\t            } else {\n\t                return isLower ? \"am\" : \"AM\";\n\t            }\n\t        },\n\t\n\t        _calendar: {\n\t            sameDay: \"[Today at] LT\",\n\t            nextDay: \"[Tomorrow at] LT\",\n\t            nextWeek: \"dddd [at] LT\",\n\t            lastDay: \"[Yesterday at] LT\",\n\t            lastWeek: \"[Last] dddd [at] LT\",\n\t            sameElse: \"L\"\n\t        },\n\t        calendar: function calendar(key, mom, now) {\n\t            var output = this._calendar[key];\n\t            return typeof output === \"function\" ? output.apply(mom, [now]) : output;\n\t        },\n\t\n\t        _relativeTime: {\n\t            future: \"in %s\",\n\t            past: \"%s ago\",\n\t            s: \"a few seconds\",\n\t            m: \"a minute\",\n\t            mm: \"%d minutes\",\n\t            h: \"an hour\",\n\t            hh: \"%d hours\",\n\t            d: \"a day\",\n\t            dd: \"%d days\",\n\t            M: \"a month\",\n\t            MM: \"%d months\",\n\t            y: \"a year\",\n\t            yy: \"%d years\"\n\t        },\n\t\n\t        relativeTime: function relativeTime(number, withoutSuffix, string, isFuture) {\n\t            var output = this._relativeTime[string];\n\t            return typeof output === \"function\" ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n\t        },\n\t\n\t        pastFuture: function pastFuture(diff, output) {\n\t            var format = this._relativeTime[diff > 0 ? \"future\" : \"past\"];\n\t            return typeof format === \"function\" ? format(output) : format.replace(/%s/i, output);\n\t        },\n\t\n\t        ordinal: function ordinal(number) {\n\t            return this._ordinal.replace(\"%d\", number);\n\t        },\n\t        _ordinal: \"%d\",\n\t        _ordinalParse: /\\d{1,2}/,\n\t\n\t        preparse: function preparse(string) {\n\t            return string;\n\t        },\n\t\n\t        postformat: function postformat(string) {\n\t            return string;\n\t        },\n\t\n\t        week: function week(mom) {\n\t            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t        },\n\t\n\t        _week: {\n\t            dow: 0, // Sunday is the first day of the week.\n\t            doy: 6 // The week that contains Jan 1st is the first week of the year.\n\t        },\n\t\n\t        firstDayOfWeek: function firstDayOfWeek() {\n\t            return this._week.dow;\n\t        },\n\t\n\t        firstDayOfYear: function firstDayOfYear() {\n\t            return this._week.doy;\n\t        },\n\t\n\t        _invalidDate: \"Invalid date\",\n\t        invalidDate: function invalidDate() {\n\t            return this._invalidDate;\n\t        }\n\t    });\n\t\n\t    /************************************\n\t        Formatting\n\t    ************************************/\n\t\n\t    function removeFormattingTokens(input) {\n\t        if (input.match(/\\[[\\s\\S]/)) {\n\t            return input.replace(/^\\[|\\]$/g, \"\");\n\t        }\n\t        return input.replace(/\\\\/g, \"\");\n\t    }\n\t\n\t    function makeFormatFunction(format) {\n\t        var array = format.match(formattingTokens),\n\t            i,\n\t            length;\n\t\n\t        for (i = 0, length = array.length; i < length; i++) {\n\t            if (formatTokenFunctions[array[i]]) {\n\t                array[i] = formatTokenFunctions[array[i]];\n\t            } else {\n\t                array[i] = removeFormattingTokens(array[i]);\n\t            }\n\t        }\n\t\n\t        return function (mom) {\n\t            var output = \"\";\n\t            for (i = 0; i < length; i++) {\n\t                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n\t            }\n\t            return output;\n\t        };\n\t    }\n\t\n\t    // format date using native date object\n\t    function formatMoment(m, format) {\n\t        if (!m.isValid()) {\n\t            return m.localeData().invalidDate();\n\t        }\n\t\n\t        format = expandFormat(format, m.localeData());\n\t\n\t        if (!formatFunctions[format]) {\n\t            formatFunctions[format] = makeFormatFunction(format);\n\t        }\n\t\n\t        return formatFunctions[format](m);\n\t    }\n\t\n\t    function expandFormat(format, locale) {\n\t        var i = 5;\n\t\n\t        function replaceLongDateFormatTokens(input) {\n\t            return locale.longDateFormat(input) || input;\n\t        }\n\t\n\t        localFormattingTokens.lastIndex = 0;\n\t        while (i >= 0 && localFormattingTokens.test(format)) {\n\t            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t            localFormattingTokens.lastIndex = 0;\n\t            i -= 1;\n\t        }\n\t\n\t        return format;\n\t    }\n\t\n\t    /************************************\n\t        Parsing\n\t    ************************************/\n\t\n\t    // get the regex to find the next token\n\t    function getParseRegexForToken(token, config) {\n\t        var a,\n\t            strict = config._strict;\n\t        switch (token) {\n\t            case \"Q\":\n\t                return parseTokenOneDigit;\n\t            case \"DDDD\":\n\t                return parseTokenThreeDigits;\n\t            case \"YYYY\":\n\t            case \"GGGG\":\n\t            case \"gggg\":\n\t                return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n\t            case \"Y\":\n\t            case \"G\":\n\t            case \"g\":\n\t                return parseTokenSignedNumber;\n\t            case \"YYYYYY\":\n\t            case \"YYYYY\":\n\t            case \"GGGGG\":\n\t            case \"ggggg\":\n\t                return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n\t            case \"S\":\n\t                if (strict) {\n\t                    return parseTokenOneDigit;\n\t                }\n\t            /* falls through */\n\t            case \"SS\":\n\t                if (strict) {\n\t                    return parseTokenTwoDigits;\n\t                }\n\t            /* falls through */\n\t            case \"SSS\":\n\t                if (strict) {\n\t                    return parseTokenThreeDigits;\n\t                }\n\t            /* falls through */\n\t            case \"DDD\":\n\t                return parseTokenOneToThreeDigits;\n\t            case \"MMM\":\n\t            case \"MMMM\":\n\t            case \"dd\":\n\t            case \"ddd\":\n\t            case \"dddd\":\n\t                return parseTokenWord;\n\t            case \"a\":\n\t            case \"A\":\n\t                return config._locale._meridiemParse;\n\t            case \"x\":\n\t                return parseTokenOffsetMs;\n\t            case \"X\":\n\t                return parseTokenTimestampMs;\n\t            case \"Z\":\n\t            case \"ZZ\":\n\t                return parseTokenTimezone;\n\t            case \"T\":\n\t                return parseTokenT;\n\t            case \"SSSS\":\n\t                return parseTokenDigits;\n\t            case \"MM\":\n\t            case \"DD\":\n\t            case \"YY\":\n\t            case \"GG\":\n\t            case \"gg\":\n\t            case \"HH\":\n\t            case \"hh\":\n\t            case \"mm\":\n\t            case \"ss\":\n\t            case \"ww\":\n\t            case \"WW\":\n\t                return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n\t            case \"M\":\n\t            case \"D\":\n\t            case \"d\":\n\t            case \"H\":\n\t            case \"h\":\n\t            case \"m\":\n\t            case \"s\":\n\t            case \"w\":\n\t            case \"W\":\n\t            case \"e\":\n\t            case \"E\":\n\t                return parseTokenOneOrTwoDigits;\n\t            case \"Do\":\n\t                return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n\t            default:\n\t                a = new RegExp(regexpEscape(unescapeFormat(token.replace(\"\\\\\", \"\")), \"i\"));\n\t                return a;\n\t        }\n\t    }\n\t\n\t    function utcOffsetFromString(string) {\n\t        string = string || \"\";\n\t        var possibleTzMatches = string.match(parseTokenTimezone) || [],\n\t            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n\t            parts = (tzChunk + \"\").match(parseTimezoneChunker) || [\"-\", 0, 0],\n\t            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t        return parts[0] === \"+\" ? minutes : -minutes;\n\t    }\n\t\n\t    // function to convert string input to date\n\t    function addTimeToArrayFromToken(token, input, config) {\n\t        var a,\n\t            datePartArray = config._a;\n\t\n\t        switch (token) {\n\t            // QUARTER\n\t            case \"Q\":\n\t                if (input != null) {\n\t                    datePartArray[MONTH] = (toInt(input) - 1) * 3;\n\t                }\n\t                break;\n\t            // MONTH\n\t            case \"M\": // fall through to MM\n\t            case \"MM\":\n\t                if (input != null) {\n\t                    datePartArray[MONTH] = toInt(input) - 1;\n\t                }\n\t                break;\n\t            case \"MMM\": // fall through to MMMM\n\t            case \"MMMM\":\n\t                a = config._locale.monthsParse(input, token, config._strict);\n\t                // if we didn't find a month name, mark the date as invalid.\n\t                if (a != null) {\n\t                    datePartArray[MONTH] = a;\n\t                } else {\n\t                    config._pf.invalidMonth = input;\n\t                }\n\t                break;\n\t            // DAY OF MONTH\n\t            case \"D\": // fall through to DD\n\t            case \"DD\":\n\t                if (input != null) {\n\t                    datePartArray[DATE] = toInt(input);\n\t                }\n\t                break;\n\t            case \"Do\":\n\t                if (input != null) {\n\t                    datePartArray[DATE] = toInt(parseInt(input.match(/\\d{1,2}/)[0], 10));\n\t                }\n\t                break;\n\t            // DAY OF YEAR\n\t            case \"DDD\": // fall through to DDDD\n\t            case \"DDDD\":\n\t                if (input != null) {\n\t                    config._dayOfYear = toInt(input);\n\t                }\n\t\n\t                break;\n\t            // YEAR\n\t            case \"YY\":\n\t                datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n\t                break;\n\t            case \"YYYY\":\n\t            case \"YYYYY\":\n\t            case \"YYYYYY\":\n\t                datePartArray[YEAR] = toInt(input);\n\t                break;\n\t            // AM / PM\n\t            case \"a\": // fall through to A\n\t            case \"A\":\n\t                config._meridiem = input;\n\t                // config._isPm = config._locale.isPM(input);\n\t                break;\n\t            // HOUR\n\t            case \"h\": // fall through to hh\n\t            case \"hh\":\n\t                config._pf.bigHour = true;\n\t            /* falls through */\n\t            case \"H\": // fall through to HH\n\t            case \"HH\":\n\t                datePartArray[HOUR] = toInt(input);\n\t                break;\n\t            // MINUTE\n\t            case \"m\": // fall through to mm\n\t            case \"mm\":\n\t                datePartArray[MINUTE] = toInt(input);\n\t                break;\n\t            // SECOND\n\t            case \"s\": // fall through to ss\n\t            case \"ss\":\n\t                datePartArray[SECOND] = toInt(input);\n\t                break;\n\t            // MILLISECOND\n\t            case \"S\":\n\t            case \"SS\":\n\t            case \"SSS\":\n\t            case \"SSSS\":\n\t                datePartArray[MILLISECOND] = toInt((\"0.\" + input) * 1000);\n\t                break;\n\t            // UNIX OFFSET (MILLISECONDS)\n\t            case \"x\":\n\t                config._d = new Date(toInt(input));\n\t                break;\n\t            // UNIX TIMESTAMP WITH MS\n\t            case \"X\":\n\t                config._d = new Date(parseFloat(input) * 1000);\n\t                break;\n\t            // TIMEZONE\n\t            case \"Z\": // fall through to ZZ\n\t            case \"ZZ\":\n\t                config._useUTC = true;\n\t                config._tzm = utcOffsetFromString(input);\n\t                break;\n\t            // WEEKDAY - human\n\t            case \"dd\":\n\t            case \"ddd\":\n\t            case \"dddd\":\n\t                a = config._locale.weekdaysParse(input);\n\t                // if we didn't get a weekday name, mark the date as invalid\n\t                if (a != null) {\n\t                    config._w = config._w || {};\n\t                    config._w.d = a;\n\t                } else {\n\t                    config._pf.invalidWeekday = input;\n\t                }\n\t                break;\n\t            // WEEK, WEEK DAY - numeric\n\t            case \"w\":\n\t            case \"ww\":\n\t            case \"W\":\n\t            case \"WW\":\n\t            case \"d\":\n\t            case \"e\":\n\t            case \"E\":\n\t                token = token.substr(0, 1);\n\t            /* falls through */\n\t            case \"gggg\":\n\t            case \"GGGG\":\n\t            case \"GGGGG\":\n\t                token = token.substr(0, 2);\n\t                if (input) {\n\t                    config._w = config._w || {};\n\t                    config._w[token] = toInt(input);\n\t                }\n\t                break;\n\t            case \"gg\":\n\t            case \"GG\":\n\t                config._w = config._w || {};\n\t                config._w[token] = moment.parseTwoDigitYear(input);\n\t        }\n\t    }\n\t\n\t    function dayOfYearFromWeekInfo(config) {\n\t        var w, weekYear, week, weekday, dow, doy, temp;\n\t\n\t        w = config._w;\n\t        if (w.GG != null || w.W != null || w.E != null) {\n\t            dow = 1;\n\t            doy = 4;\n\t\n\t            // TODO: We need to take the current isoWeekYear, but that depends on\n\t            // how we interpret now (local, utc, fixed offset). So create\n\t            // a now version of current config (take local/utc/offset flags, and\n\t            // create now).\n\t            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n\t            week = dfl(w.W, 1);\n\t            weekday = dfl(w.E, 1);\n\t        } else {\n\t            dow = config._locale._week.dow;\n\t            doy = config._locale._week.doy;\n\t\n\t            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n\t            week = dfl(w.w, 1);\n\t\n\t            if (w.d != null) {\n\t                // weekday -- low day numbers are considered next week\n\t                weekday = w.d;\n\t                if (weekday < dow) {\n\t                    ++week;\n\t                }\n\t            } else if (w.e != null) {\n\t                // local weekday -- counting starts from begining of week\n\t                weekday = w.e + dow;\n\t            } else {\n\t                // default to begining of week\n\t                weekday = dow;\n\t            }\n\t        }\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\t\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t\n\t    // convert an array to a date.\n\t    // the array should mirror the parameters below\n\t    // note: all values past the year are optional and will default to the lowest possible value.\n\t    // [year, month, day , hour, minute, second, millisecond]\n\t    function dateFromConfig(config) {\n\t        var i,\n\t            date,\n\t            input = [],\n\t            currentDate,\n\t            yearToUse;\n\t\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        currentDate = currentDateArray(config);\n\t\n\t        //compute day of the year from weeks and weekdays\n\t        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t            dayOfYearFromWeekInfo(config);\n\t        }\n\t\n\t        //if the day of the year is set, figure out what it is\n\t        if (config._dayOfYear) {\n\t            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\t\n\t            if (config._dayOfYear > daysInYear(yearToUse)) {\n\t                config._pf._overflowDayOfYear = true;\n\t            }\n\t\n\t            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n\t            config._a[MONTH] = date.getUTCMonth();\n\t            config._a[DATE] = date.getUTCDate();\n\t        }\n\t\n\t        // Default to current date.\n\t        // * if no year, month, day of month are given, default to today\n\t        // * if day of month is given, default month and year\n\t        // * if month is given, default only year\n\t        // * if year is given, don't default anything\n\t        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t            config._a[i] = input[i] = currentDate[i];\n\t        }\n\t\n\t        // Zero out whatever was not defaulted, including time\n\t        for (; i < 7; i++) {\n\t            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n\t        }\n\t\n\t        // Check for 24:00:00.000\n\t        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n\t            config._nextDay = true;\n\t            config._a[HOUR] = 0;\n\t        }\n\t\n\t        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n\t        // Apply timezone offset from input. The actual utcOffset can be changed\n\t        // with parseZone.\n\t        if (config._tzm != null) {\n\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t        }\n\t\n\t        if (config._nextDay) {\n\t            config._a[HOUR] = 24;\n\t        }\n\t    }\n\t\n\t    function dateFromObject(config) {\n\t        var normalizedInput;\n\t\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        normalizedInput = normalizeObjectUnits(config._i);\n\t        config._a = [normalizedInput.year, normalizedInput.month, normalizedInput.day || normalizedInput.date, normalizedInput.hour, normalizedInput.minute, normalizedInput.second, normalizedInput.millisecond];\n\t\n\t        dateFromConfig(config);\n\t    }\n\t\n\t    function currentDateArray(config) {\n\t        var now = new Date();\n\t        if (config._useUTC) {\n\t            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n\t        } else {\n\t            return [now.getFullYear(), now.getMonth(), now.getDate()];\n\t        }\n\t    }\n\t\n\t    // date from string and format string\n\t    function makeDateFromStringAndFormat(config) {\n\t        if (config._f === moment.ISO_8601) {\n\t            parseISO(config);\n\t            return;\n\t        }\n\t\n\t        config._a = [];\n\t        config._pf.empty = true;\n\t\n\t        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t        var string = \"\" + config._i,\n\t            i,\n\t            parsedInput,\n\t            tokens,\n\t            token,\n\t            skipped,\n\t            stringLength = string.length,\n\t            totalParsedInputLength = 0;\n\t\n\t        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t        for (i = 0; i < tokens.length; i++) {\n\t            token = tokens[i];\n\t            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t            if (parsedInput) {\n\t                skipped = string.substr(0, string.indexOf(parsedInput));\n\t                if (skipped.length > 0) {\n\t                    config._pf.unusedInput.push(skipped);\n\t                }\n\t                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t                totalParsedInputLength += parsedInput.length;\n\t            }\n\t            // don't parse if it's not a known token\n\t            if (formatTokenFunctions[token]) {\n\t                if (parsedInput) {\n\t                    config._pf.empty = false;\n\t                } else {\n\t                    config._pf.unusedTokens.push(token);\n\t                }\n\t                addTimeToArrayFromToken(token, parsedInput, config);\n\t            } else if (config._strict && !parsedInput) {\n\t                config._pf.unusedTokens.push(token);\n\t            }\n\t        }\n\t\n\t        // add remaining unparsed input length to the string\n\t        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n\t        if (string.length > 0) {\n\t            config._pf.unusedInput.push(string);\n\t        }\n\t\n\t        // clear _12h flag if hour is <= 12\n\t        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n\t            config._pf.bigHour = undefined;\n\t        }\n\t        // handle meridiem\n\t        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t        dateFromConfig(config);\n\t        checkOverflow(config);\n\t    }\n\t\n\t    function unescapeFormat(s) {\n\t        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t            return p1 || p2 || p3 || p4;\n\t        });\n\t    }\n\t\n\t    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\t    function regexpEscape(s) {\n\t        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\t    }\n\t\n\t    // date from string and array of format strings\n\t    function makeDateFromStringAndArray(config) {\n\t        var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\t\n\t        if (config._f.length === 0) {\n\t            config._pf.invalidFormat = true;\n\t            config._d = new Date(NaN);\n\t            return;\n\t        }\n\t\n\t        for (i = 0; i < config._f.length; i++) {\n\t            currentScore = 0;\n\t            tempConfig = copyConfig({}, config);\n\t            if (config._useUTC != null) {\n\t                tempConfig._useUTC = config._useUTC;\n\t            }\n\t            tempConfig._pf = defaultParsingFlags();\n\t            tempConfig._f = config._f[i];\n\t            makeDateFromStringAndFormat(tempConfig);\n\t\n\t            if (!isValid(tempConfig)) {\n\t                continue;\n\t            }\n\t\n\t            // if there is any input that was not parsed add a penalty for that format\n\t            currentScore += tempConfig._pf.charsLeftOver;\n\t\n\t            //or tokens\n\t            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\t\n\t            tempConfig._pf.score = currentScore;\n\t\n\t            if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t                scoreToBeat = currentScore;\n\t                bestMoment = tempConfig;\n\t            }\n\t        }\n\t\n\t        extend(config, bestMoment || tempConfig);\n\t    }\n\t\n\t    // date from iso format\n\t    function parseISO(config) {\n\t        var i,\n\t            l,\n\t            string = config._i,\n\t            match = isoRegex.exec(string);\n\t\n\t        if (match) {\n\t            config._pf.iso = true;\n\t            for (i = 0, l = isoDates.length; i < l; i++) {\n\t                if (isoDates[i][1].exec(string)) {\n\t                    // match[5] should be 'T' or undefined\n\t                    config._f = isoDates[i][0] + (match[6] || \" \");\n\t                    break;\n\t                }\n\t            }\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(string)) {\n\t                    config._f += isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (string.match(parseTokenTimezone)) {\n\t                config._f += \"Z\";\n\t            }\n\t            makeDateFromStringAndFormat(config);\n\t        } else {\n\t            config._isValid = false;\n\t        }\n\t    }\n\t\n\t    // date from iso format or fallback\n\t    function makeDateFromString(config) {\n\t        parseISO(config);\n\t        if (config._isValid === false) {\n\t            delete config._isValid;\n\t            moment.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    function map(arr, fn) {\n\t        var res = [],\n\t            i;\n\t        for (i = 0; i < arr.length; ++i) {\n\t            res.push(fn(arr[i], i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    function makeDateFromInput(config) {\n\t        var input = config._i,\n\t            matched;\n\t        if (input === undefined) {\n\t            config._d = new Date();\n\t        } else if (isDate(input)) {\n\t            config._d = new Date(+input);\n\t        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n\t            config._d = new Date(+matched[1]);\n\t        } else if (typeof input === \"string\") {\n\t            makeDateFromString(config);\n\t        } else if (isArray(input)) {\n\t            config._a = map(input.slice(0), function (obj) {\n\t                return parseInt(obj, 10);\n\t            });\n\t            dateFromConfig(config);\n\t        } else if (typeof input === \"object\") {\n\t            dateFromObject(config);\n\t        } else if (typeof input === \"number\") {\n\t            // from milliseconds\n\t            config._d = new Date(input);\n\t        } else {\n\t            moment.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    function makeDate(y, m, d, h, M, s, ms) {\n\t        //can't just apply() to create a date:\n\t        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n\t        var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t        //the date constructor doesn't accept years < 1970\n\t        if (y < 1970) {\n\t            date.setFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    function makeUTCDate(y) {\n\t        var date = new Date(Date.UTC.apply(null, arguments));\n\t        if (y < 1970) {\n\t            date.setUTCFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    function parseWeekday(input, locale) {\n\t        if (typeof input === \"string\") {\n\t            if (!isNaN(input)) {\n\t                input = parseInt(input, 10);\n\t            } else {\n\t                input = locale.weekdaysParse(input);\n\t                if (typeof input !== \"number\") {\n\t                    return null;\n\t                }\n\t            }\n\t        }\n\t        return input;\n\t    }\n\t\n\t    /************************************\n\t        Relative Time\n\t    ************************************/\n\t\n\t    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\t    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t    }\n\t\n\t    function relativeTime(posNegDuration, withoutSuffix, locale) {\n\t        var duration = moment.duration(posNegDuration).abs(),\n\t            seconds = round(duration.as(\"s\")),\n\t            minutes = round(duration.as(\"m\")),\n\t            hours = round(duration.as(\"h\")),\n\t            days = round(duration.as(\"d\")),\n\t            months = round(duration.as(\"M\")),\n\t            years = round(duration.as(\"y\")),\n\t            args = seconds < relativeTimeThresholds.s && [\"s\", seconds] || minutes === 1 && [\"m\"] || minutes < relativeTimeThresholds.m && [\"mm\", minutes] || hours === 1 && [\"h\"] || hours < relativeTimeThresholds.h && [\"hh\", hours] || days === 1 && [\"d\"] || days < relativeTimeThresholds.d && [\"dd\", days] || months === 1 && [\"M\"] || months < relativeTimeThresholds.M && [\"MM\", months] || years === 1 && [\"y\"] || [\"yy\", years];\n\t\n\t        args[2] = withoutSuffix;\n\t        args[3] = +posNegDuration > 0;\n\t        args[4] = locale;\n\t        return substituteTimeAgo.apply({}, args);\n\t    }\n\t\n\t    /************************************\n\t        Week of Year\n\t    ************************************/\n\t\n\t    // firstDayOfWeek       0 = sun, 6 = sat\n\t    //                      the day of the week that starts the week\n\t    //                      (usually sunday or monday)\n\t    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n\t    //                      the first week is the week that contains the first\n\t    //                      of this day of the week\n\t    //                      (eg. ISO weeks use thursday (4))\n\t    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n\t        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n\t            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n\t            adjustedMoment;\n\t\n\t        if (daysToDayOfWeek > end) {\n\t            daysToDayOfWeek -= 7;\n\t        }\n\t\n\t        if (daysToDayOfWeek < end - 7) {\n\t            daysToDayOfWeek += 7;\n\t        }\n\t\n\t        adjustedMoment = moment(mom).add(daysToDayOfWeek, \"d\");\n\t        return {\n\t            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n\t            year: adjustedMoment.year()\n\t        };\n\t    }\n\t\n\t    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\t    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n\t        var d = makeUTCDate(year, 0, 1).getUTCDay(),\n\t            daysToAdd,\n\t            dayOfYear;\n\t\n\t        d = d === 0 ? 7 : d;\n\t        weekday = weekday != null ? weekday : firstDayOfWeek;\n\t        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n\t        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\t\n\t        return {\n\t            year: dayOfYear > 0 ? year : year - 1,\n\t            dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear\n\t        };\n\t    }\n\t\n\t    /************************************\n\t        Top Level Functions\n\t    ************************************/\n\t\n\t    function makeMoment(config) {\n\t        var input = config._i,\n\t            format = config._f,\n\t            res;\n\t\n\t        config._locale = config._locale || moment.localeData(config._l);\n\t\n\t        if (input === null || format === undefined && input === \"\") {\n\t            return moment.invalid({ nullInput: true });\n\t        }\n\t\n\t        if (typeof input === \"string\") {\n\t            config._i = input = config._locale.preparse(input);\n\t        }\n\t\n\t        if (moment.isMoment(input)) {\n\t            return new Moment(input, true);\n\t        } else if (format) {\n\t            if (isArray(format)) {\n\t                makeDateFromStringAndArray(config);\n\t            } else {\n\t                makeDateFromStringAndFormat(config);\n\t            }\n\t        } else {\n\t            makeDateFromInput(config);\n\t        }\n\t\n\t        res = new Moment(config);\n\t        if (res._nextDay) {\n\t            // Adding is smart enough around DST\n\t            res.add(1, \"d\");\n\t            res._nextDay = undefined;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    moment = function (input, format, locale, strict) {\n\t        var c;\n\t\n\t        if (typeof locale === \"boolean\") {\n\t            strict = locale;\n\t            locale = undefined;\n\t        }\n\t        // object construction must be done this way.\n\t        // https://github.com/moment/moment/issues/1423\n\t        c = {};\n\t        c._isAMomentObject = true;\n\t        c._i = input;\n\t        c._f = format;\n\t        c._l = locale;\n\t        c._strict = strict;\n\t        c._isUTC = false;\n\t        c._pf = defaultParsingFlags();\n\t\n\t        return makeMoment(c);\n\t    };\n\t\n\t    moment.suppressDeprecationWarnings = false;\n\t\n\t    moment.createFromInputFallback = deprecate(\"moment construction falls back to js Date. This is \" + \"discouraged and will be removed in upcoming major \" + \"release. Please refer to \" + \"https://github.com/moment/moment/issues/1407 for more info.\", function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? \" UTC\" : \"\"));\n\t    });\n\t\n\t    // Pick a moment m from moments so that m[fn](other) is true for all\n\t    // other. This relies on the function fn to be transitive.\n\t    //\n\t    // moments should either be an array of moment objects or an array, whose\n\t    // first element is an array of moment objects.\n\t    function pickBy(fn, moments) {\n\t        var res, i;\n\t        if (moments.length === 1 && isArray(moments[0])) {\n\t            moments = moments[0];\n\t        }\n\t        if (!moments.length) {\n\t            return moment();\n\t        }\n\t        res = moments[0];\n\t        for (i = 1; i < moments.length; ++i) {\n\t            if (moments[i][fn](res)) {\n\t                res = moments[i];\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t\n\t    moment.min = function () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy(\"isBefore\", args);\n\t    };\n\t\n\t    moment.max = function () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy(\"isAfter\", args);\n\t    };\n\t\n\t    // creating with utc\n\t    moment.utc = function (input, format, locale, strict) {\n\t        var c;\n\t\n\t        if (typeof locale === \"boolean\") {\n\t            strict = locale;\n\t            locale = undefined;\n\t        }\n\t        // object construction must be done this way.\n\t        // https://github.com/moment/moment/issues/1423\n\t        c = {};\n\t        c._isAMomentObject = true;\n\t        c._useUTC = true;\n\t        c._isUTC = true;\n\t        c._l = locale;\n\t        c._i = input;\n\t        c._f = format;\n\t        c._strict = strict;\n\t        c._pf = defaultParsingFlags();\n\t\n\t        return makeMoment(c).utc();\n\t    };\n\t\n\t    // creating with unix timestamp (in seconds)\n\t    moment.unix = function (input) {\n\t        return moment(input * 1000);\n\t    };\n\t\n\t    // duration\n\t    moment.duration = function (input, key) {\n\t        var duration = input,\n\t\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t            sign,\n\t            ret,\n\t            parseIso,\n\t            diffRes;\n\t\n\t        if (moment.isDuration(input)) {\n\t            duration = {\n\t                ms: input._milliseconds,\n\t                d: input._days,\n\t                M: input._months\n\t            };\n\t        } else if (typeof input === \"number\") {\n\t            duration = {};\n\t            if (key) {\n\t                duration[key] = input;\n\t            } else {\n\t                duration.milliseconds = input;\n\t            }\n\t        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n\t            sign = match[1] === \"-\" ? -1 : 1;\n\t            duration = {\n\t                y: 0,\n\t                d: toInt(match[DATE]) * sign,\n\t                h: toInt(match[HOUR]) * sign,\n\t                m: toInt(match[MINUTE]) * sign,\n\t                s: toInt(match[SECOND]) * sign,\n\t                ms: toInt(match[MILLISECOND]) * sign\n\t            };\n\t        } else if (!!(match = isoDurationRegex.exec(input))) {\n\t            sign = match[1] === \"-\" ? -1 : 1;\n\t            parseIso = function (inp) {\n\t                // We'd normally use ~~inp for this, but unfortunately it also\n\t                // converts floats to ints.\n\t                // inp may be undefined, so careful calling replace on it.\n\t                var res = inp && parseFloat(inp.replace(\",\", \".\"));\n\t                // apply sign while we're at it\n\t                return (isNaN(res) ? 0 : res) * sign;\n\t            };\n\t            duration = {\n\t                y: parseIso(match[2]),\n\t                M: parseIso(match[3]),\n\t                d: parseIso(match[4]),\n\t                h: parseIso(match[5]),\n\t                m: parseIso(match[6]),\n\t                s: parseIso(match[7]),\n\t                w: parseIso(match[8])\n\t            };\n\t        } else if (duration == null) {\n\t            // checks for null or undefined\n\t            duration = {};\n\t        } else if (typeof duration === \"object\" && (\"from\" in duration || \"to\" in duration)) {\n\t            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\t\n\t            duration = {};\n\t            duration.ms = diffRes.milliseconds;\n\t            duration.M = diffRes.months;\n\t        }\n\t\n\t        ret = new Duration(duration);\n\t\n\t        if (moment.isDuration(input) && hasOwnProp(input, \"_locale\")) {\n\t            ret._locale = input._locale;\n\t        }\n\t\n\t        return ret;\n\t    };\n\t\n\t    // version number\n\t    moment.version = VERSION;\n\t\n\t    // default format\n\t    moment.defaultFormat = isoFormat;\n\t\n\t    // constant that refers to the ISO standard\n\t    moment.ISO_8601 = function () {};\n\t\n\t    // Plugins that add properties should also add the key here (null value),\n\t    // so we can properly clone ourselves.\n\t    moment.momentProperties = momentProperties;\n\t\n\t    // This function will be called whenever a moment is mutated.\n\t    // It is intended to keep the offset in sync with the timezone.\n\t    moment.updateOffset = function () {};\n\t\n\t    // This function allows you to set a threshold for relative time strings\n\t    moment.relativeTimeThreshold = function (threshold, limit) {\n\t        if (relativeTimeThresholds[threshold] === undefined) {\n\t            return false;\n\t        }\n\t        if (limit === undefined) {\n\t            return relativeTimeThresholds[threshold];\n\t        }\n\t        relativeTimeThresholds[threshold] = limit;\n\t        return true;\n\t    };\n\t\n\t    moment.lang = deprecate(\"moment.lang is deprecated. Use moment.locale instead.\", function (key, value) {\n\t        return moment.locale(key, value);\n\t    });\n\t\n\t    // This function will load locale and then set the global locale.  If\n\t    // no arguments are passed in, it will simply return the current global\n\t    // locale key.\n\t    moment.locale = function (key, values) {\n\t        var data;\n\t        if (key) {\n\t            if (typeof values !== \"undefined\") {\n\t                data = moment.defineLocale(key, values);\n\t            } else {\n\t                data = moment.localeData(key);\n\t            }\n\t\n\t            if (data) {\n\t                moment.duration._locale = moment._locale = data;\n\t            }\n\t        }\n\t\n\t        return moment._locale._abbr;\n\t    };\n\t\n\t    moment.defineLocale = function (name, values) {\n\t        if (values !== null) {\n\t            values.abbr = name;\n\t            if (!locales[name]) {\n\t                locales[name] = new Locale();\n\t            }\n\t            locales[name].set(values);\n\t\n\t            // backwards compat for now: also set the locale\n\t            moment.locale(name);\n\t\n\t            return locales[name];\n\t        } else {\n\t            // useful for testing\n\t            delete locales[name];\n\t            return null;\n\t        }\n\t    };\n\t\n\t    moment.langData = deprecate(\"moment.langData is deprecated. Use moment.localeData instead.\", function (key) {\n\t        return moment.localeData(key);\n\t    });\n\t\n\t    // returns locale data\n\t    moment.localeData = function (key) {\n\t        var locale;\n\t\n\t        if (key && key._locale && key._locale._abbr) {\n\t            key = key._locale._abbr;\n\t        }\n\t\n\t        if (!key) {\n\t            return moment._locale;\n\t        }\n\t\n\t        if (!isArray(key)) {\n\t            //short-circuit everything else\n\t            locale = loadLocale(key);\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            key = [key];\n\t        }\n\t\n\t        return chooseLocale(key);\n\t    };\n\t\n\t    // compare moment object\n\t    moment.isMoment = function (obj) {\n\t        return obj instanceof Moment || obj != null && hasOwnProp(obj, \"_isAMomentObject\");\n\t    };\n\t\n\t    // for typechecking Duration objects\n\t    moment.isDuration = function (obj) {\n\t        return obj instanceof Duration;\n\t    };\n\t\n\t    for (i = lists.length - 1; i >= 0; --i) {\n\t        makeList(lists[i]);\n\t    }\n\t\n\t    moment.normalizeUnits = function (units) {\n\t        return normalizeUnits(units);\n\t    };\n\t\n\t    moment.invalid = function (flags) {\n\t        var m = moment.utc(NaN);\n\t        if (flags != null) {\n\t            extend(m._pf, flags);\n\t        } else {\n\t            m._pf.userInvalidated = true;\n\t        }\n\t\n\t        return m;\n\t    };\n\t\n\t    moment.parseZone = function () {\n\t        return moment.apply(null, arguments).parseZone();\n\t    };\n\t\n\t    moment.parseTwoDigitYear = function (input) {\n\t        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t    };\n\t\n\t    moment.isDate = isDate;\n\t\n\t    /************************************\n\t        Moment Prototype\n\t    ************************************/\n\t\n\t    extend(moment.fn = Moment.prototype, {\n\t\n\t        clone: function clone() {\n\t            return moment(this);\n\t        },\n\t\n\t        valueOf: function valueOf() {\n\t            return +this._d - (this._offset || 0) * 60000;\n\t        },\n\t\n\t        unix: function unix() {\n\t            return Math.floor(+this / 1000);\n\t        },\n\t\n\t        toString: function toString() {\n\t            return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\");\n\t        },\n\t\n\t        toDate: function toDate() {\n\t            return this._offset ? new Date(+this) : this._d;\n\t        },\n\t\n\t        toISOString: function toISOString() {\n\t            var m = moment(this).utc();\n\t            if (0 < m.year() && m.year() <= 9999) {\n\t                if (\"function\" === typeof Date.prototype.toISOString) {\n\t                    // native implementation is ~50x faster, use it when we can\n\t                    return this.toDate().toISOString();\n\t                } else {\n\t                    return formatMoment(m, \"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\");\n\t                }\n\t            } else {\n\t                return formatMoment(m, \"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\");\n\t            }\n\t        },\n\t\n\t        toArray: function toArray() {\n\t            var m = this;\n\t            return [m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds()];\n\t        },\n\t\n\t        isValid: (function (_isValid) {\n\t            var _isValidWrapper = function isValid() {\n\t                return _isValid.apply(this, arguments);\n\t            };\n\t\n\t            _isValidWrapper.toString = function () {\n\t                return _isValid.toString();\n\t            };\n\t\n\t            return _isValidWrapper;\n\t        })(function () {\n\t            return isValid(this);\n\t        }),\n\t\n\t        isDSTShifted: function isDSTShifted() {\n\t            if (this._a) {\n\t                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n\t            }\n\t\n\t            return false;\n\t        },\n\t\n\t        parsingFlags: function parsingFlags() {\n\t            return extend({}, this._pf);\n\t        },\n\t\n\t        invalidAt: function invalidAt() {\n\t            return this._pf.overflow;\n\t        },\n\t\n\t        utc: function utc(keepLocalTime) {\n\t            return this.utcOffset(0, keepLocalTime);\n\t        },\n\t\n\t        local: function local(keepLocalTime) {\n\t            if (this._isUTC) {\n\t                this.utcOffset(0, keepLocalTime);\n\t                this._isUTC = false;\n\t\n\t                if (keepLocalTime) {\n\t                    this.subtract(this._dateUtcOffset(), \"m\");\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        format: function format(inputString) {\n\t            var output = formatMoment(this, inputString || moment.defaultFormat);\n\t            return this.localeData().postformat(output);\n\t        },\n\t\n\t        add: createAdder(1, \"add\"),\n\t\n\t        subtract: createAdder(-1, \"subtract\"),\n\t\n\t        diff: (function (_diff) {\n\t            var _diffWrapper = function diff(_x, _x2, _x3) {\n\t                return _diff.apply(this, arguments);\n\t            };\n\t\n\t            _diffWrapper.toString = function () {\n\t                return _diff.toString();\n\t            };\n\t\n\t            return _diffWrapper;\n\t        })(function (input, units, asFloat) {\n\t            var that = makeAs(input, this),\n\t                zoneDiff = (that.utcOffset() - this.utcOffset()) * 60000,\n\t                anchor,\n\t                diff,\n\t                output,\n\t                daysAdjust;\n\t\n\t            units = normalizeUnits(units);\n\t\n\t            if (units === \"year\" || units === \"month\" || units === \"quarter\") {\n\t                output = monthDiff(this, that);\n\t                if (units === \"quarter\") {\n\t                    output = output / 3;\n\t                } else if (units === \"year\") {\n\t                    output = output / 12;\n\t                }\n\t            } else {\n\t                diff = this - that;\n\t                output = units === \"second\" ? diff / 1000 : // 1000\n\t                units === \"minute\" ? diff / 60000 : // 1000 * 60\n\t                units === \"hour\" ? diff / 3600000 : // 1000 * 60 * 60\n\t                units === \"day\" ? (diff - zoneDiff) / 86400000 : // 1000 * 60 * 60 * 24, negate dst\n\t                units === \"week\" ? (diff - zoneDiff) / 604800000 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t                diff;\n\t            }\n\t            return asFloat ? output : absRound(output);\n\t        }),\n\t\n\t        from: function from(time, withoutSuffix) {\n\t            return moment.duration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);\n\t        },\n\t\n\t        fromNow: function fromNow(withoutSuffix) {\n\t            return this.from(moment(), withoutSuffix);\n\t        },\n\t\n\t        calendar: function calendar(time) {\n\t            // We want to compare the start of today, vs this.\n\t            // Getting start-of-today depends on whether we're locat/utc/offset\n\t            // or not.\n\t            var now = time || moment(),\n\t                sod = makeAs(now, this).startOf(\"day\"),\n\t                diff = this.diff(sod, \"days\", true),\n\t                format = diff < -6 ? \"sameElse\" : diff < -1 ? \"lastWeek\" : diff < 0 ? \"lastDay\" : diff < 1 ? \"sameDay\" : diff < 2 ? \"nextDay\" : diff < 7 ? \"nextWeek\" : \"sameElse\";\n\t            return this.format(this.localeData().calendar(format, this, moment(now)));\n\t        },\n\t\n\t        isLeapYear: (function (_isLeapYear) {\n\t            var _isLeapYearWrapper = function isLeapYear() {\n\t                return _isLeapYear.apply(this, arguments);\n\t            };\n\t\n\t            _isLeapYearWrapper.toString = function () {\n\t                return _isLeapYear.toString();\n\t            };\n\t\n\t            return _isLeapYearWrapper;\n\t        })(function () {\n\t            return isLeapYear(this.year());\n\t        }),\n\t\n\t        isDST: function isDST() {\n\t            return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n\t        },\n\t\n\t        day: (function (_day) {\n\t            var _dayWrapper = function day(_x) {\n\t                return _day.apply(this, arguments);\n\t            };\n\t\n\t            _dayWrapper.toString = function () {\n\t                return _day.toString();\n\t            };\n\t\n\t            return _dayWrapper;\n\t        })(function (input) {\n\t            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t            if (input != null) {\n\t                input = parseWeekday(input, this.localeData());\n\t                return this.add(input - day, \"d\");\n\t            } else {\n\t                return day;\n\t            }\n\t        }),\n\t\n\t        month: makeAccessor(\"Month\", true),\n\t\n\t        startOf: function startOf(units) {\n\t            units = normalizeUnits(units);\n\t            // the following switch intentionally omits break keywords\n\t            // to utilize falling through the cases.\n\t            switch (units) {\n\t                case \"year\":\n\t                    this.month(0);\n\t                /* falls through */\n\t                case \"quarter\":\n\t                case \"month\":\n\t                    this.date(1);\n\t                /* falls through */\n\t                case \"week\":\n\t                case \"isoWeek\":\n\t                case \"day\":\n\t                    this.hours(0);\n\t                /* falls through */\n\t                case \"hour\":\n\t                    this.minutes(0);\n\t                /* falls through */\n\t                case \"minute\":\n\t                    this.seconds(0);\n\t                /* falls through */\n\t                case \"second\":\n\t                    this.milliseconds(0);\n\t                    /* falls through */\n\t            }\n\t\n\t            // weeks are a special case\n\t            if (units === \"week\") {\n\t                this.weekday(0);\n\t            } else if (units === \"isoWeek\") {\n\t                this.isoWeekday(1);\n\t            }\n\t\n\t            // quarters are also special\n\t            if (units === \"quarter\") {\n\t                this.month(Math.floor(this.month() / 3) * 3);\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        endOf: function endOf(units) {\n\t            units = normalizeUnits(units);\n\t            if (units === undefined || units === \"millisecond\") {\n\t                return this;\n\t            }\n\t            return this.startOf(units).add(1, units === \"isoWeek\" ? \"week\" : units).subtract(1, \"ms\");\n\t        },\n\t\n\t        isAfter: function isAfter(input, units) {\n\t            var inputMs;\n\t            units = normalizeUnits(typeof units !== \"undefined\" ? units : \"millisecond\");\n\t            if (units === \"millisecond\") {\n\t                input = moment.isMoment(input) ? input : moment(input);\n\t                return +this > +input;\n\t            } else {\n\t                inputMs = moment.isMoment(input) ? +input : +moment(input);\n\t                return inputMs < +this.clone().startOf(units);\n\t            }\n\t        },\n\t\n\t        isBefore: function isBefore(input, units) {\n\t            var inputMs;\n\t            units = normalizeUnits(typeof units !== \"undefined\" ? units : \"millisecond\");\n\t            if (units === \"millisecond\") {\n\t                input = moment.isMoment(input) ? input : moment(input);\n\t                return +this < +input;\n\t            } else {\n\t                inputMs = moment.isMoment(input) ? +input : +moment(input);\n\t                return +this.clone().endOf(units) < inputMs;\n\t            }\n\t        },\n\t\n\t        isBetween: function isBetween(from, to, units) {\n\t            return this.isAfter(from, units) && this.isBefore(to, units);\n\t        },\n\t\n\t        isSame: function isSame(input, units) {\n\t            var inputMs;\n\t            units = normalizeUnits(units || \"millisecond\");\n\t            if (units === \"millisecond\") {\n\t                input = moment.isMoment(input) ? input : moment(input);\n\t                return +this === +input;\n\t            } else {\n\t                inputMs = +moment(input);\n\t                return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);\n\t            }\n\t        },\n\t\n\t        min: deprecate(\"moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548\", function (other) {\n\t            other = moment.apply(null, arguments);\n\t            return other < this ? this : other;\n\t        }),\n\t\n\t        max: deprecate(\"moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548\", function (other) {\n\t            other = moment.apply(null, arguments);\n\t            return other > this ? this : other;\n\t        }),\n\t\n\t        zone: deprecate(\"moment().zone is deprecated, use moment().utcOffset instead. \" + \"https://github.com/moment/moment/issues/1779\", function (input, keepLocalTime) {\n\t            if (input != null) {\n\t                if (typeof input !== \"string\") {\n\t                    input = -input;\n\t                }\n\t\n\t                this.utcOffset(input, keepLocalTime);\n\t\n\t                return this;\n\t            } else {\n\t                return -this.utcOffset();\n\t            }\n\t        }),\n\t\n\t        // keepLocalTime = true means only change the timezone, without\n\t        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t        // +0200, so we adjust the time as needed, to be valid.\n\t        //\n\t        // Keeping the time actually adds/subtracts (one hour)\n\t        // from the actual represented time. That is why we call updateOffset\n\t        // a second time. In case it wants us to change the offset again\n\t        // _changeInProgress == true case, then we have to adjust, because\n\t        // there is no such time in the given timezone.\n\t        utcOffset: function utcOffset(input, keepLocalTime) {\n\t            var offset = this._offset || 0,\n\t                localAdjust;\n\t            if (input != null) {\n\t                if (typeof input === \"string\") {\n\t                    input = utcOffsetFromString(input);\n\t                }\n\t                if (Math.abs(input) < 16) {\n\t                    input = input * 60;\n\t                }\n\t                if (!this._isUTC && keepLocalTime) {\n\t                    localAdjust = this._dateUtcOffset();\n\t                }\n\t                this._offset = input;\n\t                this._isUTC = true;\n\t                if (localAdjust != null) {\n\t                    this.add(localAdjust, \"m\");\n\t                }\n\t                if (offset !== input) {\n\t                    if (!keepLocalTime || this._changeInProgress) {\n\t                        addOrSubtractDurationFromMoment(this, moment.duration(input - offset, \"m\"), 1, false);\n\t                    } else if (!this._changeInProgress) {\n\t                        this._changeInProgress = true;\n\t                        moment.updateOffset(this, true);\n\t                        this._changeInProgress = null;\n\t                    }\n\t                }\n\t\n\t                return this;\n\t            } else {\n\t                return this._isUTC ? offset : this._dateUtcOffset();\n\t            }\n\t        },\n\t\n\t        isLocal: function isLocal() {\n\t            return !this._isUTC;\n\t        },\n\t\n\t        isUtcOffset: function isUtcOffset() {\n\t            return this._isUTC;\n\t        },\n\t\n\t        isUtc: function isUtc() {\n\t            return this._isUTC && this._offset === 0;\n\t        },\n\t\n\t        zoneAbbr: function zoneAbbr() {\n\t            return this._isUTC ? \"UTC\" : \"\";\n\t        },\n\t\n\t        zoneName: function zoneName() {\n\t            return this._isUTC ? \"Coordinated Universal Time\" : \"\";\n\t        },\n\t\n\t        parseZone: function parseZone() {\n\t            if (this._tzm) {\n\t                this.utcOffset(this._tzm);\n\t            } else if (typeof this._i === \"string\") {\n\t                this.utcOffset(utcOffsetFromString(this._i));\n\t            }\n\t            return this;\n\t        },\n\t\n\t        hasAlignedHourOffset: function hasAlignedHourOffset(input) {\n\t            if (!input) {\n\t                input = 0;\n\t            } else {\n\t                input = moment(input).utcOffset();\n\t            }\n\t\n\t            return (this.utcOffset() - input) % 60 === 0;\n\t        },\n\t\n\t        daysInMonth: (function (_daysInMonth) {\n\t            var _daysInMonthWrapper = function daysInMonth() {\n\t                return _daysInMonth.apply(this, arguments);\n\t            };\n\t\n\t            _daysInMonthWrapper.toString = function () {\n\t                return _daysInMonth.toString();\n\t            };\n\t\n\t            return _daysInMonthWrapper;\n\t        })(function () {\n\t            return daysInMonth(this.year(), this.month());\n\t        }),\n\t\n\t        dayOfYear: (function (_dayOfYear) {\n\t            var _dayOfYearWrapper = function dayOfYear(_x) {\n\t                return _dayOfYear.apply(this, arguments);\n\t            };\n\t\n\t            _dayOfYearWrapper.toString = function () {\n\t                return _dayOfYear.toString();\n\t            };\n\t\n\t            return _dayOfYearWrapper;\n\t        })(function (input) {\n\t            var dayOfYear = round((moment(this).startOf(\"day\") - moment(this).startOf(\"year\")) / 86400000) + 1;\n\t            return input == null ? dayOfYear : this.add(input - dayOfYear, \"d\");\n\t        }),\n\t\n\t        quarter: function quarter(input) {\n\t            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t        },\n\t\n\t        weekYear: function weekYear(input) {\n\t            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n\t            return input == null ? year : this.add(input - year, \"y\");\n\t        },\n\t\n\t        isoWeekYear: function isoWeekYear(input) {\n\t            var year = weekOfYear(this, 1, 4).year;\n\t            return input == null ? year : this.add(input - year, \"y\");\n\t        },\n\t\n\t        week: (function (_week) {\n\t            var _weekWrapper = function week(_x) {\n\t                return _week.apply(this, arguments);\n\t            };\n\t\n\t            _weekWrapper.toString = function () {\n\t                return _week.toString();\n\t            };\n\t\n\t            return _weekWrapper;\n\t        })(function (input) {\n\t            var week = this.localeData().week(this);\n\t            return input == null ? week : this.add((input - week) * 7, \"d\");\n\t        }),\n\t\n\t        isoWeek: function isoWeek(input) {\n\t            var week = weekOfYear(this, 1, 4).week;\n\t            return input == null ? week : this.add((input - week) * 7, \"d\");\n\t        },\n\t\n\t        weekday: (function (_weekday) {\n\t            var _weekdayWrapper = function weekday(_x) {\n\t                return _weekday.apply(this, arguments);\n\t            };\n\t\n\t            _weekdayWrapper.toString = function () {\n\t                return _weekday.toString();\n\t            };\n\t\n\t            return _weekdayWrapper;\n\t        })(function (input) {\n\t            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t            return input == null ? weekday : this.add(input - weekday, \"d\");\n\t        }),\n\t\n\t        isoWeekday: function isoWeekday(input) {\n\t            // behaves the same as moment#day except\n\t            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t            // as a setter, sunday should belong to the previous week.\n\t            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n\t        },\n\t\n\t        isoWeeksInYear: function isoWeeksInYear() {\n\t            return weeksInYear(this.year(), 1, 4);\n\t        },\n\t\n\t        weeksInYear: (function (_weeksInYear) {\n\t            var _weeksInYearWrapper = function weeksInYear() {\n\t                return _weeksInYear.apply(this, arguments);\n\t            };\n\t\n\t            _weeksInYearWrapper.toString = function () {\n\t                return _weeksInYear.toString();\n\t            };\n\t\n\t            return _weeksInYearWrapper;\n\t        })(function () {\n\t            var weekInfo = this.localeData()._week;\n\t            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t        }),\n\t\n\t        get: function get(units) {\n\t            units = normalizeUnits(units);\n\t            return this[units]();\n\t        },\n\t\n\t        set: function set(units, value) {\n\t            var unit;\n\t            if (typeof units === \"object\") {\n\t                for (unit in units) {\n\t                    this.set(unit, units[unit]);\n\t                }\n\t            } else {\n\t                units = normalizeUnits(units);\n\t                if (typeof this[units] === \"function\") {\n\t                    this[units](value);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        // If passed a locale key, it will set the locale for this\n\t        // instance.  Otherwise, it will return the locale configuration\n\t        // variables for this instance.\n\t        locale: function locale(key) {\n\t            var newLocaleData;\n\t\n\t            if (key === undefined) {\n\t                return this._locale._abbr;\n\t            } else {\n\t                newLocaleData = moment.localeData(key);\n\t                if (newLocaleData != null) {\n\t                    this._locale = newLocaleData;\n\t                }\n\t                return this;\n\t            }\n\t        },\n\t\n\t        lang: deprecate(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\", function (key) {\n\t            if (key === undefined) {\n\t                return this.localeData();\n\t            } else {\n\t                return this.locale(key);\n\t            }\n\t        }),\n\t\n\t        localeData: function localeData() {\n\t            return this._locale;\n\t        },\n\t\n\t        _dateUtcOffset: function _dateUtcOffset() {\n\t            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t            // https://github.com/moment/moment/pull/1871\n\t            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;\n\t        }\n\t\n\t    });\n\t\n\t    function rawMonthSetter(mom, value) {\n\t        var dayOfMonth;\n\t\n\t        // TODO: Move this out of here!\n\t        if (typeof value === \"string\") {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (typeof value !== \"number\") {\n\t                return mom;\n\t            }\n\t        }\n\t\n\t        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t        mom._d[\"set\" + (mom._isUTC ? \"UTC\" : \"\") + \"Month\"](value, dayOfMonth);\n\t        return mom;\n\t    }\n\t\n\t    function rawGetter(mom, unit) {\n\t        return mom._d[\"get\" + (mom._isUTC ? \"UTC\" : \"\") + unit]();\n\t    }\n\t\n\t    function rawSetter(mom, unit, value) {\n\t        if (unit === \"Month\") {\n\t            return rawMonthSetter(mom, value);\n\t        } else {\n\t            return mom._d[\"set\" + (mom._isUTC ? \"UTC\" : \"\") + unit](value);\n\t        }\n\t    }\n\t\n\t    function makeAccessor(unit, keepTime) {\n\t        return function (value) {\n\t            if (value != null) {\n\t                rawSetter(this, unit, value);\n\t                moment.updateOffset(this, keepTime);\n\t                return this;\n\t            } else {\n\t                return rawGetter(this, unit);\n\t            }\n\t        };\n\t    }\n\t\n\t    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor(\"Milliseconds\", false);\n\t    moment.fn.second = moment.fn.seconds = makeAccessor(\"Seconds\", false);\n\t    moment.fn.minute = moment.fn.minutes = makeAccessor(\"Minutes\", false);\n\t    // Setting the hour should keep the time, because the user explicitly\n\t    // specified which hour he wants. So trying to maintain the same hour (in\n\t    // a new timezone) makes sense. Adding/subtracting hours does not follow\n\t    // this rule.\n\t    moment.fn.hour = moment.fn.hours = makeAccessor(\"Hours\", true);\n\t    // moment.fn.month is defined separately\n\t    moment.fn.date = makeAccessor(\"Date\", true);\n\t    moment.fn.dates = deprecate(\"dates accessor is deprecated. Use date instead.\", makeAccessor(\"Date\", true));\n\t    moment.fn.year = makeAccessor(\"FullYear\", true);\n\t    moment.fn.years = deprecate(\"years accessor is deprecated. Use year instead.\", makeAccessor(\"FullYear\", true));\n\t\n\t    // add plural methods\n\t    moment.fn.days = moment.fn.day;\n\t    moment.fn.months = moment.fn.month;\n\t    moment.fn.weeks = moment.fn.week;\n\t    moment.fn.isoWeeks = moment.fn.isoWeek;\n\t    moment.fn.quarters = moment.fn.quarter;\n\t\n\t    // add aliased format methods\n\t    moment.fn.toJSON = moment.fn.toISOString;\n\t\n\t    // alias isUtc for dev-friendliness\n\t    moment.fn.isUTC = moment.fn.isUtc;\n\t\n\t    /************************************\n\t        Duration Prototype\n\t    ************************************/\n\t\n\t    function daysToYears(days) {\n\t        // 400 years have 146097 days (taking into account leap year rules)\n\t        return days * 400 / 146097;\n\t    }\n\t\n\t    function yearsToDays(years) {\n\t        // years * 365 + absRound(years / 4) -\n\t        //     absRound(years / 100) + absRound(years / 400);\n\t        return years * 146097 / 400;\n\t    }\n\t\n\t    extend(moment.duration.fn = Duration.prototype, {\n\t\n\t        _bubble: function _bubble() {\n\t            var milliseconds = this._milliseconds,\n\t                days = this._days,\n\t                months = this._months,\n\t                data = this._data,\n\t                seconds,\n\t                minutes,\n\t                hours,\n\t                years = 0;\n\t\n\t            // The following code bubbles up values, see the tests for\n\t            // examples of what that means.\n\t            data.milliseconds = milliseconds % 1000;\n\t\n\t            seconds = absRound(milliseconds / 1000);\n\t            data.seconds = seconds % 60;\n\t\n\t            minutes = absRound(seconds / 60);\n\t            data.minutes = minutes % 60;\n\t\n\t            hours = absRound(minutes / 60);\n\t            data.hours = hours % 24;\n\t\n\t            days += absRound(hours / 24);\n\t\n\t            // Accurately convert days to years, assume start from year 0.\n\t            years = absRound(daysToYears(days));\n\t            days -= absRound(yearsToDays(years));\n\t\n\t            // 30 days to a month\n\t            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n\t            months += absRound(days / 30);\n\t            days %= 30;\n\t\n\t            // 12 months -> 1 year\n\t            years += absRound(months / 12);\n\t            months %= 12;\n\t\n\t            data.days = days;\n\t            data.months = months;\n\t            data.years = years;\n\t        },\n\t\n\t        abs: function abs() {\n\t            this._milliseconds = Math.abs(this._milliseconds);\n\t            this._days = Math.abs(this._days);\n\t            this._months = Math.abs(this._months);\n\t\n\t            this._data.milliseconds = Math.abs(this._data.milliseconds);\n\t            this._data.seconds = Math.abs(this._data.seconds);\n\t            this._data.minutes = Math.abs(this._data.minutes);\n\t            this._data.hours = Math.abs(this._data.hours);\n\t            this._data.months = Math.abs(this._data.months);\n\t            this._data.years = Math.abs(this._data.years);\n\t\n\t            return this;\n\t        },\n\t\n\t        weeks: function weeks() {\n\t            return absRound(this.days() / 7);\n\t        },\n\t\n\t        valueOf: function valueOf() {\n\t            return this._milliseconds + this._days * 86400000 + this._months % 12 * 2592000000 + toInt(this._months / 12) * 31536000000;\n\t        },\n\t\n\t        humanize: function humanize(withSuffix) {\n\t            var output = relativeTime(this, !withSuffix, this.localeData());\n\t\n\t            if (withSuffix) {\n\t                output = this.localeData().pastFuture(+this, output);\n\t            }\n\t\n\t            return this.localeData().postformat(output);\n\t        },\n\t\n\t        add: function add(input, val) {\n\t            // supports only 2.0-style add(1, 's') or add(moment)\n\t            var dur = moment.duration(input, val);\n\t\n\t            this._milliseconds += dur._milliseconds;\n\t            this._days += dur._days;\n\t            this._months += dur._months;\n\t\n\t            this._bubble();\n\t\n\t            return this;\n\t        },\n\t\n\t        subtract: function subtract(input, val) {\n\t            var dur = moment.duration(input, val);\n\t\n\t            this._milliseconds -= dur._milliseconds;\n\t            this._days -= dur._days;\n\t            this._months -= dur._months;\n\t\n\t            this._bubble();\n\t\n\t            return this;\n\t        },\n\t\n\t        get: function get(units) {\n\t            units = normalizeUnits(units);\n\t            return this[units.toLowerCase() + \"s\"]();\n\t        },\n\t\n\t        as: function as(units) {\n\t            var days, months;\n\t            units = normalizeUnits(units);\n\t\n\t            if (units === \"month\" || units === \"year\") {\n\t                days = this._days + this._milliseconds / 86400000;\n\t                months = this._months + daysToYears(days) * 12;\n\t                return units === \"month\" ? months : months / 12;\n\t            } else {\n\t                // handle milliseconds separately because of floating point math errors (issue #1867)\n\t                days = this._days + Math.round(yearsToDays(this._months / 12));\n\t                switch (units) {\n\t                    case \"week\":\n\t                        return days / 7 + this._milliseconds / 604800000;\n\t                    case \"day\":\n\t                        return days + this._milliseconds / 86400000;\n\t                    case \"hour\":\n\t                        return days * 24 + this._milliseconds / 3600000;\n\t                    case \"minute\":\n\t                        return days * 24 * 60 + this._milliseconds / 60000;\n\t                    case \"second\":\n\t                        return days * 24 * 60 * 60 + this._milliseconds / 1000;\n\t                    // Math.floor prevents floating point math errors here\n\t                    case \"millisecond\":\n\t                        return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n\t                    default:\n\t                        throw new Error(\"Unknown unit \" + units);\n\t                }\n\t            }\n\t        },\n\t\n\t        lang: moment.fn.lang,\n\t        locale: moment.fn.locale,\n\t\n\t        toIsoString: deprecate(\"toIsoString() is deprecated. Please use toISOString() instead \" + \"(notice the capitals)\", function () {\n\t            return this.toISOString();\n\t        }),\n\t\n\t        toISOString: function toISOString() {\n\t            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t            var years = Math.abs(this.years()),\n\t                months = Math.abs(this.months()),\n\t                days = Math.abs(this.days()),\n\t                hours = Math.abs(this.hours()),\n\t                minutes = Math.abs(this.minutes()),\n\t                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\t\n\t            if (!this.asSeconds()) {\n\t                // this is the same as C#'s (Noda) and python (isodate)...\n\t                // but not other JS (goog.date)\n\t                return \"P0D\";\n\t            }\n\t\n\t            return (this.asSeconds() < 0 ? \"-\" : \"\") + \"P\" + (years ? years + \"Y\" : \"\") + (months ? months + \"M\" : \"\") + (days ? days + \"D\" : \"\") + (hours || minutes || seconds ? \"T\" : \"\") + (hours ? hours + \"H\" : \"\") + (minutes ? minutes + \"M\" : \"\") + (seconds ? seconds + \"S\" : \"\");\n\t        },\n\t\n\t        localeData: function localeData() {\n\t            return this._locale;\n\t        },\n\t\n\t        toJSON: function toJSON() {\n\t            return this.toISOString();\n\t        }\n\t    });\n\t\n\t    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\t\n\t    function makeDurationGetter(name) {\n\t        moment.duration.fn[name] = function () {\n\t            return this._data[name];\n\t        };\n\t    }\n\t\n\t    for (i in unitMillisecondFactors) {\n\t        if (hasOwnProp(unitMillisecondFactors, i)) {\n\t            makeDurationGetter(i.toLowerCase());\n\t        }\n\t    }\n\t\n\t    moment.duration.fn.asMilliseconds = function () {\n\t        return this.as(\"ms\");\n\t    };\n\t    moment.duration.fn.asSeconds = function () {\n\t        return this.as(\"s\");\n\t    };\n\t    moment.duration.fn.asMinutes = function () {\n\t        return this.as(\"m\");\n\t    };\n\t    moment.duration.fn.asHours = function () {\n\t        return this.as(\"h\");\n\t    };\n\t    moment.duration.fn.asDays = function () {\n\t        return this.as(\"d\");\n\t    };\n\t    moment.duration.fn.asWeeks = function () {\n\t        return this.as(\"weeks\");\n\t    };\n\t    moment.duration.fn.asMonths = function () {\n\t        return this.as(\"M\");\n\t    };\n\t    moment.duration.fn.asYears = function () {\n\t        return this.as(\"y\");\n\t    };\n\t\n\t    /************************************\n\t        Default Locale\n\t    ************************************/\n\t\n\t    // Set default locale, other locale will inherit from English.\n\t    moment.locale(\"en\", {\n\t        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t        ordinal: function ordinal(number) {\n\t            var b = number % 10,\n\t                output = toInt(number % 100 / 10) === 1 ? \"th\" : b === 1 ? \"st\" : b === 2 ? \"nd\" : b === 3 ? \"rd\" : \"th\";\n\t            return number + output;\n\t        }\n\t    });\n\t\n\t    /* EMBED_LOCALES */\n\t\n\t    /************************************\n\t        Exposing Moment\n\t    ************************************/\n\t\n\t    function makeGlobal(shouldDeprecate) {\n\t        /*global ender:false */\n\t        if (typeof ender !== \"undefined\") {\n\t            return;\n\t        }\n\t        oldGlobalMoment = globalScope.moment;\n\t        if (shouldDeprecate) {\n\t            globalScope.moment = deprecate(\"Accessing Moment through the global scope is \" + \"deprecated, and will be removed in an upcoming \" + \"release.\", moment);\n\t        } else {\n\t            globalScope.moment = moment;\n\t        }\n\t    }\n\t\n\t    // CommonJS module is defined\n\t    if (hasModule) {\n\t        module.exports = moment;\n\t    } else if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t            if (module.config && module.config() && module.config().noGlobal === true) {\n\t                // release the global variable\n\t                globalScope.moment = oldGlobalMoment;\n\t            }\n\t\n\t            return moment;\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t        makeGlobal(true);\n\t    } else {\n\t        makeGlobal();\n\t    }\n\t}).call(undefined);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(85)(module)))\n\n/***/ },\n\n/***/ 85:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (module) {\n\t\tif (!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function () {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** profile.58d178165b3a69327b3b.js\n **/","var angular = require('angular');\nvar notification = require('client/notification');\nvar moment = require('momentWithLocale');\n\nvar profile = angular.module('profile', [\n  'ui.router', 'ngResource', 'global403Interceptor', 'ajoslin.promise-tracker', 'progress', 'focusOn', 'ngMessages'\n]);\n\nrequire('./profileField');\nrequire('./profilePhoto');\nrequire('./profilePassword');\nrequire('./profileAuthProviders');\nrequire('./dateValidator');\nrequire('./dateRangeValidator');\n\n\nprofile.factory('Me', ($resource) => {\n  return $resource('/users/me', {}, {\n    get: {\n      method: 'GET',\n      transformResponse: function(data, headers){\n        data = JSON.parse(data);\n        data.created = new Date(data.created);\n        return data;\n      }\n    }\n  });\n});\n\nprofile.factory('QuizResults', ($resource) => {\n  return $resource('/quiz/results/user/' + window.currentUser.id, {}, {\n    query: {\n      method: 'GET',\n      isArray: true,\n      transformResponse: function(data, headers){\n\n        data = JSON.parse(data);\n        data.forEach(function(result) {\n          result.created = new Date(result.created);\n        });\n        console.log(data);\n        return data;\n      }\n    }\n  });\n});\n\n\nprofile\n  .config(($locationProvider, $stateProvider) => {\n    $locationProvider.html5Mode(true);\n\n    $stateProvider\n      .state('root', {\n        abstract:    true,\n        resolve:     {\n          me: (Me) => Me.get()\n        },\n        templateUrl: \"/profile/templates/partials/root\",\n        controller:  'ProfileRootCtrl'\n      });\n\n    var states = {\n      'root.aboutme': {\n        url:         \"/\",\n        title:       'Публичный профиль',\n        templateUrl: \"/profile/templates/partials/aboutme\",\n        controller:  'ProfileAboutMeCtrl'\n      },\n      'root.account': {\n        url:         '/account',\n        title:       'Аккаунт',\n        templateUrl: \"/profile/templates/partials/account\",\n        controller:  'ProfileAccountCtrl'\n      },\n      'root.quiz': {\n        url:         '/quiz',\n        title:       'Тесты',\n        templateUrl: \"/profile/templates/partials/quiz\",\n        controller:  'ProfileQuizResultsCtrl',\n        resolve:     {\n          quizResults: (QuizResults) => QuizResults.query()\n        }\n      }\n    };\n\n    // enabled states depend on user, are set to global variable in index.jade\n    for(var key in states) {\n      if (~window.profileStatesEnabled.indexOf(key)) {\n        $stateProvider.state(key, states[key]);\n      }\n    }\n\n\n  })\n  .controller('ProfileRootCtrl', ($scope, $state, $timeout, $http, me, promiseTracker) => {\n\n    //window.me = me;\n    $scope.me = me;\n\n    $scope.loadingTracker = promiseTracker();\n\n    $scope.states = $state.get()\n      .filter((state) => {\n        return !state.abstract;\n      })\n      .map((state) => {\n        return {\n          title:     state.title,\n          name:      state.name,\n          url:       state.url\n        };\n      });\n\n\n  })\n  .controller('ProfileAboutMeCtrl', ($scope, me) => {\n\n    $scope.me = me;\n\n  })\n  .controller('ProfileQuizResultsCtrl', ($scope, quizResults) => {\n\n    $scope.quizResults = quizResults;\n\n  })\n  .controller('ProfileAccountCtrl', ($scope, $http, me, Me) => {\n\n    $scope.me = me;\n\n    $scope.remove = function() {\n      var isSure = confirm(`${me.displayName} (${me.email}) - удалить пользователя без возможности восстановления?`);\n\n      if (!isSure) return;\n\n      $http({\n        method:           'DELETE',\n        url:              '/users/me',\n        tracker:          $scope.loadingTracker,\n        headers:          {'Content-Type': undefined},\n        transformRequest: angular.identity,\n        data:             new FormData()\n      }).then((response) => {\n\n        alert('Пользователь удалён.');\n        window.location.href = '/';\n\n      }, (response) => {\n        new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n      });\n    };\n\n    $scope.removeProvider = function(providerName) {\n      var isSure = confirm(`${providerName} - удалить привязку?`);\n\n      if (!isSure) return;\n\n      $http({\n        method:  'POST',\n        url:     '/auth/disconnect/' + providerName,\n        tracker: this.loadingTracker\n      }).then( (response) => {\n        // refresh user\n        $scope.me = Me.get();\n      }, (response) => {\n        new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n      });\n\n    };\n\n  })\n  .filter('capitalize', () => function(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  })\n  .filter('quizDate', () => function(date) {\n    return moment(date).format('D MMMM YYYY в LT');\n  })\n  .filter('quizDuration', () => function(seconds) {\n    return moment.duration(seconds, 'seconds').humanize();\n  });\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/index.js\n **/","module.exports = angular;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 7\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\n\nangular.module('profile')\n  .directive('profileField', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profileField',\n      scope:       {\n        title:       '@fieldTitle',\n        name:        '@fieldName',\n        formatValue: '=?fieldFormatValue',\n        value:       '=fieldValue'\n      },\n      replace:     true,\n      transclude:  true,\n      link:        function(scope, element, attrs, noCtrl, transclude) {\n\n        if (!scope.formatValue) {\n          scope.formatValue = function(value) {\n            return value;\n          };\n        }\n\n\n        scope.loadingTracker = promiseTracker();\n\n        scope.edit = function() {\n          if (this.editing) return;\n          this.editing = true;\n          this.editingValue = this.value;\n        };\n\n        scope.submit = function() {\n          if (this.form.$invalid) return;\n\n          if (this.value == this.editingValue) {\n            this.editing = false;\n            this.editingValue = '';\n            return;\n          }\n\n          var formData = new FormData();\n          formData.append(this.name, this.editingValue);\n\n          $http({\n            method:           'PATCH',\n            url:              '/users/me',\n            tracker:          this.loadingTracker,\n            headers:          {'Content-Type': undefined},\n            transformRequest: angular.identity,\n            data:             formData\n          }).then((response) => {\n\n            if (this.name == 'displayName') {\n              new notification.Success(\"Изменение имени везде произойдёт после перезагрузки страницы.\", 'slow');\n            } else if (this.name == 'email') {\n              new notification.Warning(\"Требуется подтвердить смену email, проверьте почту.\", 'slow');\n            } else if (this.name == 'profileName') {\n              new notification.Success(\"Ваш профиль доступен по новому адресу, страница будет перезагружена\");\n              setTimeout(function() {\n                window.location.href = '/profile/' + this.editingValue + '/account';\n              }, 2000);\n            } else {\n              new notification.Success(\"Информация обновлена.\");\n            }\n\n            this.editing = false;\n            this.value = this.editingValue;\n            this.editingValue = '';\n\n          }, (response) => {\n            //console.log(response);\n            if (response.status == 400) {\n\n              new notification.Error(response.data.message);\n            } else if (response.status == 409) {\n              new notification.Error(response.data.message);\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n        };\n\n\n        scope.cancel = function() {\n          if (!this.editing) return;\n          // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n          // so we wait until the event bubbles and ends, and *then* cancel\n          $timeout(() => {\n            this.editing = false;\n            this.editingValue = \"\";\n          });\n        };\n\n        transclude(scope, function(clone, scope) {\n          element[0].querySelector('[control-transclude]').append(clone[0]);\n        });\n\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profileField.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\nvar thumb = require('client/image').thumb;\n\n\nangular.module('profile')\n  .directive('profilePhoto', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profilePhoto',\n      scope: {\n        photo: '='\n      },\n      replace: true,\n\n      link: function(scope, element, attrs, noCtrl) {\n        scope.loadingTracker = promiseTracker();\n        var self = this;\n\n        scope.changePhoto = function() {\n          var fileInput = document.createElement('input');\n          fileInput.type = 'file';\n          fileInput.accept = \"image/*\";\n\n          fileInput.onchange = function() {\n\n            var reader = new FileReader();\n            var file = fileInput.files[0];\n\n            reader.onload = function(event) {\n              var image = new Image();\n              image.onload = function() {\n                if (image.width != image.height || image.width < 160) {\n                  new notification.Error(\"Изображение должно быть квадратом, размер 160x160 или больше\");\n                } else {\n                  uploadPhoto(file);\n                }\n              };\n              image.src = event.target.result;\n            };\n            reader.readAsDataURL(file);\n\n          };\n          fileInput.click();\n        };\n\n\n        function uploadPhoto(file) {\n\n          var formData = new FormData();\n          formData.append(\"photo\", file);\n\n          $http({\n            method: 'PATCH',\n            url: '/users/me',\n            headers: {'Content-Type': undefined },\n            tracker: scope.loadingTracker,\n            transformRequest: angular.identity,\n            data: formData\n          }).then(function(response) {\n            scope.photo = response.data.photo;\n            new notification.Success(\"Изображение обновлено.\");\n          }, function(response) {\n            if (response.status == 400) {\n              new notification.Error(\"Неверный тип файла или изображение повреждено.\");\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n\n        }\n      }\n    };\n\n  })\n  .filter('thumb', () => thumb);\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profilePhoto.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\n\nangular.module('profile')\n  .directive('profilePassword', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profilePassword',\n      scope:       {\n        hasPassword: '='\n      },\n      replace:     true,\n      link:        function(scope, element, attrs, noCtrl, transclude) {\n\n        scope.password = '';\n        scope.passwordOld = '';\n\n        scope.loadingTracker = promiseTracker();\n\n        scope.edit = function() {\n          if (this.editing) return;\n          this.editing = true;\n\n          $timeout(function() {\n            var input = element[0].elements[scope.hasPassword ? 'passwordOld' : 'password'];\n            input.focus();\n          });\n        };\n\n        scope.submit = function() {\n          if (scope.form.$invalid) return;\n\n          var formData = new FormData();\n          formData.append(\"password\", this.password);\n          formData.append(\"passwordOld\", this.passwordOld);\n\n          $http({\n            method:           'PATCH',\n            url:              '/users/me',\n            tracker:          this.loadingTracker,\n            headers:          {'Content-Type': undefined},\n            transformRequest: angular.identity,\n            data:             formData\n          }).then((response) => {\n            new notification.Success(\"Пароль обновлён.\");\n            scope.editing = false;\n            // now have password for sure\n            scope.hasPassword = true;\n\n            // and clean password fields\n            scope.password = '';\n            scope.passwordOld = '';\n            scope.form.$setPristine();\n\n          }, (response) => {\n            if (response.status == 400) {\n              new notification.Error(response.data.message || response.data.errors.password);\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n        };\n\n\n        scope.cancel = function() {\n          if (!this.editing) return;\n          // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n          // so we wait until the event bubbles and ends, and *then* cancel\n          $timeout(() => {\n            this.editing = false;\n          });\n        };\n\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profilePassword.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\nangular.module('profile')\n  .directive('profileAuthProviders', function(promiseTracker, $http, authPopup, Me) {\n    return {\n      templateUrl: '/profile/templates/partials/profileAuthProviders',\n      replace: true,\n\n      link: function(scope) {\n\n        scope.connect = function(providerName) {\n          authPopup('/auth/connect/' + providerName, () => {\n            // refresh user\n            scope.me = Me.get();\n\n          }, () => {\n            console.error(\"fail\", arguments);\n          });\n        };\n\n        scope.connected = function(providerName) {\n          var connected = false;\n\n          if (!scope.me.providers) return false;\n          scope.me.providers.forEach(function(provider) {\n            if (provider.name == providerName) connected = true;\n          });\n\n          return connected;\n        };\n      }\n    };\n\n  }).service('authPopup', function() {\n\n    var authPopup;\n\n    return function(url, onSuccess, onFail) {\n\n        if (authPopup && !authPopup.closed) {\n          authPopup.close(); // close old popup if any\n        }\n        var width = 800, height = 600;\n        var top = (window.outerHeight - height) / 2;\n        var left = (window.outerWidth - width) / 2;\n\n        window.authModal = {\n          onAuthSuccess: onSuccess,\n          onAuthFailure: onFail\n        };\n\n        authPopup = window.open(url, 'authModal', 'width=' + width + ',height=' + height + ',scrollbars=0,top=' + top + ',left=' + left);\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profileAuthProviders.js\n **/","var angular = require('angular');\n\nangular.module('profile')\n  .directive('dateValidator', function() {\n    return {\n      require: 'ngModel',\n      link:    function(scope, element, attrs, ngModel) {\n\n        ngModel.$validators.date = function(modelValue, viewValue) {\n          var value = modelValue || viewValue;\n          if (!value) return true;\n          var split = value.split('.');\n          if (split.length != 3) return false;\n          var date = new Date(split[2], split[1]-1, split[0]);\n\n          if (split[2].length != 4) return false;\n\n          return date.getFullYear() == split[2] && date.getMonth() == split[1]-1 && date.getDate() == split[0];\n        };\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/dateValidator.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\nvar moment = require('momentWithLocale');\n\nangular.module('profile')\n  .directive('dateRangeValidator', function() {\n    return {\n      require: 'ngModel',\n      link:    function(scope, element, attrs, ngModel) {\n\n        var range = attrs.dateRangeValidator.split('-');\n        var from = range[0] ? moment(range[0], \"DD.MM.YYYY\").toDate() : new Date();\n        var to = range[1] ? moment(range[1], \"DD.MM.YYYY\").toDate() : new Date();\n\n        ngModel.$validators.dateRange = function(modelValue, viewValue) {\n          var value = modelValue || viewValue;\n          if (!value) return true;\n\n          var split = value.split('.');\n          if (split.length != 3) return false;\n          var date = new Date(split[2], split[1]-1, split[0]);\n\n          if (split[2].length != 4) return false;\n\n          return date >= from && date <= to;\n        };\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/dateRangeValidator.js\n **/","require('moment/locale/ru');\n\nmodule.exports = require('moment');\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/momentWithLocale.js\n **/","\nexports.thumb = function(url, width, height) {\n  // sometimes this may be called without url\n  if (!url) return url;\n\n  var pixelRatio = window.devicePixelRatio;\n\n  // return pixelRatio times larger image for retina\n  width *= pixelRatio;\n  height *= pixelRatio;\n\n  var modifier = (width <= 160 && height <= 160) ? 't' :\n    (width <= 320 && height <= 320) ? 'm' :\n      (width <= 640 && height <= 640) ? 'i' :\n        (width <= 1024 && height <= 1024) ? 'h' : '';\n\n  return url.slice(0, url.lastIndexOf('.')) + modifier + url.slice(url.lastIndexOf('.'));\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/image.js\n **/","// moment.js locale configuration\n// locale : russian (ru)\n// author : Viktorminator : https://github.com/Viktorminator\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = {\n            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return monthsShort[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ru', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сегодня в] LT',\n            nextDay: '[Завтра в] LT',\n            lastDay: '[Вчера в] LT',\n            nextWeek: function () {\n                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd [в] LT';\n                    } else {\n                        return '[В] dddd [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/moment/locale/ru.js\n **/","//! moment.js\n//! version : 2.9.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.9.0',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = (typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window)) ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenOffsetMs = /[\\+\\-]?\\d+/, // 1234567890123\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            x    : function () {\n                return this.valueOf();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],\n\n        updateInProgress = false;\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    function monthDiff(a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // thie is not supposed to happen\n            return hour;\n        }\n    }\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            moment.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||\n                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||\n                                           m._a[SECOND] !== 0 ||\n                                           m._a[MILLISECOND] !== 0)) ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/utcOffset equivalent to\n    // model.\n    function makeAs(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (moment.isMoment(input) || isDate(input) ?\n                    +input : +moment(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            moment.updateOffset(res, false);\n            return res;\n        } else {\n            return moment(input).local();\n        }\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n            // Lenient ordinal parsing accepts just a number in addition to\n            // number + (possibly) stuff coming from _ordinalParseLenient.\n            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName, format, strict) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n                this._longMonthsParse = [];\n                this._shortMonthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                mom = moment.utc([2000, i]);\n                if (strict && !this._longMonthsParse[i]) {\n                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n                }\n                if (!strict && !this._monthsParse[i]) {\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (!strict && this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LTS : 'h:mm:ss A',\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom, now) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n        _ordinalParse : /\\d{1,2}/,\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        firstDayOfWeek : function () {\n            return this._week.dow;\n        },\n\n        firstDayOfYear : function () {\n            return this._week.doy;\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'x':\n            return parseTokenOffsetMs;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function utcOffsetFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input, token, config._strict);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(\n                            input.match(/\\d{1,2}/)[0], 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._meridiem = input;\n            // config._isPm = config._locale.isPM(input);\n            break;\n        // HOUR\n        case 'h' : // fall through to hh\n        case 'hh' :\n            config._pf.bigHour = true;\n            /* falls through */\n        case 'H' : // fall through to HH\n        case 'HH' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX OFFSET (MILLISECONDS)\n        case 'x':\n            config._d = new Date(toInt(input));\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = utcOffsetFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day || normalizedInput.date,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR],\n                config._meridiem);\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        res = new Moment(config);\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    moment.isDate = isDate;\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d - ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                if ('function' === typeof Date.prototype.toISOString) {\n                    // native implementation is ~50x faster, use it when we can\n                    return this.toDate().toISOString();\n                } else {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.utcOffset(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.utcOffset(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.subtract(this._dateUtcOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (that.utcOffset() - this.utcOffset()) * 6e4,\n                anchor, diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month' || units === 'quarter') {\n                output = monthDiff(this, that);\n                if (units === 'quarter') {\n                    output = output / 3;\n                } else if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = this - that;\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're locat/utc/offset\n            // or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this, moment(now)));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.utcOffset() > this.clone().month(0).utcOffset() ||\n                this.utcOffset() > this.clone().month(5).utcOffset());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            if (units === undefined || units === 'millisecond') {\n                return this;\n            }\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return inputMs < +this.clone().startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return +this.clone().endOf(units) < inputMs;\n            }\n        },\n\n        isBetween: function (from, to, units) {\n            return this.isAfter(from, units) && this.isBefore(to, units);\n        },\n\n        isSame: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                inputMs = +moment(input);\n                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        zone : deprecate(\n                'moment().zone is deprecated, use moment().utcOffset instead. ' +\n                'https://github.com/moment/moment/issues/1779',\n                function (input, keepLocalTime) {\n                    if (input != null) {\n                        if (typeof input !== 'string') {\n                            input = -input;\n                        }\n\n                        this.utcOffset(input, keepLocalTime);\n\n                        return this;\n                    } else {\n                        return -this.utcOffset();\n                    }\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        utcOffset : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = utcOffsetFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateUtcOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.add(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(input - offset, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n\n                return this;\n            } else {\n                return this._isUTC ? offset : this._dateUtcOffset();\n            }\n        },\n\n        isLocal : function () {\n            return !this._isUTC;\n        },\n\n        isUtcOffset : function () {\n            return this._isUTC;\n        },\n\n        isUtc : function () {\n            return this._isUTC && this._offset === 0;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.utcOffset(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.utcOffset(utcOffsetFromString(this._i));\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).utcOffset();\n            }\n\n            return (this.utcOffset() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            var unit;\n            if (typeof units === 'object') {\n                for (unit in units) {\n                    this.set(unit, units[unit]);\n                }\n            }\n            else {\n                units = normalizeUnits(units);\n                if (typeof this[units] === 'function') {\n                    this[units](value);\n                }\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateUtcOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    // alias isUtc for dev-friendliness\n    moment.fn.isUTC = moment.fn.isUtc;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + Math.round(yearsToDays(this._months / 12));\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        toJSON : function () {\n            return this.toISOString();\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    /* EMBED_LOCALES */\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/moment/moment.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** (webpack)/buildin/module.js\n **/"],"sourceRoot":""}