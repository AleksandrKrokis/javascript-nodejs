{"version":3,"sources":["webpack:///coursesCourse.b3af1a960cf08d2ba066.js","webpack:///./handlers/courses/client/course/index.js","webpack:///./client/xhr.js","webpack:///./handlers/newsletter/client/index.js","webpack:///./client/getCsrfCookie.js"],"names":["coursesCourse","webpackJsonp_name_","module","exports","__webpack_require__","initNewsletterForm","form","document","querySelector","onsubmit","event","preventDefault","newsletter","submitSubscribeForm","initSignupButton","link","onclick","window","currentUser","spinner","Spinner","elem","size","class","elemClass","start","e","stop","AuthModal","callback","location","href",28,"xhr","options","wrapEvent","name","CustomEvent","originalEvent","fail","reason","request","dispatchEvent","success","result","XMLHttpRequest","method","body","url","open","sync","csrfCookie","getCsrfCookie","skipCsrf","setRequestHeader","toString","call","JSON","stringify","noDocumentEvents","addEventListener","timeStart","Date","now","raw","normalStatuses","status","indexOf","responseText","contentType","getResponseHeader","match","json","parse","setTimeout","send","notification","Error",60,"onSuccess","elements","email","value","action","slug","submitButton","disabled","formLabel","getAttribute","this","metrika","reachGoal","ga","Success","message",77,"cookie"],"mappings":"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","file":"coursesCourse.b3af1a960cf08d2ba066.js","sourcesContent":["var coursesCourse =\nwebpackJsonp_name_([1],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar newsletter = __webpack_require__(60);\n\tvar Spinner = __webpack_require__(53);\n\tvar xhr = __webpack_require__(28);\n\t\n\tinitNewsletterForm();\n\t\n\tinitSignupButton();\n\t\n\tfunction initNewsletterForm() {\n\t\n\t  var form = document.querySelector('[data-newsletter-subscribe-form]');\n\t  if (!form) return;\n\t\n\t  form.onsubmit = function (event) {\n\t    event.preventDefault();\n\t    newsletter.submitSubscribeForm(form);\n\t  };\n\t}\n\t\n\tfunction initSignupButton() {\n\t\n\t  var link = document.querySelector('[data-group-signup-link]');\n\t  if (!link) return;\n\t\n\t  link.onclick = function (event) {\n\t\n\t    if (window.currentUser) {\n\t      return;\n\t    }\n\t\n\t    event.preventDefault();\n\t\n\t    var spinner = new Spinner({\n\t      elem: link,\n\t      size: 'small',\n\t      'class': 'submit-button__spinner',\n\t      elemClass: 'submit-button_progress'\n\t    });\n\t    spinner.start();\n\t\n\t    __webpack_require__.e/* nsure */(2, function () {\n\t      spinner.stop();\n\t      var AuthModal = __webpack_require__(59).AuthModal;\n\t      new AuthModal({\n\t        callback: function callback() {\n\t          window.location.href = link.href;\n\t        }\n\t      });\n\t    });\n\t  };\n\t}\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar getCsrfCookie = __webpack_require__(77);\n\t// Wrapper about XHR\n\t// # Global Events\n\t// triggers document.loadstart/loadend on communication start/end\n\t//    --> unless options.noGlobalEvents is set\n\t//\n\t// # Events\n\t// triggers fail/success on load end:\n\t//    --> by default status=200 is ok, the others are failures\n\t//    --> options.normalStatuses = [201,409] allow given statuses\n\t//    --> fail event has .reason field\n\t//    --> success event has .result field\n\t//\n\t// # JSON\n\t//    --> send(object) calls JSON.stringify\n\t//    --> adds Accept: json (we want json) by default, unless options.raw\n\t// if options.json or server returned json content type\n\t//    --> autoparse json\n\t//    --> fail if error\n\t//\n\t// # CSRF\n\t//    --> requests sends header X-XSRF-TOKEN from cookie\n\t\n\tfunction xhr(options) {\n\t\n\t  var request = new XMLHttpRequest();\n\t\n\t  var method = options.method || 'GET';\n\t\n\t  var body = options.body;\n\t  var url = options.url;\n\t\n\t  request.open(method, url, options.sync ? false : true);\n\t\n\t  request.method = method;\n\t\n\t  // token/header names same as angular $http for easier interop\n\t  var csrfCookie = getCsrfCookie();\n\t  if (csrfCookie && !options.skipCsrf) {\n\t    request.setRequestHeader('X-XSRF-TOKEN', csrfCookie);\n\t  }\n\t\n\t  if (({}).toString.call(body) == '[object Object]') {\n\t    // must be OPENed to setRequestHeader\n\t    request.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\n\t    body = JSON.stringify(body);\n\t  }\n\t\n\t  if (!options.noDocumentEvents) {\n\t    request.addEventListener('loadstart', function (event) {\n\t      request.timeStart = Date.now();\n\t      var e = wrapEvent('xhrstart', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('loadend', function (event) {\n\t      var e = wrapEvent('xhrend', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('success', function (event) {\n\t      var e = wrapEvent('xhrsuccess', event);\n\t      e.result = event.result;\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('fail', function (event) {\n\t      var e = wrapEvent('xhrfail', event);\n\t      e.reason = event.reason;\n\t      document.dispatchEvent(e);\n\t    });\n\t  }\n\t\n\t  if (!options.raw) {\n\t    // means we want json\n\t    request.setRequestHeader('Accept', 'application/json');\n\t  }\n\t\n\t  request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t\n\t  var normalStatuses = options.normalStatuses || [200];\n\t\n\t  function wrapEvent(name, e) {\n\t    var event = new CustomEvent(name);\n\t    event.originalEvent = e;\n\t    return event;\n\t  }\n\t\n\t  function fail(reason, originalEvent) {\n\t    var e = wrapEvent('fail', originalEvent);\n\t    e.reason = reason;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  function success(result, originalEvent) {\n\t    var e = wrapEvent('success', originalEvent);\n\t    e.result = result;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  request.addEventListener('error', function (e) {\n\t    fail('Ошибка связи с сервером.', e);\n\t  });\n\t\n\t  request.addEventListener('timeout', function (e) {\n\t    fail('Превышено максимально допустимое время ожидания ответа от сервера.', e);\n\t  });\n\t\n\t  request.addEventListener('abort', function (e) {\n\t    fail('Запрос был прерван.', e);\n\t  });\n\t\n\t  request.addEventListener('load', function (e) {\n\t    if (!request.status) {\n\t      // does that ever happen?\n\t      fail('Не получен ответ от сервера.', e);\n\t      return;\n\t    }\n\t\n\t    if (normalStatuses.indexOf(request.status) == -1) {\n\t      fail('Ошибка на стороне сервера (код ' + request.status + '), попытайтесь позднее', e);\n\t      return;\n\t    }\n\t\n\t    var result = request.responseText;\n\t    var contentType = request.getResponseHeader('Content-Type');\n\t    if (contentType.match(/^application\\/json/) || options.json) {\n\t      // autoparse json if WANT or RECEIVED json\n\t      try {\n\t        result = JSON.parse(result);\n\t      } catch (e) {\n\t        fail('Некорректный формат ответа от сервера', e);\n\t        return;\n\t      }\n\t    }\n\t\n\t    success(result, e);\n\t  });\n\t\n\t  // defer to let other handlers be assigned\n\t  setTimeout(function () {\n\t    request.send(body);\n\t  }, 0);\n\t\n\t  return request;\n\t}\n\t\n\tdocument.addEventListener('xhrfail', function (event) {\n\t  new notification.Error(event.reason);\n\t});\n\t\n\tmodule.exports = xhr;\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Spinner = __webpack_require__(53);\n\tvar xhr = __webpack_require__(28);\n\tvar notification = __webpack_require__(23);\n\t\n\tfunction submitSubscribeForm(form, onSuccess) {\n\t\n\t  if (!form.elements.email.value) {\n\t    return;\n\t  }\n\t\n\t  var request = xhr({\n\t    method: 'POST',\n\t    url: form.action,\n\t    body: {\n\t      email: form.elements.email.value,\n\t      slug: form.elements.slug.value\n\t    }\n\t  });\n\t\n\t  var submitButton = form.querySelector('[type=\"submit\"]');\n\t\n\t  var spinner = new Spinner({\n\t    elem: submitButton,\n\t    size: 'small',\n\t    elemClass: 'button_loading'\n\t  });\n\t  spinner.start();\n\t  submitButton.disabled = true;\n\t\n\t  request.addEventListener('loadend', function () {\n\t    spinner.stop();\n\t    submitButton.disabled = false;\n\t  });\n\t\n\t  var formLabel = form.getAttribute('data-newsletter-subscribe-form');\n\t\n\t  request.addEventListener('success', function (event) {\n\t    if (this.status == 200) {\n\t\n\t      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE', {\n\t        form: formLabel\n\t      });\n\t      window.ga('send', 'event', 'newsletter', 'subscribe', formLabel);\n\t\n\t      new notification.Success(event.result.message, 'slow');\n\t      onSuccess && onSuccess();\n\t    } else {\n\t\n\t      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE-FAIL', {\n\t        form: formLabel\n\t      });\n\t      window.ga('send', 'event', 'newsletter', 'subscribe-fail', formLabel);\n\t\n\t      new notification.Error(event.result.message);\n\t    }\n\t  });\n\t}\n\t\n\texports.submitSubscribeForm = submitSubscribeForm;\n\n/***/ },\n\n/***/ 77:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function () {\n\t  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n\t  return csrfCookie ? csrfCookie[1] : null;\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** coursesCourse.b3af1a960cf08d2ba066.js\n **/","var newsletter = require('newsletter/client');\nvar Spinner = require('client/spinner');\nvar xhr = require('client/xhr');\n\ninitNewsletterForm();\n\ninitSignupButton();\n\nfunction initNewsletterForm() {\n\n  var form = document.querySelector('[data-newsletter-subscribe-form]');\n  if (!form) return;\n\n  form.onsubmit = function(event) {\n    event.preventDefault();\n    newsletter.submitSubscribeForm(form);\n  };\n\n}\n\nfunction initSignupButton() {\n\n  var link = document.querySelector('[data-group-signup-link]');\n  if (!link) return;\n\n  link.onclick = function(event) {\n\n    if (window.currentUser) {\n      return;\n    }\n\n    event.preventDefault();\n\n    var spinner = new Spinner({\n      elem:      link,\n      size:      'small',\n      class:     'submit-button__spinner',\n      elemClass: 'submit-button_progress'\n    });\n    spinner.start();\n\n    require.ensure('auth/client', function() {\n      spinner.stop();\n      var AuthModal = require('auth/client').AuthModal;\n      new AuthModal({\n        callback: function() {\n          window.location.href = link.href;\n        }\n      });\n    }, 'authClient');\n  };\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/courses/client/course/index.js\n **/","var notification = require('client/notification');\nvar getCsrfCookie = require('client/getCsrfCookie');\n// Wrapper about XHR\n// # Global Events\n// triggers document.loadstart/loadend on communication start/end\n//    --> unless options.noGlobalEvents is set\n//\n// # Events\n// triggers fail/success on load end:\n//    --> by default status=200 is ok, the others are failures\n//    --> options.normalStatuses = [201,409] allow given statuses\n//    --> fail event has .reason field\n//    --> success event has .result field\n//\n// # JSON\n//    --> send(object) calls JSON.stringify\n//    --> adds Accept: json (we want json) by default, unless options.raw\n// if options.json or server returned json content type\n//    --> autoparse json\n//    --> fail if error\n//\n// # CSRF\n//    --> requests sends header X-XSRF-TOKEN from cookie\n\nfunction xhr(options) {\n\n  var request = new XMLHttpRequest();\n\n  var method = options.method || 'GET';\n\n  var body = options.body;\n  var url = options.url;\n\n  request.open(method, url, options.sync ? false : true);\n\n  request.method = method;\n\n  // token/header names same as angular $http for easier interop\n  var csrfCookie = getCsrfCookie();\n  if (csrfCookie && !options.skipCsrf) {\n    request.setRequestHeader(\"X-XSRF-TOKEN\", csrfCookie);\n  }\n\n  if ({}.toString.call(body) == '[object Object]') {\n    // must be OPENed to setRequestHeader\n    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    body = JSON.stringify(body);\n  }\n\n  if (!options.noDocumentEvents) {\n    request.addEventListener('loadstart', event => {\n      request.timeStart = Date.now();\n      var e = wrapEvent('xhrstart', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('loadend', event => {\n      var e = wrapEvent('xhrend', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('success', event => {\n      var e = wrapEvent('xhrsuccess', event);\n      e.result = event.result;\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('fail', event => {\n      var e = wrapEvent('xhrfail', event);\n      e.reason = event.reason;\n      document.dispatchEvent(e);\n    });\n  }\n\n  if (!options.raw) { // means we want json\n    request.setRequestHeader(\"Accept\", \"application/json\");\n  }\n\n  request.setRequestHeader('X-Requested-With', \"XMLHttpRequest\");\n\n  var normalStatuses = options.normalStatuses || [200];\n\n  function wrapEvent(name, e) {\n    var event = new CustomEvent(name);\n    event.originalEvent = e;\n    return event;\n  }\n\n  function fail(reason, originalEvent) {\n    var e = wrapEvent(\"fail\", originalEvent);\n    e.reason = reason;\n    request.dispatchEvent(e);\n  }\n\n  function success(result, originalEvent) {\n    var e = wrapEvent(\"success\", originalEvent);\n    e.result = result;\n    request.dispatchEvent(e);\n  }\n\n  request.addEventListener(\"error\", e => {\n    fail(\"Ошибка связи с сервером.\", e);\n  });\n\n  request.addEventListener(\"timeout\", e => {\n    fail(\"Превышено максимально допустимое время ожидания ответа от сервера.\", e);\n  });\n\n  request.addEventListener(\"abort\", e => {\n    fail(\"Запрос был прерван.\", e);\n  });\n\n  request.addEventListener(\"load\", e => {\n    if (!request.status) { // does that ever happen?\n      fail(\"Не получен ответ от сервера.\", e);\n      return;\n    }\n\n    if (normalStatuses.indexOf(request.status) == -1) {\n      fail(\"Ошибка на стороне сервера (код \" + request.status + \"), попытайтесь позднее\", e);\n      return;\n    }\n\n    var result = request.responseText;\n    var contentType = request.getResponseHeader(\"Content-Type\");\n    if (contentType.match(/^application\\/json/) || options.json) { // autoparse json if WANT or RECEIVED json\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        fail(\"Некорректный формат ответа от сервера\", e);\n        return;\n      }\n    }\n\n    success(result, e);\n  });\n\n  // defer to let other handlers be assigned\n  setTimeout(function() {\n    request.send(body);\n  }, 0);\n\n  return request;\n\n}\n\n\ndocument.addEventListener('xhrfail', function(event) {\n  new notification.Error(event.reason);\n});\n\n\nmodule.exports = xhr;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/xhr.js\n **/","var Spinner = require('client/spinner');\nvar xhr = require('client/xhr');\nvar notification = require('client/notification');\n\nfunction submitSubscribeForm(form, onSuccess) {\n\n  if (!form.elements.email.value) {\n    return;\n  }\n\n  const request = xhr({\n    method: 'POST',\n    url:    form.action,\n    body:   {\n      email: form.elements.email.value,\n      slug: form.elements.slug.value\n    }\n  });\n\n  var submitButton = form.querySelector('[type=\"submit\"]');\n\n  var spinner = new Spinner({\n    elem:      submitButton,\n    size:      'small',\n    elemClass: 'button_loading'\n  });\n  spinner.start();\n  submitButton.disabled = true;\n\n  request.addEventListener('loadend', ()=> {\n    spinner.stop();\n    submitButton.disabled = false;\n  });\n\n  var formLabel = form.getAttribute('data-newsletter-subscribe-form');\n\n  request.addEventListener('success', function(event) {\n    if (this.status == 200) {\n\n      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE', {\n        form: formLabel\n      });\n      window.ga('send', 'event', 'newsletter', 'subscribe', formLabel);\n\n      new notification.Success(event.result.message, 'slow');\n      onSuccess && onSuccess();\n    } else {\n\n      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE-FAIL', {\n        form: formLabel\n      });\n      window.ga('send', 'event', 'newsletter', 'subscribe-fail', formLabel);\n\n      new notification.Error(event.result.message);\n    }\n  });\n\n}\n\nexports.submitSubscribeForm = submitSubscribeForm;\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/newsletter/client/index.js\n **/","module.exports = function() {\n  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n  return csrfCookie ? csrfCookie[1] : null;\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/getCsrfCookie.js\n **/"],"sourceRoot":""}