{"version":3,"sources":["webpack:///profile.24a89ea91979b213affb.js","webpack:///./handlers/profile/client/index.js","webpack:///external \"angular\"","webpack:///./handlers/profile/client/profileField.js","webpack:///./handlers/profile/client/profilePhoto.js","webpack:///./handlers/profile/client/profilePassword.js","webpack:///./handlers/profile/client/profileAuthProviders.js","webpack:///./handlers/profile/client/dateValidator.js","webpack:///./handlers/profile/client/dateRangeValidator.js","webpack:///./modules/momentWithLocale.js","webpack:///./client/image.js?8da9*","webpack:///./~/moment/locale/ru.js","webpack:///./~/moment/moment.js","webpack:///(webpack)/buildin/module.js"],"names":["profile","webpackJsonp_name_","module","exports","__webpack_require__","angular","notification","moment","factory","$resource","get","method","transformResponse","data","JSON","parse","created","Date","window","currentUser","id","query","isArray","forEach","result","config","$locationProvider","$stateProvider","html5Mode","state","abstract","resolve","me","Me","templateUrl","controller","states","root.aboutme","url","title","root.account","root.quiz","quizResults","QuizResults","key","profileStatesEnabled","indexOf","$scope","$state","$timeout","$http","promiseTracker","loadingTracker","filter","map","name","remove","isSure","confirm","displayName","email","tracker","headers","Content-Type","undefined","transformRequest","identity","FormData","then","alert","location","href","response","Error","status","removeProvider","providerName","this","str","toUpperCase","slice","date","format","seconds","duration","humanize",1,24,"directive","scope","formatValue","value","replace","transclude","link","element","attrs","noCtrl","edit","editing","editingValue","submit","_this","form","$invalid","formData","append","Success","Warning","setTimeout","message","cancel","_this2","clone","querySelector",25,"thumb","photo","uploadPhoto","file","changePhoto","fileInput","document","createElement","type","accept","onchange","reader","FileReader","files","onload","event","image","Image","width","height","src","target","readAsDataURL","click",26,"hasPassword","password","passwordOld","input","elements","focus","$setPristine","errors",27,"authPopup","connect","arguments","connected","providers","provider","service","onSuccess","onFail","closed","close","top","outerHeight","left","outerWidth","authModal","onAuthSuccess","onAuthFailure","open",28,"require","ngModel","$validators","modelValue","viewValue","split","length","getFullYear","getMonth","getDate",29,"range","dateRangeValidator","from","toDate","to","dateRange",30,54,"pixelRatio","devicePixelRatio","modifier","lastIndexOf",60,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","apply","plural","word","num","forms","relativeTimeWithPlural","number","withoutSuffix","mm","hh","dd","MM","yy","monthsCaseReplace","m","months","nominative","accusative","nounCase","test","month","monthsShortCaseReplace","monthsShort","weekdaysCaseReplace","weekdays","day","defineLocale","weekdaysShort","weekdaysMin","monthsParse","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","now","week","sameElse","relativeTime","future","past","s","h","d","M","y","meridiemParse","isPM","meridiem","hour","ordinalParse","ordinal","period","dow","doy",61,"global","dfl","a","b","c","hasOwnProp","hasOwnProperty","call","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","printMsg","msg","suppressDeprecationWarnings","console","warn","deprecate","fn","firstTime","extend","deprecateSimple","deprecations","padToken","func","count","leftZeroFill","ordinalizeToken","localeData","monthDiff","anchor2","adjust","wholeMonthDiff","year","anchor","add","meridiemFixWrap","locale","isPm","meridiemHour","Locale","Moment","skipOverflow","checkOverflow","copyConfig","_d","updateInProgress","updateOffset","Duration","normalizedInput","normalizeObjectUnits","years","quarters","quarter","weeks","days","hours","minutes","minute","second","milliseconds","millisecond","_milliseconds","_days","_months","_data","_locale","_bubble","i","toString","valueOf","prop","val","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_pf","momentProperties","absRound","Math","ceil","floor","targetLength","forceSign","output","abs","sign","positiveMomentsDifference","base","other","res","isAfter","momentsDifference","makeAs","isBefore","createAdder","direction","dur","tmp","isNaN","addOrSubtractDurationFromMoment","mom","isAdding","setTime","rawSetter","rawGetter","rawMonthSetter","Object","prototype","isDate","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","diffs","toInt","normalizeUnits","units","lowered","toLowerCase","unitAliases","camelFunctions","inputObject","normalizedProp","makeList","field","setter","index","getter","results","utc","set","push","argumentForCoercion","coercedNumber","isFinite","daysInMonth","UTC","getUTCDate","weeksInYear","weekOfYear","daysInYear","isLeapYear","_a","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","isValid","_isValid","getTime","bigHour","normalizeLocale","chooseLocale","names","j","next","loadLocale","join","oldLocale","locales","hasModule","e","code","model","diff","isMoment","local","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatTokenFunctions","Function","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","getParseRegexForToken","token","strict","parseTokenOneDigit","parseTokenThreeDigits","parseTokenFourDigits","parseTokenOneToFourDigits","parseTokenSignedNumber","parseTokenSixDigits","parseTokenOneToSixDigits","parseTokenTwoDigits","parseTokenOneToThreeDigits","parseTokenWord","_meridiemParse","parseTokenOffsetMs","parseTokenTimestampMs","parseTokenTimezone","parseTokenT","parseTokenDigits","parseTokenOneOrTwoDigits","_ordinalParse","_ordinalParseLenient","RegExp","regexpEscape","unescapeFormat","utcOffsetFromString","string","possibleTzMatches","tzChunk","parts","parseTimezoneChunker","addTimeToArrayFromToken","datePartArray","parseInt","_dayOfYear","parseTwoDigitYear","_meridiem","parseFloat","_useUTC","weekdaysParse","_w","invalidWeekday","substr","dayOfYearFromWeekInfo","w","weekYear","weekday","temp","GG","W","E","_week","gg","dayOfYearFromWeeks","dayOfYear","dateFromConfig","currentDate","yearToUse","currentDateArray","makeUTCDate","getUTCMonth","_nextDay","makeDate","setUTCMinutes","getUTCMinutes","dateFromObject","getUTCFullYear","makeDateFromStringAndFormat","ISO_8601","parseISO","parsedInput","tokens","skipped","stringLength","totalParsedInputLength","matched","p1","p2","p3","p4","makeDateFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","NaN","score","l","isoRegex","exec","isoDates","isoTimes","makeDateFromString","createFromInputFallback","arr","makeDateFromInput","aspNetJsonRegex","obj","ms","setFullYear","setUTCFullYear","parseWeekday","substituteTimeAgo","isFuture","posNegDuration","round","as","args","relativeTimeThresholds","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","end","daysToDayOfWeek","daysToAdd","getUTCDay","makeMoment","invalid","preparse","pickBy","moments","dayOfMonth","unit","makeAccessor","keepTime","daysToYears","yearsToDays","makeDurationGetter","makeGlobal","shouldDeprecate","ender","oldGlobalMoment","globalScope","VERSION","aspNetTimeSpanJsonRegex","isoDurationRegex","isoFormat","unitMillisecondFactors","Milliseconds","Seconds","Minutes","Hours","Days","Months","Years","D","Q","DDD","dayofyear","isoweekday","isoweek","weekyear","isoweekyear","ordinalizeTokens","paddedTokens","MMM","MMMM","ddd","dddd","isoWeek","YY","YYYY","YYYYY","YYYYYY","gggg","ggggg","isoWeekYear","GGGG","GGGGG","isoWeekday","A","H","S","SS","SSS","SSSS","Z","utcOffset","ZZ","z","zoneAbbr","zz","zoneName","x","X","unix","lists","pop","DDDD","source","_monthsShort","monthName","regex","_monthsParse","_longMonthsParse","_shortMonthsParse","_weekdays","_weekdaysShort","_weekdaysMin","weekdayName","_weekdaysParse","_longDateFormat","charAt","isLower","_calendar","_relativeTime","pastFuture","_ordinal","postformat","firstDayOfYear","_invalidDate","max","ret","parseIso","diffRes","isDuration","inp","version","defaultFormat","relativeTimeThreshold","threshold","limit","lang","values","_abbr","abbr","langData","flags","parseZone","toISOString","toArray","isDSTShifted","parsingFlags","invalidAt","keepLocalTime","subtract","_dateUtcOffset","inputString","asFloat","that","zoneDiff","time","fromNow","sod","startOf","_isLeapYear","isDST","getDay","endOf","inputMs","isBetween","isSame","zone","localAdjust","offset","_changeInProgress","isLocal","isUtcOffset","isUtc","hasAlignedHourOffset","_daysInMonth","isoWeeksInYear","_weeksInYear","weekInfo","newLocaleData","getTimezoneOffset","dates","isoWeeks","toJSON","isUTC","withSuffix","toIsoString","asSeconds","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","noGlobal",95,"webpackPolyfill","paths","children"],"mappings":"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","file":"profile.24a89ea91979b213affb.js","sourcesContent":["var profile =\nwebpackJsonp_name_([8],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\tvar notification = __webpack_require__(23);\n\tvar moment = __webpack_require__(30);\n\t\n\tvar profile = angular.module('profile', ['ui.router', 'ngResource', 'global403Interceptor', 'ajoslin.promise-tracker', 'progress', 'focusOn', 'ngMessages']);\n\t\n\t__webpack_require__(24);\n\t__webpack_require__(25);\n\t__webpack_require__(26);\n\t__webpack_require__(27);\n\t__webpack_require__(28);\n\t__webpack_require__(29);\n\t\n\tprofile.factory('Me', [\"$resource\", function ($resource) {\n\t  return $resource('/users/me', {}, {\n\t    get: {\n\t      method: 'GET',\n\t      transformResponse: function transformResponse(data, headers) {\n\t        data = JSON.parse(data);\n\t        data.created = new Date(data.created);\n\t        return data;\n\t      }\n\t    }\n\t  });\n\t}]);\n\t\n\tprofile.factory('QuizResults', [\"$resource\", function ($resource) {\n\t  return $resource('/quiz/results/user/' + window.currentUser.id, {}, {\n\t    query: {\n\t      method: 'GET',\n\t      isArray: true,\n\t      transformResponse: function transformResponse(data, headers) {\n\t\n\t        data = JSON.parse(data);\n\t        data.forEach(function (result) {\n\t          result.created = new Date(result.created);\n\t        });\n\t        console.log(data);\n\t        return data;\n\t      }\n\t    }\n\t  });\n\t}]);\n\t\n\tprofile.config([\"$locationProvider\", \"$stateProvider\", function ($locationProvider, $stateProvider) {\n\t  $locationProvider.html5Mode(true);\n\t\n\t  $stateProvider.state('root', {\n\t    abstract: true,\n\t    resolve: {\n\t      me: [\"Me\", function me(Me) {\n\t        return Me.get();\n\t      }]\n\t    },\n\t    templateUrl: '/profile/templates/partials/root',\n\t    controller: 'ProfileRootCtrl'\n\t  });\n\t\n\t  var states = {\n\t    'root.aboutme': {\n\t      url: '/',\n\t      title: 'Публичный профиль',\n\t      templateUrl: '/profile/templates/partials/aboutme',\n\t      controller: 'ProfileAboutMeCtrl'\n\t    },\n\t    'root.account': {\n\t      url: '/account',\n\t      title: 'Аккаунт',\n\t      templateUrl: '/profile/templates/partials/account',\n\t      controller: 'ProfileAccountCtrl'\n\t    },\n\t    'root.quiz': {\n\t      url: '/quiz',\n\t      title: 'Тесты',\n\t      templateUrl: '/profile/templates/partials/quiz',\n\t      controller: 'ProfileQuizResultsCtrl',\n\t      resolve: {\n\t        quizResults: function quizResults(QuizResults) {\n\t          return QuizResults.query();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  // enabled states depend on user, are set to global variable in index.jade\n\t  for (var key in states) {\n\t    if (~window.profileStatesEnabled.indexOf(key)) {\n\t      $stateProvider.state(key, states[key]);\n\t    }\n\t  }\n\t}]).controller('ProfileRootCtrl', [\"$scope\", \"$state\", \"$timeout\", \"$http\", \"me\", \"promiseTracker\", function ($scope, $state, $timeout, $http, me, promiseTracker) {\n\t\n\t  //window.me = me;\n\t  $scope.me = me;\n\t\n\t  $scope.loadingTracker = promiseTracker();\n\t\n\t  $scope.states = $state.get().filter(function (state) {\n\t    return !state.abstract;\n\t  }).map(function (state) {\n\t    return {\n\t      title: state.title,\n\t      name: state.name,\n\t      url: state.url\n\t    };\n\t  });\n\t}]).controller('ProfileAboutMeCtrl', [\"$scope\", \"me\", function ($scope, me) {\n\t\n\t  $scope.me = me;\n\t}]).controller('ProfileQuizResultsCtrl', [\"$scope\", \"quizResults\", function ($scope, quizResults) {\n\t\n\t  $scope.quizResults = quizResults;\n\t}]).controller('ProfileAccountCtrl', [\"$scope\", \"$http\", \"me\", \"Me\", function ($scope, $http, me, Me) {\n\t\n\t  $scope.me = me;\n\t\n\t  $scope.remove = function () {\n\t    var isSure = confirm('' + me.displayName + ' (' + me.email + ') - удалить пользователя без возможности восстановления?');\n\t\n\t    if (!isSure) return;\n\t\n\t    $http({\n\t      method: 'DELETE',\n\t      url: '/users/me',\n\t      tracker: $scope.loadingTracker,\n\t      headers: { 'Content-Type': undefined },\n\t      transformRequest: angular.identity,\n\t      data: new FormData()\n\t    }).then(function (response) {\n\t\n\t      alert('Пользователь удалён.');\n\t      window.location.href = '/';\n\t    }, function (response) {\n\t      new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t    });\n\t  };\n\t\n\t  $scope.removeProvider = function (providerName) {\n\t    var isSure = confirm('' + providerName + ' - удалить привязку?');\n\t\n\t    if (!isSure) return;\n\t\n\t    $http({\n\t      method: 'POST',\n\t      url: '/auth/disconnect/' + providerName,\n\t      tracker: this.loadingTracker\n\t    }).then(function (response) {\n\t      // refresh user\n\t      $scope.me = Me.get();\n\t    }, function (response) {\n\t      new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t    });\n\t  };\n\t}]).filter('capitalize', function () {\n\t  return function (str) {\n\t    return str[0].toUpperCase() + str.slice(1);\n\t  };\n\t}).filter('quizDate', function () {\n\t  return function (date) {\n\t    return moment(date).format('D MMMM YYYY в LT');\n\t  };\n\t}).filter('quizDuration', function () {\n\t  return function (seconds) {\n\t    return moment.duration(seconds, 'seconds').humanize();\n\t  };\n\t});\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = angular;\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('profileField', [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profileField',\n\t    scope: {\n\t      title: '@fieldTitle',\n\t      name: '@fieldName',\n\t      formatValue: '=?fieldFormatValue',\n\t      value: '=fieldValue'\n\t    },\n\t    replace: true,\n\t    transclude: true,\n\t    link: function link(scope, element, attrs, noCtrl, transclude) {\n\t\n\t      if (!scope.formatValue) {\n\t        scope.formatValue = function (value) {\n\t          return value;\n\t        };\n\t      }\n\t\n\t      scope.loadingTracker = promiseTracker();\n\t\n\t      scope.edit = function () {\n\t        if (this.editing) return;\n\t        this.editing = true;\n\t        this.editingValue = this.value;\n\t      };\n\t\n\t      scope.submit = function () {\n\t        var _this = this;\n\t\n\t        if (this.form.$invalid) return;\n\t\n\t        if (this.value == this.editingValue) {\n\t          this.editing = false;\n\t          this.editingValue = '';\n\t          return;\n\t        }\n\t\n\t        var formData = new FormData();\n\t        formData.append(this.name, this.editingValue);\n\t\n\t        $http({\n\t          method: 'PATCH',\n\t          url: '/users/me',\n\t          tracker: this.loadingTracker,\n\t          headers: { 'Content-Type': undefined },\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t\n\t          if (_this.name == 'displayName') {\n\t            new notification.Success('Изменение имени везде произойдёт после перезагрузки страницы.', 'slow');\n\t          } else if (_this.name == 'email') {\n\t            new notification.Warning('Требуется подтвердить смену email, проверьте почту.', 'slow');\n\t          } else if (_this.name == 'profileName') {\n\t            new notification.Success('Ваш профиль доступен по новому адресу, страница будет перезагружена');\n\t            setTimeout(function () {\n\t              window.location.href = '/profile/' + this.editingValue + '/account';\n\t            }, 2000);\n\t          } else {\n\t            new notification.Success('Информация обновлена.');\n\t          }\n\t\n\t          _this.editing = false;\n\t          _this.value = _this.editingValue;\n\t          _this.editingValue = '';\n\t        }, function (response) {\n\t          //console.log(response);\n\t          if (response.status == 400) {\n\t\n\t            new notification.Error(response.data.message);\n\t          } else if (response.status == 409) {\n\t            new notification.Error(response.data.message);\n\t          } else {\n\t            new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t          }\n\t        });\n\t      };\n\t\n\t      scope.cancel = function () {\n\t        var _this2 = this;\n\t\n\t        if (!this.editing) return;\n\t        // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n\t        // so we wait until the event bubbles and ends, and *then* cancel\n\t        $timeout(function () {\n\t          _this2.editing = false;\n\t          _this2.editingValue = '';\n\t        });\n\t      };\n\t\n\t      transclude(scope, function (clone, scope) {\n\t        element[0].querySelector('[control-transclude]').append(clone[0]);\n\t      });\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\tvar thumb = __webpack_require__(54).thumb;\n\t\n\tangular.module('profile').directive('profilePhoto', [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profilePhoto',\n\t    scope: {\n\t      photo: '='\n\t    },\n\t    replace: true,\n\t\n\t    link: function link(scope, element, attrs, noCtrl) {\n\t      scope.loadingTracker = promiseTracker();\n\t      var self = this;\n\t\n\t      scope.changePhoto = function () {\n\t        var fileInput = document.createElement('input');\n\t        fileInput.type = 'file';\n\t        fileInput.accept = 'image/*';\n\t\n\t        fileInput.onchange = function () {\n\t\n\t          var reader = new FileReader();\n\t          var file = fileInput.files[0];\n\t\n\t          reader.onload = function (event) {\n\t            var image = new Image();\n\t            image.onload = function () {\n\t              if (image.width != image.height || image.width < 160) {\n\t                new notification.Error('Изображение должно быть квадратом, размер 160x160 или больше');\n\t              } else {\n\t                uploadPhoto(file);\n\t              }\n\t            };\n\t            image.src = event.target.result;\n\t          };\n\t          reader.readAsDataURL(file);\n\t        };\n\t        fileInput.click();\n\t      };\n\t\n\t      function uploadPhoto(file) {\n\t\n\t        var formData = new FormData();\n\t        formData.append('photo', file);\n\t\n\t        $http({\n\t          method: 'PATCH',\n\t          url: '/users/me',\n\t          headers: { 'Content-Type': undefined },\n\t          tracker: scope.loadingTracker,\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t          scope.photo = response.data.photo;\n\t          new notification.Success('Изображение обновлено.');\n\t        }, function (response) {\n\t          if (response.status == 400) {\n\t            new notification.Error('Неверный тип файла или изображение повреждено.');\n\t          } else {\n\t            new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  };\n\t}]).filter('thumb', function () {\n\t  return thumb;\n\t});\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('profilePassword', [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profilePassword',\n\t    scope: {\n\t      hasPassword: '='\n\t    },\n\t    replace: true,\n\t    link: function link(scope, element, attrs, noCtrl, transclude) {\n\t\n\t      scope.password = '';\n\t      scope.passwordOld = '';\n\t\n\t      scope.loadingTracker = promiseTracker();\n\t\n\t      scope.edit = function () {\n\t        if (this.editing) return;\n\t        this.editing = true;\n\t\n\t        $timeout(function () {\n\t          var input = element[0].elements[scope.hasPassword ? 'passwordOld' : 'password'];\n\t          input.focus();\n\t        });\n\t      };\n\t\n\t      scope.submit = function () {\n\t        if (scope.form.$invalid) return;\n\t\n\t        var formData = new FormData();\n\t        formData.append('password', this.password);\n\t        formData.append('passwordOld', this.passwordOld);\n\t\n\t        $http({\n\t          method: 'PATCH',\n\t          url: '/users/me',\n\t          tracker: this.loadingTracker,\n\t          headers: { 'Content-Type': undefined },\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t          new notification.Success('Пароль обновлён.');\n\t          scope.editing = false;\n\t          // now have password for sure\n\t          scope.hasPassword = true;\n\t\n\t          // and clean password fields\n\t          scope.password = '';\n\t          scope.passwordOld = '';\n\t          scope.form.$setPristine();\n\t        }, function (response) {\n\t          if (response.status == 400) {\n\t            new notification.Error(response.data.message || response.data.errors.password);\n\t          } else {\n\t            new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t          }\n\t        });\n\t      };\n\t\n\t      scope.cancel = function () {\n\t        var _this = this;\n\t\n\t        if (!this.editing) return;\n\t        // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n\t        // so we wait until the event bubbles and ends, and *then* cancel\n\t        $timeout(function () {\n\t          _this.editing = false;\n\t        });\n\t      };\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('profileAuthProviders', [\"promiseTracker\", \"$http\", \"authPopup\", \"Me\", function (promiseTracker, $http, authPopup, Me) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profileAuthProviders',\n\t    replace: true,\n\t\n\t    link: function link(scope) {\n\t\n\t      scope.connect = function (providerName) {\n\t        var _arguments = arguments;\n\t\n\t        authPopup('/auth/connect/' + providerName, function () {\n\t          // refresh user\n\t          scope.me = Me.get();\n\t        }, function () {\n\t          console.error('fail', _arguments);\n\t        });\n\t      };\n\t\n\t      scope.connected = function (providerName) {\n\t        var connected = false;\n\t\n\t        if (!scope.me.providers) return false;\n\t        scope.me.providers.forEach(function (provider) {\n\t          if (provider.name == providerName) connected = true;\n\t        });\n\t\n\t        return connected;\n\t      };\n\t    }\n\t  };\n\t}]).service('authPopup', function () {\n\t\n\t  var authPopup;\n\t\n\t  return function (url, onSuccess, onFail) {\n\t\n\t    if (authPopup && !authPopup.closed) {\n\t      authPopup.close(); // close old popup if any\n\t    }\n\t    var width = 800,\n\t        height = 600;\n\t    var top = (window.outerHeight - height) / 2;\n\t    var left = (window.outerWidth - width) / 2;\n\t\n\t    window.authModal = {\n\t      onAuthSuccess: onSuccess,\n\t      onAuthFailure: onFail\n\t    };\n\t\n\t    authPopup = window.open(url, 'authModal', 'width=' + width + ',height=' + height + ',scrollbars=0,top=' + top + ',left=' + left);\n\t  };\n\t});\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('dateValidator', function () {\n\t  return {\n\t    require: 'ngModel',\n\t    link: function link(scope, element, attrs, ngModel) {\n\t\n\t      ngModel.$validators.date = function (modelValue, viewValue) {\n\t        var value = modelValue || viewValue;\n\t        if (!value) return true;\n\t        var split = value.split('.');\n\t        if (split.length != 3) return false;\n\t        var date = new Date(split[2], split[1] - 1, split[0]);\n\t\n\t        if (split[2].length != 4) return false;\n\t\n\t        return date.getFullYear() == split[2] && date.getMonth() == split[1] - 1 && date.getDate() == split[0];\n\t      };\n\t    }\n\t  };\n\t});\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\tvar moment = __webpack_require__(30);\n\t\n\tangular.module('profile').directive('dateRangeValidator', function () {\n\t  return {\n\t    require: 'ngModel',\n\t    link: function link(scope, element, attrs, ngModel) {\n\t\n\t      var range = attrs.dateRangeValidator.split('-');\n\t      var from = range[0] ? moment(range[0], 'DD.MM.YYYY').toDate() : new Date();\n\t      var to = range[1] ? moment(range[1], 'DD.MM.YYYY').toDate() : new Date();\n\t\n\t      ngModel.$validators.dateRange = function (modelValue, viewValue) {\n\t        var value = modelValue || viewValue;\n\t        if (!value) return true;\n\t\n\t        var split = value.split('.');\n\t        if (split.length != 3) return false;\n\t        var date = new Date(split[2], split[1] - 1, split[0]);\n\t\n\t        if (split[2].length != 4) return false;\n\t\n\t        return date >= from && date <= to;\n\t      };\n\t    }\n\t  };\n\t});\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(60);\n\t\n\tmodule.exports = __webpack_require__(61);\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.thumb = function (url, width, height) {\n\t  // sometimes this may be called without url\n\t  if (!url) return url;\n\t\n\t  var pixelRatio = window.devicePixelRatio;\n\t\n\t  // return pixelRatio times larger image for retina\n\t  width *= pixelRatio;\n\t  height *= pixelRatio;\n\t\n\t  var modifier = width <= 160 && height <= 160 ? 't' : width <= 320 && height <= 320 ? 'm' : width <= 640 && height <= 640 ? 'i' : width <= 1024 && height <= 1024 ? 'h' : '';\n\t\n\t  return url.slice(0, url.lastIndexOf('.')) + modifier + url.slice(url.lastIndexOf('.'));\n\t};\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration\n\t// locale : russian (ru)\n\t// author : Viktorminator : https://github.com/Viktorminator\n\t// Author : Menelion Elensúle : https://github.com/Oire\n\t\n\t'use strict';\n\t\n\t(function (factory) {\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(61)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory(require('../moment')); // Node\n\t    } else {\n\t        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n\t    }\n\t})(function (moment) {\n\t    function plural(word, num) {\n\t        var forms = word.split('_');\n\t        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n\t    }\n\t\n\t    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\t        var format = {\n\t            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n\t            hh: 'час_часа_часов',\n\t            dd: 'день_дня_дней',\n\t            MM: 'месяц_месяца_месяцев',\n\t            yy: 'год_года_лет'\n\t        };\n\t        if (key === 'm') {\n\t            return withoutSuffix ? 'минута' : 'минуту';\n\t        } else {\n\t            return number + ' ' + plural(format[key], +number);\n\t        }\n\t    }\n\t\n\t    function monthsCaseReplace(m, format) {\n\t        var months = {\n\t            nominative: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n\t            accusative: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n\t        },\n\t            nounCase = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/.test(format) ? 'accusative' : 'nominative';\n\t\n\t        return months[nounCase][m.month()];\n\t    }\n\t\n\t    function monthsShortCaseReplace(m, format) {\n\t        var monthsShort = {\n\t            nominative: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n\t            accusative: 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n\t        },\n\t            nounCase = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/.test(format) ? 'accusative' : 'nominative';\n\t\n\t        return monthsShort[nounCase][m.month()];\n\t    }\n\t\n\t    function weekdaysCaseReplace(m, format) {\n\t        var weekdays = {\n\t            nominative: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n\t            accusative: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n\t        },\n\t            nounCase = /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/.test(format) ? 'accusative' : 'nominative';\n\t\n\t        return weekdays[nounCase][m.day()];\n\t    }\n\t\n\t    return moment.defineLocale('ru', {\n\t        months: monthsCaseReplace,\n\t        monthsShort: monthsShortCaseReplace,\n\t        weekdays: weekdaysCaseReplace,\n\t        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        monthsParse: [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'LT:ss',\n\t            L: 'DD.MM.YYYY',\n\t            LL: 'D MMMM YYYY г.',\n\t            LLL: 'D MMMM YYYY г., LT',\n\t            LLLL: 'dddd, D MMMM YYYY г., LT'\n\t        },\n\t        calendar: {\n\t            sameDay: '[Сегодня в] LT',\n\t            nextDay: '[Завтра в] LT',\n\t            lastDay: '[Вчера в] LT',\n\t            nextWeek: function nextWeek() {\n\t                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n\t            },\n\t            lastWeek: function lastWeek(now) {\n\t                if (now.week() !== this.week()) {\n\t                    switch (this.day()) {\n\t                        case 0:\n\t                            return '[В прошлое] dddd [в] LT';\n\t                        case 1:\n\t                        case 2:\n\t                        case 4:\n\t                            return '[В прошлый] dddd [в] LT';\n\t                        case 3:\n\t                        case 5:\n\t                        case 6:\n\t                            return '[В прошлую] dddd [в] LT';\n\t                    }\n\t                } else {\n\t                    if (this.day() === 2) {\n\t                        return '[Во] dddd [в] LT';\n\t                    } else {\n\t                        return '[В] dddd [в] LT';\n\t                    }\n\t                }\n\t            },\n\t            sameElse: 'L'\n\t        },\n\t        relativeTime: {\n\t            future: 'через %s',\n\t            past: '%s назад',\n\t            s: 'несколько секунд',\n\t            m: relativeTimeWithPlural,\n\t            mm: relativeTimeWithPlural,\n\t            h: 'час',\n\t            hh: relativeTimeWithPlural,\n\t            d: 'день',\n\t            dd: relativeTimeWithPlural,\n\t            M: 'месяц',\n\t            MM: relativeTimeWithPlural,\n\t            y: 'год',\n\t            yy: relativeTimeWithPlural\n\t        },\n\t\n\t        meridiemParse: /ночи|утра|дня|вечера/i,\n\t        isPM: function isPM(input) {\n\t            return /^(дня|вечера)$/.test(input);\n\t        },\n\t\n\t        meridiem: function meridiem(hour, minute, isLower) {\n\t            if (hour < 4) {\n\t                return 'ночи';\n\t            } else if (hour < 12) {\n\t                return 'утра';\n\t            } else if (hour < 17) {\n\t                return 'дня';\n\t            } else {\n\t                return 'вечера';\n\t            }\n\t        },\n\t\n\t        ordinalParse: /\\d{1,2}-(й|го|я)/,\n\t        ordinal: function ordinal(number, period) {\n\t            switch (period) {\n\t                case 'M':\n\t                case 'd':\n\t                case 'DDD':\n\t                    return number + '-й';\n\t                case 'D':\n\t                    return number + '-го';\n\t                case 'w':\n\t                case 'W':\n\t                    return number + '-я';\n\t                default:\n\t                    return number;\n\t            }\n\t        },\n\t\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 7 // The week that contains Jan 1st is the first week of the year.\n\t        }\n\t    });\n\t});\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {//! moment.js\n\t//! version : 2.9.0\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t'use strict';\n\t\n\t(function (undefined) {\n\t    /************************************\n\t        Constants\n\t    ************************************/\n\t\n\t    var moment,\n\t        VERSION = '2.9.0',\n\t\n\t    // the global-scope this is NOT the global object in Node.js\n\t    globalScope = typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window) ? global : this,\n\t        oldGlobalMoment,\n\t        round = Math.round,\n\t        hasOwnProperty = Object.prototype.hasOwnProperty,\n\t        i,\n\t        YEAR = 0,\n\t        MONTH = 1,\n\t        DATE = 2,\n\t        HOUR = 3,\n\t        MINUTE = 4,\n\t        SECOND = 5,\n\t        MILLISECOND = 6,\n\t\n\t    // internal storage for locale config files\n\t    locales = {},\n\t\n\t    // extra moment internal properties (plugins register props here)\n\t    momentProperties = [],\n\t\n\t    // check for nodeJS\n\t    hasModule = typeof module !== 'undefined' && module && module.exports,\n\t\n\t    // ASP.NET json date format regex\n\t    aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n\t        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\t\n\t    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t    isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\t\n\t    // format tokens\n\t    formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n\t        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\t\n\t    // parsing token regexes\n\t    parseTokenOneOrTwoDigits = /\\d\\d?/,\n\t        // 0 - 99\n\t    parseTokenOneToThreeDigits = /\\d{1,3}/,\n\t        // 0 - 999\n\t    parseTokenOneToFourDigits = /\\d{1,4}/,\n\t        // 0 - 9999\n\t    parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/,\n\t        // -999,999 - 999,999\n\t    parseTokenDigits = /\\d+/,\n\t        // nonzero number of digits\n\t    parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,\n\t        // any word (or two) characters or numbers including two/three word month in arabic.\n\t    parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi,\n\t        // +00:00 -00:00 +0000 -0000 or Z\n\t    parseTokenT = /T/i,\n\t        // T (ISO separator)\n\t    parseTokenOffsetMs = /[\\+\\-]?\\d+/,\n\t        // 1234567890123\n\t    parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/,\n\t        // 123456789 123456789.123\n\t\n\t    //strict parsing regexes\n\t    parseTokenOneDigit = /\\d/,\n\t        // 0 - 9\n\t    parseTokenTwoDigits = /\\d\\d/,\n\t        // 00 - 99\n\t    parseTokenThreeDigits = /\\d{3}/,\n\t        // 000 - 999\n\t    parseTokenFourDigits = /\\d{4}/,\n\t        // 0000 - 9999\n\t    parseTokenSixDigits = /[+-]?\\d{6}/,\n\t        // -999,999 - 999,999\n\t    parseTokenSignedNumber = /[+-]?\\d+/,\n\t        // -inf - inf\n\t\n\t    // iso 8601 regex\n\t    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\t    isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\t        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\t        isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/], ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/], ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d{2}/], ['YYYY-DDD', /\\d{4}-\\d{3}/]],\n\t\n\t    // iso time formats and regexes\n\t    isoTimes = [['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /(T| )\\d\\d:\\d\\d/], ['HH', /(T| )\\d\\d/]],\n\t\n\t    // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']\n\t    parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\t\n\t    // getter and setter names\n\t    proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n\t        unitMillisecondFactors = {\n\t        Milliseconds: 1,\n\t        Seconds: 1000,\n\t        Minutes: 60000,\n\t        Hours: 3600000,\n\t        Days: 86400000,\n\t        Months: 2592000000,\n\t        Years: 31536000000\n\t    },\n\t        unitAliases = {\n\t        ms: 'millisecond',\n\t        s: 'second',\n\t        m: 'minute',\n\t        h: 'hour',\n\t        d: 'day',\n\t        D: 'date',\n\t        w: 'week',\n\t        W: 'isoWeek',\n\t        M: 'month',\n\t        Q: 'quarter',\n\t        y: 'year',\n\t        DDD: 'dayOfYear',\n\t        e: 'weekday',\n\t        E: 'isoWeekday',\n\t        gg: 'weekYear',\n\t        GG: 'isoWeekYear'\n\t    },\n\t        camelFunctions = {\n\t        dayofyear: 'dayOfYear',\n\t        isoweekday: 'isoWeekday',\n\t        isoweek: 'isoWeek',\n\t        weekyear: 'weekYear',\n\t        isoweekyear: 'isoWeekYear'\n\t    },\n\t\n\t    // format function strings\n\t    formatFunctions = {},\n\t\n\t    // default relative time thresholds\n\t    relativeTimeThresholds = {\n\t        s: 45, // seconds to minute\n\t        m: 45, // minutes to hour\n\t        h: 22, // hours to day\n\t        d: 26, // days to month\n\t        M: 11 // months to year\n\t    },\n\t\n\t    // tokens to ordinalize and pad\n\t    ordinalizeTokens = 'DDD w W M D d'.split(' '),\n\t        paddedTokens = 'M D H h m s w W'.split(' '),\n\t        formatTokenFunctions = {\n\t        M: function M() {\n\t            return this.month() + 1;\n\t        },\n\t        MMM: function MMM(format) {\n\t            return this.localeData().monthsShort(this, format);\n\t        },\n\t        MMMM: function MMMM(format) {\n\t            return this.localeData().months(this, format);\n\t        },\n\t        D: function D() {\n\t            return this.date();\n\t        },\n\t        DDD: function DDD() {\n\t            return this.dayOfYear();\n\t        },\n\t        d: function d() {\n\t            return this.day();\n\t        },\n\t        dd: function dd(format) {\n\t            return this.localeData().weekdaysMin(this, format);\n\t        },\n\t        ddd: function ddd(format) {\n\t            return this.localeData().weekdaysShort(this, format);\n\t        },\n\t        dddd: function dddd(format) {\n\t            return this.localeData().weekdays(this, format);\n\t        },\n\t        w: function w() {\n\t            return this.week();\n\t        },\n\t        W: function W() {\n\t            return this.isoWeek();\n\t        },\n\t        YY: function YY() {\n\t            return leftZeroFill(this.year() % 100, 2);\n\t        },\n\t        YYYY: function YYYY() {\n\t            return leftZeroFill(this.year(), 4);\n\t        },\n\t        YYYYY: function YYYYY() {\n\t            return leftZeroFill(this.year(), 5);\n\t        },\n\t        YYYYYY: function YYYYYY() {\n\t            var y = this.year(),\n\t                sign = y >= 0 ? '+' : '-';\n\t            return sign + leftZeroFill(Math.abs(y), 6);\n\t        },\n\t        gg: function gg() {\n\t            return leftZeroFill(this.weekYear() % 100, 2);\n\t        },\n\t        gggg: function gggg() {\n\t            return leftZeroFill(this.weekYear(), 4);\n\t        },\n\t        ggggg: function ggggg() {\n\t            return leftZeroFill(this.weekYear(), 5);\n\t        },\n\t        GG: function GG() {\n\t            return leftZeroFill(this.isoWeekYear() % 100, 2);\n\t        },\n\t        GGGG: function GGGG() {\n\t            return leftZeroFill(this.isoWeekYear(), 4);\n\t        },\n\t        GGGGG: function GGGGG() {\n\t            return leftZeroFill(this.isoWeekYear(), 5);\n\t        },\n\t        e: function e() {\n\t            return this.weekday();\n\t        },\n\t        E: function E() {\n\t            return this.isoWeekday();\n\t        },\n\t        a: function a() {\n\t            return this.localeData().meridiem(this.hours(), this.minutes(), true);\n\t        },\n\t        A: function A() {\n\t            return this.localeData().meridiem(this.hours(), this.minutes(), false);\n\t        },\n\t        H: function H() {\n\t            return this.hours();\n\t        },\n\t        h: function h() {\n\t            return this.hours() % 12 || 12;\n\t        },\n\t        m: function m() {\n\t            return this.minutes();\n\t        },\n\t        s: function s() {\n\t            return this.seconds();\n\t        },\n\t        S: function S() {\n\t            return toInt(this.milliseconds() / 100);\n\t        },\n\t        SS: function SS() {\n\t            return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n\t        },\n\t        SSS: function SSS() {\n\t            return leftZeroFill(this.milliseconds(), 3);\n\t        },\n\t        SSSS: function SSSS() {\n\t            return leftZeroFill(this.milliseconds(), 3);\n\t        },\n\t        Z: function Z() {\n\t            var a = this.utcOffset(),\n\t                b = '+';\n\t            if (a < 0) {\n\t                a = -a;\n\t                b = '-';\n\t            }\n\t            return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n\t        },\n\t        ZZ: function ZZ() {\n\t            var a = this.utcOffset(),\n\t                b = '+';\n\t            if (a < 0) {\n\t                a = -a;\n\t                b = '-';\n\t            }\n\t            return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n\t        },\n\t        z: function z() {\n\t            return this.zoneAbbr();\n\t        },\n\t        zz: function zz() {\n\t            return this.zoneName();\n\t        },\n\t        x: function x() {\n\t            return this.valueOf();\n\t        },\n\t        X: function X() {\n\t            return this.unix();\n\t        },\n\t        Q: function Q() {\n\t            return this.quarter();\n\t        }\n\t    },\n\t        deprecations = {},\n\t        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],\n\t        updateInProgress = false;\n\t\n\t    // Pick the first defined of two or three arguments. dfl comes from\n\t    // default.\n\t    function dfl(a, b, c) {\n\t        switch (arguments.length) {\n\t            case 2:\n\t                return a != null ? a : b;\n\t            case 3:\n\t                return a != null ? a : b != null ? b : c;\n\t            default:\n\t                throw new Error('Implement me');\n\t        }\n\t    }\n\t\n\t    function hasOwnProp(a, b) {\n\t        return hasOwnProperty.call(a, b);\n\t    }\n\t\n\t    function defaultParsingFlags() {\n\t        // We need to deep clone this object, and es5 standard is not very\n\t        // helpful.\n\t        return {\n\t            empty: false,\n\t            unusedTokens: [],\n\t            unusedInput: [],\n\t            overflow: -2,\n\t            charsLeftOver: 0,\n\t            nullInput: false,\n\t            invalidMonth: null,\n\t            invalidFormat: false,\n\t            userInvalidated: false,\n\t            iso: false\n\t        };\n\t    }\n\t\n\t    function printMsg(msg) {\n\t        if (moment.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n\t            console.warn('Deprecation warning: ' + msg);\n\t        }\n\t    }\n\t\n\t    function deprecate(msg, fn) {\n\t        var firstTime = true;\n\t        return extend(function () {\n\t            if (firstTime) {\n\t                printMsg(msg);\n\t                firstTime = false;\n\t            }\n\t            return fn.apply(this, arguments);\n\t        }, fn);\n\t    }\n\t\n\t    function deprecateSimple(name, msg) {\n\t        if (!deprecations[name]) {\n\t            printMsg(msg);\n\t            deprecations[name] = true;\n\t        }\n\t    }\n\t\n\t    function padToken(func, count) {\n\t        return function (a) {\n\t            return leftZeroFill(func.call(this, a), count);\n\t        };\n\t    }\n\t    function ordinalizeToken(func, period) {\n\t        return function (a) {\n\t            return this.localeData().ordinal(func.call(this, a), period);\n\t        };\n\t    }\n\t\n\t    function monthDiff(a, b) {\n\t        // difference in months\n\t        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n\t\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t            anchor2,\n\t            adjust;\n\t\n\t        if (b - anchor < 0) {\n\t            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor - anchor2);\n\t        } else {\n\t            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor2 - anchor);\n\t        }\n\t\n\t        return -(wholeMonthDiff + adjust);\n\t    }\n\t\n\t    while (ordinalizeTokens.length) {\n\t        i = ordinalizeTokens.pop();\n\t        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n\t    }\n\t    while (paddedTokens.length) {\n\t        i = paddedTokens.pop();\n\t        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n\t    }\n\t    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\t\n\t    function meridiemFixWrap(locale, hour, meridiem) {\n\t        var isPm;\n\t\n\t        if (meridiem == null) {\n\t            // nothing to do\n\t            return hour;\n\t        }\n\t        if (locale.meridiemHour != null) {\n\t            return locale.meridiemHour(hour, meridiem);\n\t        } else if (locale.isPM != null) {\n\t            // Fallback\n\t            isPm = locale.isPM(meridiem);\n\t            if (isPm && hour < 12) {\n\t                hour += 12;\n\t            }\n\t            if (!isPm && hour === 12) {\n\t                hour = 0;\n\t            }\n\t            return hour;\n\t        } else {\n\t            // thie is not supposed to happen\n\t            return hour;\n\t        }\n\t    }\n\t\n\t    /************************************\n\t        Constructors\n\t    ************************************/\n\t\n\t    function Locale() {}\n\t\n\t    // Moment prototype object\n\t    function Moment(config, skipOverflow) {\n\t        if (skipOverflow !== false) {\n\t            checkOverflow(config);\n\t        }\n\t        copyConfig(this, config);\n\t        this._d = new Date(+config._d);\n\t        // Prevent infinite loop in case updateOffset creates new moment\n\t        // objects.\n\t        if (updateInProgress === false) {\n\t            updateInProgress = true;\n\t            moment.updateOffset(this);\n\t            updateInProgress = false;\n\t        }\n\t    }\n\t\n\t    // Duration Constructor\n\t    function Duration(duration) {\n\t        var normalizedInput = normalizeObjectUnits(duration),\n\t            years = normalizedInput.year || 0,\n\t            quarters = normalizedInput.quarter || 0,\n\t            months = normalizedInput.month || 0,\n\t            weeks = normalizedInput.week || 0,\n\t            days = normalizedInput.day || 0,\n\t            hours = normalizedInput.hour || 0,\n\t            minutes = normalizedInput.minute || 0,\n\t            seconds = normalizedInput.second || 0,\n\t            milliseconds = normalizedInput.millisecond || 0;\n\t\n\t        // representation for dateAddRemove\n\t        this._milliseconds = +milliseconds + seconds * 1000 + // 1000\n\t        minutes * 60000 + // 1000 * 60\n\t        hours * 3600000; // 1000 * 60 * 60\n\t        // Because of dateAddRemove treats 24 hours as different from a\n\t        // day when working around DST, we need to store them separately\n\t        this._days = +days + weeks * 7;\n\t        // It is impossible translate months into days without knowing\n\t        // which months you are are talking about, so we have to store\n\t        // it separately.\n\t        this._months = +months + quarters * 3 + years * 12;\n\t\n\t        this._data = {};\n\t\n\t        this._locale = moment.localeData();\n\t\n\t        this._bubble();\n\t    }\n\t\n\t    /************************************\n\t        Helpers\n\t    ************************************/\n\t\n\t    function extend(a, b) {\n\t        for (var i in b) {\n\t            if (hasOwnProp(b, i)) {\n\t                a[i] = b[i];\n\t            }\n\t        }\n\t\n\t        if (hasOwnProp(b, 'toString')) {\n\t            a.toString = b.toString;\n\t        }\n\t\n\t        if (hasOwnProp(b, 'valueOf')) {\n\t            a.valueOf = b.valueOf;\n\t        }\n\t\n\t        return a;\n\t    }\n\t\n\t    function copyConfig(to, from) {\n\t        var i, prop, val;\n\t\n\t        if (typeof from._isAMomentObject !== 'undefined') {\n\t            to._isAMomentObject = from._isAMomentObject;\n\t        }\n\t        if (typeof from._i !== 'undefined') {\n\t            to._i = from._i;\n\t        }\n\t        if (typeof from._f !== 'undefined') {\n\t            to._f = from._f;\n\t        }\n\t        if (typeof from._l !== 'undefined') {\n\t            to._l = from._l;\n\t        }\n\t        if (typeof from._strict !== 'undefined') {\n\t            to._strict = from._strict;\n\t        }\n\t        if (typeof from._tzm !== 'undefined') {\n\t            to._tzm = from._tzm;\n\t        }\n\t        if (typeof from._isUTC !== 'undefined') {\n\t            to._isUTC = from._isUTC;\n\t        }\n\t        if (typeof from._offset !== 'undefined') {\n\t            to._offset = from._offset;\n\t        }\n\t        if (typeof from._pf !== 'undefined') {\n\t            to._pf = from._pf;\n\t        }\n\t        if (typeof from._locale !== 'undefined') {\n\t            to._locale = from._locale;\n\t        }\n\t\n\t        if (momentProperties.length > 0) {\n\t            for (i in momentProperties) {\n\t                prop = momentProperties[i];\n\t                val = from[prop];\n\t                if (typeof val !== 'undefined') {\n\t                    to[prop] = val;\n\t                }\n\t            }\n\t        }\n\t\n\t        return to;\n\t    }\n\t\n\t    function absRound(number) {\n\t        if (number < 0) {\n\t            return Math.ceil(number);\n\t        } else {\n\t            return Math.floor(number);\n\t        }\n\t    }\n\t\n\t    // left zero fill a number\n\t    // see http://jsperf.com/left-zero-filling for performance comparison\n\t    function leftZeroFill(number, targetLength, forceSign) {\n\t        var output = '' + Math.abs(number),\n\t            sign = number >= 0;\n\t\n\t        while (output.length < targetLength) {\n\t            output = '0' + output;\n\t        }\n\t        return (sign ? forceSign ? '+' : '' : '-') + output;\n\t    }\n\t\n\t    function positiveMomentsDifference(base, other) {\n\t        var res = { milliseconds: 0, months: 0 };\n\t\n\t        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\t        if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t            --res.months;\n\t        }\n\t\n\t        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\t\n\t        return res;\n\t    }\n\t\n\t    function momentsDifference(base, other) {\n\t        var res;\n\t        other = makeAs(other, base);\n\t        if (base.isBefore(other)) {\n\t            res = positiveMomentsDifference(base, other);\n\t        } else {\n\t            res = positiveMomentsDifference(other, base);\n\t            res.milliseconds = -res.milliseconds;\n\t            res.months = -res.months;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    // TODO: remove 'name' arg after deprecation is removed\n\t    function createAdder(direction, name) {\n\t        return function (val, period) {\n\t            var dur, tmp;\n\t            //invert the arguments, but complain about it\n\t            if (period !== null && !isNaN(+period)) {\n\t                deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n\t                tmp = val;val = period;period = tmp;\n\t            }\n\t\n\t            val = typeof val === 'string' ? +val : val;\n\t            dur = moment.duration(val, period);\n\t            addOrSubtractDurationFromMoment(this, dur, direction);\n\t            return this;\n\t        };\n\t    }\n\t\n\t    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n\t        var milliseconds = duration._milliseconds,\n\t            days = duration._days,\n\t            months = duration._months;\n\t        updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t        if (milliseconds) {\n\t            mom._d.setTime(+mom._d + milliseconds * isAdding);\n\t        }\n\t        if (days) {\n\t            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n\t        }\n\t        if (months) {\n\t            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n\t        }\n\t        if (updateOffset) {\n\t            moment.updateOffset(mom, days || months);\n\t        }\n\t    }\n\t\n\t    // check if is an array\n\t    function isArray(input) {\n\t        return Object.prototype.toString.call(input) === '[object Array]';\n\t    }\n\t\n\t    function isDate(input) {\n\t        return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\n\t    }\n\t\n\t    // compare two arrays, return the number of differences\n\t    function compareArrays(array1, array2, dontConvert) {\n\t        var len = Math.min(array1.length, array2.length),\n\t            lengthDiff = Math.abs(array1.length - array2.length),\n\t            diffs = 0,\n\t            i;\n\t        for (i = 0; i < len; i++) {\n\t            if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n\t                diffs++;\n\t            }\n\t        }\n\t        return diffs + lengthDiff;\n\t    }\n\t\n\t    function normalizeUnits(units) {\n\t        if (units) {\n\t            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n\t            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n\t        }\n\t        return units;\n\t    }\n\t\n\t    function normalizeObjectUnits(inputObject) {\n\t        var normalizedInput = {},\n\t            normalizedProp,\n\t            prop;\n\t\n\t        for (prop in inputObject) {\n\t            if (hasOwnProp(inputObject, prop)) {\n\t                normalizedProp = normalizeUnits(prop);\n\t                if (normalizedProp) {\n\t                    normalizedInput[normalizedProp] = inputObject[prop];\n\t                }\n\t            }\n\t        }\n\t\n\t        return normalizedInput;\n\t    }\n\t\n\t    function makeList(field) {\n\t        var count, setter;\n\t\n\t        if (field.indexOf('week') === 0) {\n\t            count = 7;\n\t            setter = 'day';\n\t        } else if (field.indexOf('month') === 0) {\n\t            count = 12;\n\t            setter = 'month';\n\t        } else {\n\t            return;\n\t        }\n\t\n\t        moment[field] = function (format, index) {\n\t            var i,\n\t                getter,\n\t                method = moment._locale[field],\n\t                results = [];\n\t\n\t            if (typeof format === 'number') {\n\t                index = format;\n\t                format = undefined;\n\t            }\n\t\n\t            getter = function (i) {\n\t                var m = moment().utc().set(setter, i);\n\t                return method.call(moment._locale, m, format || '');\n\t            };\n\t\n\t            if (index != null) {\n\t                return getter(index);\n\t            } else {\n\t                for (i = 0; i < count; i++) {\n\t                    results.push(getter(i));\n\t                }\n\t                return results;\n\t            }\n\t        };\n\t    }\n\t\n\t    function toInt(argumentForCoercion) {\n\t        var coercedNumber = +argumentForCoercion,\n\t            value = 0;\n\t\n\t        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t            if (coercedNumber >= 0) {\n\t                value = Math.floor(coercedNumber);\n\t            } else {\n\t                value = Math.ceil(coercedNumber);\n\t            }\n\t        }\n\t\n\t        return value;\n\t    }\n\t\n\t    function daysInMonth(year, month) {\n\t        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t    }\n\t\n\t    function weeksInYear(year, dow, doy) {\n\t        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n\t    }\n\t\n\t    function daysInYear(year) {\n\t        return isLeapYear(year) ? 366 : 365;\n\t    }\n\t\n\t    function isLeapYear(year) {\n\t        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n\t    }\n\t\n\t    function checkOverflow(m) {\n\t        var overflow;\n\t        if (m._a && m._pf.overflow === -2) {\n\t            overflow = m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH : m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE : m._a[HOUR] < 0 || m._a[HOUR] > 24 || m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 || m._a[SECOND] !== 0 || m._a[MILLISECOND] !== 0) ? HOUR : m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE : m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND : m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\t\n\t            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t                overflow = DATE;\n\t            }\n\t\n\t            m._pf.overflow = overflow;\n\t        }\n\t    }\n\t\n\t    function isValid(m) {\n\t        if (m._isValid == null) {\n\t            m._isValid = !isNaN(m._d.getTime()) && m._pf.overflow < 0 && !m._pf.empty && !m._pf.invalidMonth && !m._pf.nullInput && !m._pf.invalidFormat && !m._pf.userInvalidated;\n\t\n\t            if (m._strict) {\n\t                m._isValid = m._isValid && m._pf.charsLeftOver === 0 && m._pf.unusedTokens.length === 0 && m._pf.bigHour === undefined;\n\t            }\n\t        }\n\t        return m._isValid;\n\t    }\n\t\n\t    function normalizeLocale(key) {\n\t        return key ? key.toLowerCase().replace('_', '-') : key;\n\t    }\n\t\n\t    // pick the locale from the array\n\t    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\t    function chooseLocale(names) {\n\t        var i = 0,\n\t            j,\n\t            next,\n\t            locale,\n\t            split;\n\t\n\t        while (i < names.length) {\n\t            split = normalizeLocale(names[i]).split('-');\n\t            j = split.length;\n\t            next = normalizeLocale(names[i + 1]);\n\t            next = next ? next.split('-') : null;\n\t            while (j > 0) {\n\t                locale = loadLocale(split.slice(0, j).join('-'));\n\t                if (locale) {\n\t                    return locale;\n\t                }\n\t                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                    //the next array item is better than a shallower substring of this one\n\t                    break;\n\t                }\n\t                j--;\n\t            }\n\t            i++;\n\t        }\n\t        return null;\n\t    }\n\t\n\t    function loadLocale(name) {\n\t        var oldLocale = null;\n\t        if (!locales[name] && hasModule) {\n\t            try {\n\t                oldLocale = moment.locale();\n\t                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\t                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n\t                moment.locale(oldLocale);\n\t            } catch (e) {}\n\t        }\n\t        return locales[name];\n\t    }\n\t\n\t    // Return a moment from input, that is local/utc/utcOffset equivalent to\n\t    // model.\n\t    function makeAs(input, model) {\n\t        var res, diff;\n\t        if (model._isUTC) {\n\t            res = model.clone();\n\t            diff = (moment.isMoment(input) || isDate(input) ? +input : +moment(input)) - +res;\n\t            // Use low-level api, because this fn is low-level api.\n\t            res._d.setTime(+res._d + diff);\n\t            moment.updateOffset(res, false);\n\t            return res;\n\t        } else {\n\t            return moment(input).local();\n\t        }\n\t    }\n\t\n\t    /************************************\n\t        Locale\n\t    ************************************/\n\t\n\t    extend(Locale.prototype, {\n\t\n\t        set: function set(config) {\n\t            var prop, i;\n\t            for (i in config) {\n\t                prop = config[i];\n\t                if (typeof prop === 'function') {\n\t                    this[i] = prop;\n\t                } else {\n\t                    this['_' + i] = prop;\n\t                }\n\t            }\n\t            // Lenient ordinal parsing accepts just a number in addition to\n\t            // number + (possibly) stuff coming from _ordinalParseLenient.\n\t            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n\t        },\n\t\n\t        _months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n\t        months: function months(m) {\n\t            return this._months[m.month()];\n\t        },\n\t\n\t        _monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n\t        monthsShort: function monthsShort(m) {\n\t            return this._monthsShort[m.month()];\n\t        },\n\t\n\t        monthsParse: function monthsParse(monthName, format, strict) {\n\t            var i, mom, regex;\n\t\n\t            if (!this._monthsParse) {\n\t                this._monthsParse = [];\n\t                this._longMonthsParse = [];\n\t                this._shortMonthsParse = [];\n\t            }\n\t\n\t            for (i = 0; i < 12; i++) {\n\t                // make the regex if we don't have it already\n\t                mom = moment.utc([2000, i]);\n\t                if (strict && !this._longMonthsParse[i]) {\n\t                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t                }\n\t                if (!strict && !this._monthsParse[i]) {\n\t                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t                }\n\t                // test the regex\n\t                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t                    return i;\n\t                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t                    return i;\n\t                } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t                    return i;\n\t                }\n\t            }\n\t        },\n\t\n\t        _weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n\t        weekdays: function weekdays(m) {\n\t            return this._weekdays[m.day()];\n\t        },\n\t\n\t        _weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n\t        weekdaysShort: function weekdaysShort(m) {\n\t            return this._weekdaysShort[m.day()];\n\t        },\n\t\n\t        _weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n\t        weekdaysMin: function weekdaysMin(m) {\n\t            return this._weekdaysMin[m.day()];\n\t        },\n\t\n\t        weekdaysParse: function weekdaysParse(weekdayName) {\n\t            var i, mom, regex;\n\t\n\t            if (!this._weekdaysParse) {\n\t                this._weekdaysParse = [];\n\t            }\n\t\n\t            for (i = 0; i < 7; i++) {\n\t                // make the regex if we don't have it already\n\t                if (!this._weekdaysParse[i]) {\n\t                    mom = moment([2000, 1]).day(i);\n\t                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t                }\n\t                // test the regex\n\t                if (this._weekdaysParse[i].test(weekdayName)) {\n\t                    return i;\n\t                }\n\t            }\n\t        },\n\t\n\t        _longDateFormat: {\n\t            LTS: 'h:mm:ss A',\n\t            LT: 'h:mm A',\n\t            L: 'MM/DD/YYYY',\n\t            LL: 'MMMM D, YYYY',\n\t            LLL: 'MMMM D, YYYY LT',\n\t            LLLL: 'dddd, MMMM D, YYYY LT'\n\t        },\n\t        longDateFormat: function longDateFormat(key) {\n\t            var output = this._longDateFormat[key];\n\t            if (!output && this._longDateFormat[key.toUpperCase()]) {\n\t                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t                    return val.slice(1);\n\t                });\n\t                this._longDateFormat[key] = output;\n\t            }\n\t            return output;\n\t        },\n\t\n\t        isPM: function isPM(input) {\n\t            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t            // Using charAt should be more compatible.\n\t            return (input + '').toLowerCase().charAt(0) === 'p';\n\t        },\n\t\n\t        _meridiemParse: /[ap]\\.?m?\\.?/i,\n\t        meridiem: function meridiem(hours, minutes, isLower) {\n\t            if (hours > 11) {\n\t                return isLower ? 'pm' : 'PM';\n\t            } else {\n\t                return isLower ? 'am' : 'AM';\n\t            }\n\t        },\n\t\n\t        _calendar: {\n\t            sameDay: '[Today at] LT',\n\t            nextDay: '[Tomorrow at] LT',\n\t            nextWeek: 'dddd [at] LT',\n\t            lastDay: '[Yesterday at] LT',\n\t            lastWeek: '[Last] dddd [at] LT',\n\t            sameElse: 'L'\n\t        },\n\t        calendar: function calendar(key, mom, now) {\n\t            var output = this._calendar[key];\n\t            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n\t        },\n\t\n\t        _relativeTime: {\n\t            future: 'in %s',\n\t            past: '%s ago',\n\t            s: 'a few seconds',\n\t            m: 'a minute',\n\t            mm: '%d minutes',\n\t            h: 'an hour',\n\t            hh: '%d hours',\n\t            d: 'a day',\n\t            dd: '%d days',\n\t            M: 'a month',\n\t            MM: '%d months',\n\t            y: 'a year',\n\t            yy: '%d years'\n\t        },\n\t\n\t        relativeTime: function relativeTime(number, withoutSuffix, string, isFuture) {\n\t            var output = this._relativeTime[string];\n\t            return typeof output === 'function' ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n\t        },\n\t\n\t        pastFuture: function pastFuture(diff, output) {\n\t            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n\t        },\n\t\n\t        ordinal: function ordinal(number) {\n\t            return this._ordinal.replace('%d', number);\n\t        },\n\t        _ordinal: '%d',\n\t        _ordinalParse: /\\d{1,2}/,\n\t\n\t        preparse: function preparse(string) {\n\t            return string;\n\t        },\n\t\n\t        postformat: function postformat(string) {\n\t            return string;\n\t        },\n\t\n\t        week: function week(mom) {\n\t            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t        },\n\t\n\t        _week: {\n\t            dow: 0, // Sunday is the first day of the week.\n\t            doy: 6 // The week that contains Jan 1st is the first week of the year.\n\t        },\n\t\n\t        firstDayOfWeek: function firstDayOfWeek() {\n\t            return this._week.dow;\n\t        },\n\t\n\t        firstDayOfYear: function firstDayOfYear() {\n\t            return this._week.doy;\n\t        },\n\t\n\t        _invalidDate: 'Invalid date',\n\t        invalidDate: function invalidDate() {\n\t            return this._invalidDate;\n\t        }\n\t    });\n\t\n\t    /************************************\n\t        Formatting\n\t    ************************************/\n\t\n\t    function removeFormattingTokens(input) {\n\t        if (input.match(/\\[[\\s\\S]/)) {\n\t            return input.replace(/^\\[|\\]$/g, '');\n\t        }\n\t        return input.replace(/\\\\/g, '');\n\t    }\n\t\n\t    function makeFormatFunction(format) {\n\t        var array = format.match(formattingTokens),\n\t            i,\n\t            length;\n\t\n\t        for (i = 0, length = array.length; i < length; i++) {\n\t            if (formatTokenFunctions[array[i]]) {\n\t                array[i] = formatTokenFunctions[array[i]];\n\t            } else {\n\t                array[i] = removeFormattingTokens(array[i]);\n\t            }\n\t        }\n\t\n\t        return function (mom) {\n\t            var output = '';\n\t            for (i = 0; i < length; i++) {\n\t                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n\t            }\n\t            return output;\n\t        };\n\t    }\n\t\n\t    // format date using native date object\n\t    function formatMoment(m, format) {\n\t        if (!m.isValid()) {\n\t            return m.localeData().invalidDate();\n\t        }\n\t\n\t        format = expandFormat(format, m.localeData());\n\t\n\t        if (!formatFunctions[format]) {\n\t            formatFunctions[format] = makeFormatFunction(format);\n\t        }\n\t\n\t        return formatFunctions[format](m);\n\t    }\n\t\n\t    function expandFormat(format, locale) {\n\t        var i = 5;\n\t\n\t        function replaceLongDateFormatTokens(input) {\n\t            return locale.longDateFormat(input) || input;\n\t        }\n\t\n\t        localFormattingTokens.lastIndex = 0;\n\t        while (i >= 0 && localFormattingTokens.test(format)) {\n\t            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t            localFormattingTokens.lastIndex = 0;\n\t            i -= 1;\n\t        }\n\t\n\t        return format;\n\t    }\n\t\n\t    /************************************\n\t        Parsing\n\t    ************************************/\n\t\n\t    // get the regex to find the next token\n\t    function getParseRegexForToken(token, config) {\n\t        var a,\n\t            strict = config._strict;\n\t        switch (token) {\n\t            case 'Q':\n\t                return parseTokenOneDigit;\n\t            case 'DDDD':\n\t                return parseTokenThreeDigits;\n\t            case 'YYYY':\n\t            case 'GGGG':\n\t            case 'gggg':\n\t                return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n\t            case 'Y':\n\t            case 'G':\n\t            case 'g':\n\t                return parseTokenSignedNumber;\n\t            case 'YYYYYY':\n\t            case 'YYYYY':\n\t            case 'GGGGG':\n\t            case 'ggggg':\n\t                return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n\t            case 'S':\n\t                if (strict) {\n\t                    return parseTokenOneDigit;\n\t                }\n\t            /* falls through */\n\t            case 'SS':\n\t                if (strict) {\n\t                    return parseTokenTwoDigits;\n\t                }\n\t            /* falls through */\n\t            case 'SSS':\n\t                if (strict) {\n\t                    return parseTokenThreeDigits;\n\t                }\n\t            /* falls through */\n\t            case 'DDD':\n\t                return parseTokenOneToThreeDigits;\n\t            case 'MMM':\n\t            case 'MMMM':\n\t            case 'dd':\n\t            case 'ddd':\n\t            case 'dddd':\n\t                return parseTokenWord;\n\t            case 'a':\n\t            case 'A':\n\t                return config._locale._meridiemParse;\n\t            case 'x':\n\t                return parseTokenOffsetMs;\n\t            case 'X':\n\t                return parseTokenTimestampMs;\n\t            case 'Z':\n\t            case 'ZZ':\n\t                return parseTokenTimezone;\n\t            case 'T':\n\t                return parseTokenT;\n\t            case 'SSSS':\n\t                return parseTokenDigits;\n\t            case 'MM':\n\t            case 'DD':\n\t            case 'YY':\n\t            case 'GG':\n\t            case 'gg':\n\t            case 'HH':\n\t            case 'hh':\n\t            case 'mm':\n\t            case 'ss':\n\t            case 'ww':\n\t            case 'WW':\n\t                return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n\t            case 'M':\n\t            case 'D':\n\t            case 'd':\n\t            case 'H':\n\t            case 'h':\n\t            case 'm':\n\t            case 's':\n\t            case 'w':\n\t            case 'W':\n\t            case 'e':\n\t            case 'E':\n\t                return parseTokenOneOrTwoDigits;\n\t            case 'Do':\n\t                return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n\t            default:\n\t                a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n\t                return a;\n\t        }\n\t    }\n\t\n\t    function utcOffsetFromString(string) {\n\t        string = string || '';\n\t        var possibleTzMatches = string.match(parseTokenTimezone) || [],\n\t            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n\t            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n\t            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t        return parts[0] === '+' ? minutes : -minutes;\n\t    }\n\t\n\t    // function to convert string input to date\n\t    function addTimeToArrayFromToken(token, input, config) {\n\t        var a,\n\t            datePartArray = config._a;\n\t\n\t        switch (token) {\n\t            // QUARTER\n\t            case 'Q':\n\t                if (input != null) {\n\t                    datePartArray[MONTH] = (toInt(input) - 1) * 3;\n\t                }\n\t                break;\n\t            // MONTH\n\t            case 'M': // fall through to MM\n\t            case 'MM':\n\t                if (input != null) {\n\t                    datePartArray[MONTH] = toInt(input) - 1;\n\t                }\n\t                break;\n\t            case 'MMM': // fall through to MMMM\n\t            case 'MMMM':\n\t                a = config._locale.monthsParse(input, token, config._strict);\n\t                // if we didn't find a month name, mark the date as invalid.\n\t                if (a != null) {\n\t                    datePartArray[MONTH] = a;\n\t                } else {\n\t                    config._pf.invalidMonth = input;\n\t                }\n\t                break;\n\t            // DAY OF MONTH\n\t            case 'D': // fall through to DD\n\t            case 'DD':\n\t                if (input != null) {\n\t                    datePartArray[DATE] = toInt(input);\n\t                }\n\t                break;\n\t            case 'Do':\n\t                if (input != null) {\n\t                    datePartArray[DATE] = toInt(parseInt(input.match(/\\d{1,2}/)[0], 10));\n\t                }\n\t                break;\n\t            // DAY OF YEAR\n\t            case 'DDD': // fall through to DDDD\n\t            case 'DDDD':\n\t                if (input != null) {\n\t                    config._dayOfYear = toInt(input);\n\t                }\n\t\n\t                break;\n\t            // YEAR\n\t            case 'YY':\n\t                datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n\t                break;\n\t            case 'YYYY':\n\t            case 'YYYYY':\n\t            case 'YYYYYY':\n\t                datePartArray[YEAR] = toInt(input);\n\t                break;\n\t            // AM / PM\n\t            case 'a': // fall through to A\n\t            case 'A':\n\t                config._meridiem = input;\n\t                // config._isPm = config._locale.isPM(input);\n\t                break;\n\t            // HOUR\n\t            case 'h': // fall through to hh\n\t            case 'hh':\n\t                config._pf.bigHour = true;\n\t            /* falls through */\n\t            case 'H': // fall through to HH\n\t            case 'HH':\n\t                datePartArray[HOUR] = toInt(input);\n\t                break;\n\t            // MINUTE\n\t            case 'm': // fall through to mm\n\t            case 'mm':\n\t                datePartArray[MINUTE] = toInt(input);\n\t                break;\n\t            // SECOND\n\t            case 's': // fall through to ss\n\t            case 'ss':\n\t                datePartArray[SECOND] = toInt(input);\n\t                break;\n\t            // MILLISECOND\n\t            case 'S':\n\t            case 'SS':\n\t            case 'SSS':\n\t            case 'SSSS':\n\t                datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t                break;\n\t            // UNIX OFFSET (MILLISECONDS)\n\t            case 'x':\n\t                config._d = new Date(toInt(input));\n\t                break;\n\t            // UNIX TIMESTAMP WITH MS\n\t            case 'X':\n\t                config._d = new Date(parseFloat(input) * 1000);\n\t                break;\n\t            // TIMEZONE\n\t            case 'Z': // fall through to ZZ\n\t            case 'ZZ':\n\t                config._useUTC = true;\n\t                config._tzm = utcOffsetFromString(input);\n\t                break;\n\t            // WEEKDAY - human\n\t            case 'dd':\n\t            case 'ddd':\n\t            case 'dddd':\n\t                a = config._locale.weekdaysParse(input);\n\t                // if we didn't get a weekday name, mark the date as invalid\n\t                if (a != null) {\n\t                    config._w = config._w || {};\n\t                    config._w.d = a;\n\t                } else {\n\t                    config._pf.invalidWeekday = input;\n\t                }\n\t                break;\n\t            // WEEK, WEEK DAY - numeric\n\t            case 'w':\n\t            case 'ww':\n\t            case 'W':\n\t            case 'WW':\n\t            case 'd':\n\t            case 'e':\n\t            case 'E':\n\t                token = token.substr(0, 1);\n\t            /* falls through */\n\t            case 'gggg':\n\t            case 'GGGG':\n\t            case 'GGGGG':\n\t                token = token.substr(0, 2);\n\t                if (input) {\n\t                    config._w = config._w || {};\n\t                    config._w[token] = toInt(input);\n\t                }\n\t                break;\n\t            case 'gg':\n\t            case 'GG':\n\t                config._w = config._w || {};\n\t                config._w[token] = moment.parseTwoDigitYear(input);\n\t        }\n\t    }\n\t\n\t    function dayOfYearFromWeekInfo(config) {\n\t        var w, weekYear, week, weekday, dow, doy, temp;\n\t\n\t        w = config._w;\n\t        if (w.GG != null || w.W != null || w.E != null) {\n\t            dow = 1;\n\t            doy = 4;\n\t\n\t            // TODO: We need to take the current isoWeekYear, but that depends on\n\t            // how we interpret now (local, utc, fixed offset). So create\n\t            // a now version of current config (take local/utc/offset flags, and\n\t            // create now).\n\t            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n\t            week = dfl(w.W, 1);\n\t            weekday = dfl(w.E, 1);\n\t        } else {\n\t            dow = config._locale._week.dow;\n\t            doy = config._locale._week.doy;\n\t\n\t            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n\t            week = dfl(w.w, 1);\n\t\n\t            if (w.d != null) {\n\t                // weekday -- low day numbers are considered next week\n\t                weekday = w.d;\n\t                if (weekday < dow) {\n\t                    ++week;\n\t                }\n\t            } else if (w.e != null) {\n\t                // local weekday -- counting starts from begining of week\n\t                weekday = w.e + dow;\n\t            } else {\n\t                // default to begining of week\n\t                weekday = dow;\n\t            }\n\t        }\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\t\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t\n\t    // convert an array to a date.\n\t    // the array should mirror the parameters below\n\t    // note: all values past the year are optional and will default to the lowest possible value.\n\t    // [year, month, day , hour, minute, second, millisecond]\n\t    function dateFromConfig(config) {\n\t        var i,\n\t            date,\n\t            input = [],\n\t            currentDate,\n\t            yearToUse;\n\t\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        currentDate = currentDateArray(config);\n\t\n\t        //compute day of the year from weeks and weekdays\n\t        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t            dayOfYearFromWeekInfo(config);\n\t        }\n\t\n\t        //if the day of the year is set, figure out what it is\n\t        if (config._dayOfYear) {\n\t            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\t\n\t            if (config._dayOfYear > daysInYear(yearToUse)) {\n\t                config._pf._overflowDayOfYear = true;\n\t            }\n\t\n\t            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n\t            config._a[MONTH] = date.getUTCMonth();\n\t            config._a[DATE] = date.getUTCDate();\n\t        }\n\t\n\t        // Default to current date.\n\t        // * if no year, month, day of month are given, default to today\n\t        // * if day of month is given, default month and year\n\t        // * if month is given, default only year\n\t        // * if year is given, don't default anything\n\t        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t            config._a[i] = input[i] = currentDate[i];\n\t        }\n\t\n\t        // Zero out whatever was not defaulted, including time\n\t        for (; i < 7; i++) {\n\t            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n\t        }\n\t\n\t        // Check for 24:00:00.000\n\t        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n\t            config._nextDay = true;\n\t            config._a[HOUR] = 0;\n\t        }\n\t\n\t        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n\t        // Apply timezone offset from input. The actual utcOffset can be changed\n\t        // with parseZone.\n\t        if (config._tzm != null) {\n\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t        }\n\t\n\t        if (config._nextDay) {\n\t            config._a[HOUR] = 24;\n\t        }\n\t    }\n\t\n\t    function dateFromObject(config) {\n\t        var normalizedInput;\n\t\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        normalizedInput = normalizeObjectUnits(config._i);\n\t        config._a = [normalizedInput.year, normalizedInput.month, normalizedInput.day || normalizedInput.date, normalizedInput.hour, normalizedInput.minute, normalizedInput.second, normalizedInput.millisecond];\n\t\n\t        dateFromConfig(config);\n\t    }\n\t\n\t    function currentDateArray(config) {\n\t        var now = new Date();\n\t        if (config._useUTC) {\n\t            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n\t        } else {\n\t            return [now.getFullYear(), now.getMonth(), now.getDate()];\n\t        }\n\t    }\n\t\n\t    // date from string and format string\n\t    function makeDateFromStringAndFormat(config) {\n\t        if (config._f === moment.ISO_8601) {\n\t            parseISO(config);\n\t            return;\n\t        }\n\t\n\t        config._a = [];\n\t        config._pf.empty = true;\n\t\n\t        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t        var string = '' + config._i,\n\t            i,\n\t            parsedInput,\n\t            tokens,\n\t            token,\n\t            skipped,\n\t            stringLength = string.length,\n\t            totalParsedInputLength = 0;\n\t\n\t        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t        for (i = 0; i < tokens.length; i++) {\n\t            token = tokens[i];\n\t            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t            if (parsedInput) {\n\t                skipped = string.substr(0, string.indexOf(parsedInput));\n\t                if (skipped.length > 0) {\n\t                    config._pf.unusedInput.push(skipped);\n\t                }\n\t                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t                totalParsedInputLength += parsedInput.length;\n\t            }\n\t            // don't parse if it's not a known token\n\t            if (formatTokenFunctions[token]) {\n\t                if (parsedInput) {\n\t                    config._pf.empty = false;\n\t                } else {\n\t                    config._pf.unusedTokens.push(token);\n\t                }\n\t                addTimeToArrayFromToken(token, parsedInput, config);\n\t            } else if (config._strict && !parsedInput) {\n\t                config._pf.unusedTokens.push(token);\n\t            }\n\t        }\n\t\n\t        // add remaining unparsed input length to the string\n\t        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n\t        if (string.length > 0) {\n\t            config._pf.unusedInput.push(string);\n\t        }\n\t\n\t        // clear _12h flag if hour is <= 12\n\t        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n\t            config._pf.bigHour = undefined;\n\t        }\n\t        // handle meridiem\n\t        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t        dateFromConfig(config);\n\t        checkOverflow(config);\n\t    }\n\t\n\t    function unescapeFormat(s) {\n\t        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t            return p1 || p2 || p3 || p4;\n\t        });\n\t    }\n\t\n\t    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\t    function regexpEscape(s) {\n\t        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t    }\n\t\n\t    // date from string and array of format strings\n\t    function makeDateFromStringAndArray(config) {\n\t        var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\t\n\t        if (config._f.length === 0) {\n\t            config._pf.invalidFormat = true;\n\t            config._d = new Date(NaN);\n\t            return;\n\t        }\n\t\n\t        for (i = 0; i < config._f.length; i++) {\n\t            currentScore = 0;\n\t            tempConfig = copyConfig({}, config);\n\t            if (config._useUTC != null) {\n\t                tempConfig._useUTC = config._useUTC;\n\t            }\n\t            tempConfig._pf = defaultParsingFlags();\n\t            tempConfig._f = config._f[i];\n\t            makeDateFromStringAndFormat(tempConfig);\n\t\n\t            if (!isValid(tempConfig)) {\n\t                continue;\n\t            }\n\t\n\t            // if there is any input that was not parsed add a penalty for that format\n\t            currentScore += tempConfig._pf.charsLeftOver;\n\t\n\t            //or tokens\n\t            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\t\n\t            tempConfig._pf.score = currentScore;\n\t\n\t            if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t                scoreToBeat = currentScore;\n\t                bestMoment = tempConfig;\n\t            }\n\t        }\n\t\n\t        extend(config, bestMoment || tempConfig);\n\t    }\n\t\n\t    // date from iso format\n\t    function parseISO(config) {\n\t        var i,\n\t            l,\n\t            string = config._i,\n\t            match = isoRegex.exec(string);\n\t\n\t        if (match) {\n\t            config._pf.iso = true;\n\t            for (i = 0, l = isoDates.length; i < l; i++) {\n\t                if (isoDates[i][1].exec(string)) {\n\t                    // match[5] should be 'T' or undefined\n\t                    config._f = isoDates[i][0] + (match[6] || ' ');\n\t                    break;\n\t                }\n\t            }\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(string)) {\n\t                    config._f += isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (string.match(parseTokenTimezone)) {\n\t                config._f += 'Z';\n\t            }\n\t            makeDateFromStringAndFormat(config);\n\t        } else {\n\t            config._isValid = false;\n\t        }\n\t    }\n\t\n\t    // date from iso format or fallback\n\t    function makeDateFromString(config) {\n\t        parseISO(config);\n\t        if (config._isValid === false) {\n\t            delete config._isValid;\n\t            moment.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    function map(arr, fn) {\n\t        var res = [],\n\t            i;\n\t        for (i = 0; i < arr.length; ++i) {\n\t            res.push(fn(arr[i], i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    function makeDateFromInput(config) {\n\t        var input = config._i,\n\t            matched;\n\t        if (input === undefined) {\n\t            config._d = new Date();\n\t        } else if (isDate(input)) {\n\t            config._d = new Date(+input);\n\t        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n\t            config._d = new Date(+matched[1]);\n\t        } else if (typeof input === 'string') {\n\t            makeDateFromString(config);\n\t        } else if (isArray(input)) {\n\t            config._a = map(input.slice(0), function (obj) {\n\t                return parseInt(obj, 10);\n\t            });\n\t            dateFromConfig(config);\n\t        } else if (typeof input === 'object') {\n\t            dateFromObject(config);\n\t        } else if (typeof input === 'number') {\n\t            // from milliseconds\n\t            config._d = new Date(input);\n\t        } else {\n\t            moment.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    function makeDate(y, m, d, h, M, s, ms) {\n\t        //can't just apply() to create a date:\n\t        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n\t        var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t        //the date constructor doesn't accept years < 1970\n\t        if (y < 1970) {\n\t            date.setFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    function makeUTCDate(y) {\n\t        var date = new Date(Date.UTC.apply(null, arguments));\n\t        if (y < 1970) {\n\t            date.setUTCFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    function parseWeekday(input, locale) {\n\t        if (typeof input === 'string') {\n\t            if (!isNaN(input)) {\n\t                input = parseInt(input, 10);\n\t            } else {\n\t                input = locale.weekdaysParse(input);\n\t                if (typeof input !== 'number') {\n\t                    return null;\n\t                }\n\t            }\n\t        }\n\t        return input;\n\t    }\n\t\n\t    /************************************\n\t        Relative Time\n\t    ************************************/\n\t\n\t    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\t    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t    }\n\t\n\t    function relativeTime(posNegDuration, withoutSuffix, locale) {\n\t        var duration = moment.duration(posNegDuration).abs(),\n\t            seconds = round(duration.as('s')),\n\t            minutes = round(duration.as('m')),\n\t            hours = round(duration.as('h')),\n\t            days = round(duration.as('d')),\n\t            months = round(duration.as('M')),\n\t            years = round(duration.as('y')),\n\t            args = seconds < relativeTimeThresholds.s && ['s', seconds] || minutes === 1 && ['m'] || minutes < relativeTimeThresholds.m && ['mm', minutes] || hours === 1 && ['h'] || hours < relativeTimeThresholds.h && ['hh', hours] || days === 1 && ['d'] || days < relativeTimeThresholds.d && ['dd', days] || months === 1 && ['M'] || months < relativeTimeThresholds.M && ['MM', months] || years === 1 && ['y'] || ['yy', years];\n\t\n\t        args[2] = withoutSuffix;\n\t        args[3] = +posNegDuration > 0;\n\t        args[4] = locale;\n\t        return substituteTimeAgo.apply({}, args);\n\t    }\n\t\n\t    /************************************\n\t        Week of Year\n\t    ************************************/\n\t\n\t    // firstDayOfWeek       0 = sun, 6 = sat\n\t    //                      the day of the week that starts the week\n\t    //                      (usually sunday or monday)\n\t    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n\t    //                      the first week is the week that contains the first\n\t    //                      of this day of the week\n\t    //                      (eg. ISO weeks use thursday (4))\n\t    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n\t        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n\t            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n\t            adjustedMoment;\n\t\n\t        if (daysToDayOfWeek > end) {\n\t            daysToDayOfWeek -= 7;\n\t        }\n\t\n\t        if (daysToDayOfWeek < end - 7) {\n\t            daysToDayOfWeek += 7;\n\t        }\n\t\n\t        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n\t        return {\n\t            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n\t            year: adjustedMoment.year()\n\t        };\n\t    }\n\t\n\t    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\t    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n\t        var d = makeUTCDate(year, 0, 1).getUTCDay(),\n\t            daysToAdd,\n\t            dayOfYear;\n\t\n\t        d = d === 0 ? 7 : d;\n\t        weekday = weekday != null ? weekday : firstDayOfWeek;\n\t        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n\t        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\t\n\t        return {\n\t            year: dayOfYear > 0 ? year : year - 1,\n\t            dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear\n\t        };\n\t    }\n\t\n\t    /************************************\n\t        Top Level Functions\n\t    ************************************/\n\t\n\t    function makeMoment(config) {\n\t        var input = config._i,\n\t            format = config._f,\n\t            res;\n\t\n\t        config._locale = config._locale || moment.localeData(config._l);\n\t\n\t        if (input === null || format === undefined && input === '') {\n\t            return moment.invalid({ nullInput: true });\n\t        }\n\t\n\t        if (typeof input === 'string') {\n\t            config._i = input = config._locale.preparse(input);\n\t        }\n\t\n\t        if (moment.isMoment(input)) {\n\t            return new Moment(input, true);\n\t        } else if (format) {\n\t            if (isArray(format)) {\n\t                makeDateFromStringAndArray(config);\n\t            } else {\n\t                makeDateFromStringAndFormat(config);\n\t            }\n\t        } else {\n\t            makeDateFromInput(config);\n\t        }\n\t\n\t        res = new Moment(config);\n\t        if (res._nextDay) {\n\t            // Adding is smart enough around DST\n\t            res.add(1, 'd');\n\t            res._nextDay = undefined;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    moment = function (input, format, locale, strict) {\n\t        var c;\n\t\n\t        if (typeof locale === 'boolean') {\n\t            strict = locale;\n\t            locale = undefined;\n\t        }\n\t        // object construction must be done this way.\n\t        // https://github.com/moment/moment/issues/1423\n\t        c = {};\n\t        c._isAMomentObject = true;\n\t        c._i = input;\n\t        c._f = format;\n\t        c._l = locale;\n\t        c._strict = strict;\n\t        c._isUTC = false;\n\t        c._pf = defaultParsingFlags();\n\t\n\t        return makeMoment(c);\n\t    };\n\t\n\t    moment.suppressDeprecationWarnings = false;\n\t\n\t    moment.createFromInputFallback = deprecate('moment construction falls back to js Date. This is ' + 'discouraged and will be removed in upcoming major ' + 'release. Please refer to ' + 'https://github.com/moment/moment/issues/1407 for more info.', function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    });\n\t\n\t    // Pick a moment m from moments so that m[fn](other) is true for all\n\t    // other. This relies on the function fn to be transitive.\n\t    //\n\t    // moments should either be an array of moment objects or an array, whose\n\t    // first element is an array of moment objects.\n\t    function pickBy(fn, moments) {\n\t        var res, i;\n\t        if (moments.length === 1 && isArray(moments[0])) {\n\t            moments = moments[0];\n\t        }\n\t        if (!moments.length) {\n\t            return moment();\n\t        }\n\t        res = moments[0];\n\t        for (i = 1; i < moments.length; ++i) {\n\t            if (moments[i][fn](res)) {\n\t                res = moments[i];\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t\n\t    moment.min = function () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy('isBefore', args);\n\t    };\n\t\n\t    moment.max = function () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy('isAfter', args);\n\t    };\n\t\n\t    // creating with utc\n\t    moment.utc = function (input, format, locale, strict) {\n\t        var c;\n\t\n\t        if (typeof locale === 'boolean') {\n\t            strict = locale;\n\t            locale = undefined;\n\t        }\n\t        // object construction must be done this way.\n\t        // https://github.com/moment/moment/issues/1423\n\t        c = {};\n\t        c._isAMomentObject = true;\n\t        c._useUTC = true;\n\t        c._isUTC = true;\n\t        c._l = locale;\n\t        c._i = input;\n\t        c._f = format;\n\t        c._strict = strict;\n\t        c._pf = defaultParsingFlags();\n\t\n\t        return makeMoment(c).utc();\n\t    };\n\t\n\t    // creating with unix timestamp (in seconds)\n\t    moment.unix = function (input) {\n\t        return moment(input * 1000);\n\t    };\n\t\n\t    // duration\n\t    moment.duration = function (input, key) {\n\t        var duration = input,\n\t\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t            sign,\n\t            ret,\n\t            parseIso,\n\t            diffRes;\n\t\n\t        if (moment.isDuration(input)) {\n\t            duration = {\n\t                ms: input._milliseconds,\n\t                d: input._days,\n\t                M: input._months\n\t            };\n\t        } else if (typeof input === 'number') {\n\t            duration = {};\n\t            if (key) {\n\t                duration[key] = input;\n\t            } else {\n\t                duration.milliseconds = input;\n\t            }\n\t        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n\t            sign = match[1] === '-' ? -1 : 1;\n\t            duration = {\n\t                y: 0,\n\t                d: toInt(match[DATE]) * sign,\n\t                h: toInt(match[HOUR]) * sign,\n\t                m: toInt(match[MINUTE]) * sign,\n\t                s: toInt(match[SECOND]) * sign,\n\t                ms: toInt(match[MILLISECOND]) * sign\n\t            };\n\t        } else if (!!(match = isoDurationRegex.exec(input))) {\n\t            sign = match[1] === '-' ? -1 : 1;\n\t            parseIso = function (inp) {\n\t                // We'd normally use ~~inp for this, but unfortunately it also\n\t                // converts floats to ints.\n\t                // inp may be undefined, so careful calling replace on it.\n\t                var res = inp && parseFloat(inp.replace(',', '.'));\n\t                // apply sign while we're at it\n\t                return (isNaN(res) ? 0 : res) * sign;\n\t            };\n\t            duration = {\n\t                y: parseIso(match[2]),\n\t                M: parseIso(match[3]),\n\t                d: parseIso(match[4]),\n\t                h: parseIso(match[5]),\n\t                m: parseIso(match[6]),\n\t                s: parseIso(match[7]),\n\t                w: parseIso(match[8])\n\t            };\n\t        } else if (duration == null) {\n\t            // checks for null or undefined\n\t            duration = {};\n\t        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\t\n\t            duration = {};\n\t            duration.ms = diffRes.milliseconds;\n\t            duration.M = diffRes.months;\n\t        }\n\t\n\t        ret = new Duration(duration);\n\t\n\t        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n\t            ret._locale = input._locale;\n\t        }\n\t\n\t        return ret;\n\t    };\n\t\n\t    // version number\n\t    moment.version = VERSION;\n\t\n\t    // default format\n\t    moment.defaultFormat = isoFormat;\n\t\n\t    // constant that refers to the ISO standard\n\t    moment.ISO_8601 = function () {};\n\t\n\t    // Plugins that add properties should also add the key here (null value),\n\t    // so we can properly clone ourselves.\n\t    moment.momentProperties = momentProperties;\n\t\n\t    // This function will be called whenever a moment is mutated.\n\t    // It is intended to keep the offset in sync with the timezone.\n\t    moment.updateOffset = function () {};\n\t\n\t    // This function allows you to set a threshold for relative time strings\n\t    moment.relativeTimeThreshold = function (threshold, limit) {\n\t        if (relativeTimeThresholds[threshold] === undefined) {\n\t            return false;\n\t        }\n\t        if (limit === undefined) {\n\t            return relativeTimeThresholds[threshold];\n\t        }\n\t        relativeTimeThresholds[threshold] = limit;\n\t        return true;\n\t    };\n\t\n\t    moment.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', function (key, value) {\n\t        return moment.locale(key, value);\n\t    });\n\t\n\t    // This function will load locale and then set the global locale.  If\n\t    // no arguments are passed in, it will simply return the current global\n\t    // locale key.\n\t    moment.locale = function (key, values) {\n\t        var data;\n\t        if (key) {\n\t            if (typeof values !== 'undefined') {\n\t                data = moment.defineLocale(key, values);\n\t            } else {\n\t                data = moment.localeData(key);\n\t            }\n\t\n\t            if (data) {\n\t                moment.duration._locale = moment._locale = data;\n\t            }\n\t        }\n\t\n\t        return moment._locale._abbr;\n\t    };\n\t\n\t    moment.defineLocale = function (name, values) {\n\t        if (values !== null) {\n\t            values.abbr = name;\n\t            if (!locales[name]) {\n\t                locales[name] = new Locale();\n\t            }\n\t            locales[name].set(values);\n\t\n\t            // backwards compat for now: also set the locale\n\t            moment.locale(name);\n\t\n\t            return locales[name];\n\t        } else {\n\t            // useful for testing\n\t            delete locales[name];\n\t            return null;\n\t        }\n\t    };\n\t\n\t    moment.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', function (key) {\n\t        return moment.localeData(key);\n\t    });\n\t\n\t    // returns locale data\n\t    moment.localeData = function (key) {\n\t        var locale;\n\t\n\t        if (key && key._locale && key._locale._abbr) {\n\t            key = key._locale._abbr;\n\t        }\n\t\n\t        if (!key) {\n\t            return moment._locale;\n\t        }\n\t\n\t        if (!isArray(key)) {\n\t            //short-circuit everything else\n\t            locale = loadLocale(key);\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            key = [key];\n\t        }\n\t\n\t        return chooseLocale(key);\n\t    };\n\t\n\t    // compare moment object\n\t    moment.isMoment = function (obj) {\n\t        return obj instanceof Moment || obj != null && hasOwnProp(obj, '_isAMomentObject');\n\t    };\n\t\n\t    // for typechecking Duration objects\n\t    moment.isDuration = function (obj) {\n\t        return obj instanceof Duration;\n\t    };\n\t\n\t    for (i = lists.length - 1; i >= 0; --i) {\n\t        makeList(lists[i]);\n\t    }\n\t\n\t    moment.normalizeUnits = function (units) {\n\t        return normalizeUnits(units);\n\t    };\n\t\n\t    moment.invalid = function (flags) {\n\t        var m = moment.utc(NaN);\n\t        if (flags != null) {\n\t            extend(m._pf, flags);\n\t        } else {\n\t            m._pf.userInvalidated = true;\n\t        }\n\t\n\t        return m;\n\t    };\n\t\n\t    moment.parseZone = function () {\n\t        return moment.apply(null, arguments).parseZone();\n\t    };\n\t\n\t    moment.parseTwoDigitYear = function (input) {\n\t        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t    };\n\t\n\t    moment.isDate = isDate;\n\t\n\t    /************************************\n\t        Moment Prototype\n\t    ************************************/\n\t\n\t    extend(moment.fn = Moment.prototype, {\n\t\n\t        clone: function clone() {\n\t            return moment(this);\n\t        },\n\t\n\t        valueOf: function valueOf() {\n\t            return +this._d - (this._offset || 0) * 60000;\n\t        },\n\t\n\t        unix: function unix() {\n\t            return Math.floor(+this / 1000);\n\t        },\n\t\n\t        toString: function toString() {\n\t            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t        },\n\t\n\t        toDate: function toDate() {\n\t            return this._offset ? new Date(+this) : this._d;\n\t        },\n\t\n\t        toISOString: function toISOString() {\n\t            var m = moment(this).utc();\n\t            if (0 < m.year() && m.year() <= 9999) {\n\t                if ('function' === typeof Date.prototype.toISOString) {\n\t                    // native implementation is ~50x faster, use it when we can\n\t                    return this.toDate().toISOString();\n\t                } else {\n\t                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t                }\n\t            } else {\n\t                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t            }\n\t        },\n\t\n\t        toArray: function toArray() {\n\t            var m = this;\n\t            return [m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds()];\n\t        },\n\t\n\t        isValid: (function (_isValid) {\n\t            function isValid() {\n\t                return _isValid.apply(this, arguments);\n\t            }\n\t\n\t            isValid.toString = function () {\n\t                return isValid.toString();\n\t            };\n\t\n\t            return isValid;\n\t        })(function () {\n\t            return isValid(this);\n\t        }),\n\t\n\t        isDSTShifted: function isDSTShifted() {\n\t            if (this._a) {\n\t                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n\t            }\n\t\n\t            return false;\n\t        },\n\t\n\t        parsingFlags: function parsingFlags() {\n\t            return extend({}, this._pf);\n\t        },\n\t\n\t        invalidAt: function invalidAt() {\n\t            return this._pf.overflow;\n\t        },\n\t\n\t        utc: function utc(keepLocalTime) {\n\t            return this.utcOffset(0, keepLocalTime);\n\t        },\n\t\n\t        local: function local(keepLocalTime) {\n\t            if (this._isUTC) {\n\t                this.utcOffset(0, keepLocalTime);\n\t                this._isUTC = false;\n\t\n\t                if (keepLocalTime) {\n\t                    this.subtract(this._dateUtcOffset(), 'm');\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        format: function format(inputString) {\n\t            var output = formatMoment(this, inputString || moment.defaultFormat);\n\t            return this.localeData().postformat(output);\n\t        },\n\t\n\t        add: createAdder(1, 'add'),\n\t\n\t        subtract: createAdder(-1, 'subtract'),\n\t\n\t        diff: function diff(input, units, asFloat) {\n\t            var that = makeAs(input, this),\n\t                zoneDiff = (that.utcOffset() - this.utcOffset()) * 60000,\n\t                anchor,\n\t                diff,\n\t                output,\n\t                daysAdjust;\n\t\n\t            units = normalizeUnits(units);\n\t\n\t            if (units === 'year' || units === 'month' || units === 'quarter') {\n\t                output = monthDiff(this, that);\n\t                if (units === 'quarter') {\n\t                    output = output / 3;\n\t                } else if (units === 'year') {\n\t                    output = output / 12;\n\t                }\n\t            } else {\n\t                diff = this - that;\n\t                output = units === 'second' ? diff / 1000 : // 1000\n\t                units === 'minute' ? diff / 60000 : // 1000 * 60\n\t                units === 'hour' ? diff / 3600000 : // 1000 * 60 * 60\n\t                units === 'day' ? (diff - zoneDiff) / 86400000 : // 1000 * 60 * 60 * 24, negate dst\n\t                units === 'week' ? (diff - zoneDiff) / 604800000 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t                diff;\n\t            }\n\t            return asFloat ? output : absRound(output);\n\t        },\n\t\n\t        from: function from(time, withoutSuffix) {\n\t            return moment.duration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);\n\t        },\n\t\n\t        fromNow: function fromNow(withoutSuffix) {\n\t            return this.from(moment(), withoutSuffix);\n\t        },\n\t\n\t        calendar: function calendar(time) {\n\t            // We want to compare the start of today, vs this.\n\t            // Getting start-of-today depends on whether we're locat/utc/offset\n\t            // or not.\n\t            var now = time || moment(),\n\t                sod = makeAs(now, this).startOf('day'),\n\t                diff = this.diff(sod, 'days', true),\n\t                format = diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n\t            return this.format(this.localeData().calendar(format, this, moment(now)));\n\t        },\n\t\n\t        isLeapYear: (function (_isLeapYear) {\n\t            function isLeapYear() {\n\t                return _isLeapYear.apply(this, arguments);\n\t            }\n\t\n\t            isLeapYear.toString = function () {\n\t                return isLeapYear.toString();\n\t            };\n\t\n\t            return isLeapYear;\n\t        })(function () {\n\t            return isLeapYear(this.year());\n\t        }),\n\t\n\t        isDST: function isDST() {\n\t            return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n\t        },\n\t\n\t        day: function day(input) {\n\t            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t            if (input != null) {\n\t                input = parseWeekday(input, this.localeData());\n\t                return this.add(input - day, 'd');\n\t            } else {\n\t                return day;\n\t            }\n\t        },\n\t\n\t        month: makeAccessor('Month', true),\n\t\n\t        startOf: function startOf(units) {\n\t            units = normalizeUnits(units);\n\t            // the following switch intentionally omits break keywords\n\t            // to utilize falling through the cases.\n\t            switch (units) {\n\t                case 'year':\n\t                    this.month(0);\n\t                /* falls through */\n\t                case 'quarter':\n\t                case 'month':\n\t                    this.date(1);\n\t                /* falls through */\n\t                case 'week':\n\t                case 'isoWeek':\n\t                case 'day':\n\t                    this.hours(0);\n\t                /* falls through */\n\t                case 'hour':\n\t                    this.minutes(0);\n\t                /* falls through */\n\t                case 'minute':\n\t                    this.seconds(0);\n\t                /* falls through */\n\t                case 'second':\n\t                    this.milliseconds(0);\n\t                    /* falls through */\n\t            }\n\t\n\t            // weeks are a special case\n\t            if (units === 'week') {\n\t                this.weekday(0);\n\t            } else if (units === 'isoWeek') {\n\t                this.isoWeekday(1);\n\t            }\n\t\n\t            // quarters are also special\n\t            if (units === 'quarter') {\n\t                this.month(Math.floor(this.month() / 3) * 3);\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        endOf: function endOf(units) {\n\t            units = normalizeUnits(units);\n\t            if (units === undefined || units === 'millisecond') {\n\t                return this;\n\t            }\n\t            return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');\n\t        },\n\t\n\t        isAfter: function isAfter(input, units) {\n\t            var inputMs;\n\t            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n\t            if (units === 'millisecond') {\n\t                input = moment.isMoment(input) ? input : moment(input);\n\t                return +this > +input;\n\t            } else {\n\t                inputMs = moment.isMoment(input) ? +input : +moment(input);\n\t                return inputMs < +this.clone().startOf(units);\n\t            }\n\t        },\n\t\n\t        isBefore: function isBefore(input, units) {\n\t            var inputMs;\n\t            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n\t            if (units === 'millisecond') {\n\t                input = moment.isMoment(input) ? input : moment(input);\n\t                return +this < +input;\n\t            } else {\n\t                inputMs = moment.isMoment(input) ? +input : +moment(input);\n\t                return +this.clone().endOf(units) < inputMs;\n\t            }\n\t        },\n\t\n\t        isBetween: function isBetween(from, to, units) {\n\t            return this.isAfter(from, units) && this.isBefore(to, units);\n\t        },\n\t\n\t        isSame: function isSame(input, units) {\n\t            var inputMs;\n\t            units = normalizeUnits(units || 'millisecond');\n\t            if (units === 'millisecond') {\n\t                input = moment.isMoment(input) ? input : moment(input);\n\t                return +this === +input;\n\t            } else {\n\t                inputMs = +moment(input);\n\t                return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);\n\t            }\n\t        },\n\t\n\t        min: deprecate('moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548', function (other) {\n\t            other = moment.apply(null, arguments);\n\t            return other < this ? this : other;\n\t        }),\n\t\n\t        max: deprecate('moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548', function (other) {\n\t            other = moment.apply(null, arguments);\n\t            return other > this ? this : other;\n\t        }),\n\t\n\t        zone: deprecate('moment().zone is deprecated, use moment().utcOffset instead. ' + 'https://github.com/moment/moment/issues/1779', function (input, keepLocalTime) {\n\t            if (input != null) {\n\t                if (typeof input !== 'string') {\n\t                    input = -input;\n\t                }\n\t\n\t                this.utcOffset(input, keepLocalTime);\n\t\n\t                return this;\n\t            } else {\n\t                return -this.utcOffset();\n\t            }\n\t        }),\n\t\n\t        // keepLocalTime = true means only change the timezone, without\n\t        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t        // +0200, so we adjust the time as needed, to be valid.\n\t        //\n\t        // Keeping the time actually adds/subtracts (one hour)\n\t        // from the actual represented time. That is why we call updateOffset\n\t        // a second time. In case it wants us to change the offset again\n\t        // _changeInProgress == true case, then we have to adjust, because\n\t        // there is no such time in the given timezone.\n\t        utcOffset: function utcOffset(input, keepLocalTime) {\n\t            var offset = this._offset || 0,\n\t                localAdjust;\n\t            if (input != null) {\n\t                if (typeof input === 'string') {\n\t                    input = utcOffsetFromString(input);\n\t                }\n\t                if (Math.abs(input) < 16) {\n\t                    input = input * 60;\n\t                }\n\t                if (!this._isUTC && keepLocalTime) {\n\t                    localAdjust = this._dateUtcOffset();\n\t                }\n\t                this._offset = input;\n\t                this._isUTC = true;\n\t                if (localAdjust != null) {\n\t                    this.add(localAdjust, 'm');\n\t                }\n\t                if (offset !== input) {\n\t                    if (!keepLocalTime || this._changeInProgress) {\n\t                        addOrSubtractDurationFromMoment(this, moment.duration(input - offset, 'm'), 1, false);\n\t                    } else if (!this._changeInProgress) {\n\t                        this._changeInProgress = true;\n\t                        moment.updateOffset(this, true);\n\t                        this._changeInProgress = null;\n\t                    }\n\t                }\n\t\n\t                return this;\n\t            } else {\n\t                return this._isUTC ? offset : this._dateUtcOffset();\n\t            }\n\t        },\n\t\n\t        isLocal: function isLocal() {\n\t            return !this._isUTC;\n\t        },\n\t\n\t        isUtcOffset: function isUtcOffset() {\n\t            return this._isUTC;\n\t        },\n\t\n\t        isUtc: function isUtc() {\n\t            return this._isUTC && this._offset === 0;\n\t        },\n\t\n\t        zoneAbbr: function zoneAbbr() {\n\t            return this._isUTC ? 'UTC' : '';\n\t        },\n\t\n\t        zoneName: function zoneName() {\n\t            return this._isUTC ? 'Coordinated Universal Time' : '';\n\t        },\n\t\n\t        parseZone: function parseZone() {\n\t            if (this._tzm) {\n\t                this.utcOffset(this._tzm);\n\t            } else if (typeof this._i === 'string') {\n\t                this.utcOffset(utcOffsetFromString(this._i));\n\t            }\n\t            return this;\n\t        },\n\t\n\t        hasAlignedHourOffset: function hasAlignedHourOffset(input) {\n\t            if (!input) {\n\t                input = 0;\n\t            } else {\n\t                input = moment(input).utcOffset();\n\t            }\n\t\n\t            return (this.utcOffset() - input) % 60 === 0;\n\t        },\n\t\n\t        daysInMonth: (function (_daysInMonth) {\n\t            function daysInMonth() {\n\t                return _daysInMonth.apply(this, arguments);\n\t            }\n\t\n\t            daysInMonth.toString = function () {\n\t                return daysInMonth.toString();\n\t            };\n\t\n\t            return daysInMonth;\n\t        })(function () {\n\t            return daysInMonth(this.year(), this.month());\n\t        }),\n\t\n\t        dayOfYear: function dayOfYear(input) {\n\t            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 86400000) + 1;\n\t            return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n\t        },\n\t\n\t        quarter: function quarter(input) {\n\t            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t        },\n\t\n\t        weekYear: function weekYear(input) {\n\t            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n\t            return input == null ? year : this.add(input - year, 'y');\n\t        },\n\t\n\t        isoWeekYear: function isoWeekYear(input) {\n\t            var year = weekOfYear(this, 1, 4).year;\n\t            return input == null ? year : this.add(input - year, 'y');\n\t        },\n\t\n\t        week: function week(input) {\n\t            var week = this.localeData().week(this);\n\t            return input == null ? week : this.add((input - week) * 7, 'd');\n\t        },\n\t\n\t        isoWeek: function isoWeek(input) {\n\t            var week = weekOfYear(this, 1, 4).week;\n\t            return input == null ? week : this.add((input - week) * 7, 'd');\n\t        },\n\t\n\t        weekday: function weekday(input) {\n\t            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t            return input == null ? weekday : this.add(input - weekday, 'd');\n\t        },\n\t\n\t        isoWeekday: function isoWeekday(input) {\n\t            // behaves the same as moment#day except\n\t            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t            // as a setter, sunday should belong to the previous week.\n\t            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n\t        },\n\t\n\t        isoWeeksInYear: function isoWeeksInYear() {\n\t            return weeksInYear(this.year(), 1, 4);\n\t        },\n\t\n\t        weeksInYear: (function (_weeksInYear) {\n\t            function weeksInYear() {\n\t                return _weeksInYear.apply(this, arguments);\n\t            }\n\t\n\t            weeksInYear.toString = function () {\n\t                return weeksInYear.toString();\n\t            };\n\t\n\t            return weeksInYear;\n\t        })(function () {\n\t            var weekInfo = this.localeData()._week;\n\t            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t        }),\n\t\n\t        get: function get(units) {\n\t            units = normalizeUnits(units);\n\t            return this[units]();\n\t        },\n\t\n\t        set: function set(units, value) {\n\t            var unit;\n\t            if (typeof units === 'object') {\n\t                for (unit in units) {\n\t                    this.set(unit, units[unit]);\n\t                }\n\t            } else {\n\t                units = normalizeUnits(units);\n\t                if (typeof this[units] === 'function') {\n\t                    this[units](value);\n\t                }\n\t            }\n\t            return this;\n\t        },\n\t\n\t        // If passed a locale key, it will set the locale for this\n\t        // instance.  Otherwise, it will return the locale configuration\n\t        // variables for this instance.\n\t        locale: function locale(key) {\n\t            var newLocaleData;\n\t\n\t            if (key === undefined) {\n\t                return this._locale._abbr;\n\t            } else {\n\t                newLocaleData = moment.localeData(key);\n\t                if (newLocaleData != null) {\n\t                    this._locale = newLocaleData;\n\t                }\n\t                return this;\n\t            }\n\t        },\n\t\n\t        lang: deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n\t            if (key === undefined) {\n\t                return this.localeData();\n\t            } else {\n\t                return this.locale(key);\n\t            }\n\t        }),\n\t\n\t        localeData: function localeData() {\n\t            return this._locale;\n\t        },\n\t\n\t        _dateUtcOffset: function _dateUtcOffset() {\n\t            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t            // https://github.com/moment/moment/pull/1871\n\t            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;\n\t        }\n\t\n\t    });\n\t\n\t    function rawMonthSetter(mom, value) {\n\t        var dayOfMonth;\n\t\n\t        // TODO: Move this out of here!\n\t        if (typeof value === 'string') {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (typeof value !== 'number') {\n\t                return mom;\n\t            }\n\t        }\n\t\n\t        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t        return mom;\n\t    }\n\t\n\t    function rawGetter(mom, unit) {\n\t        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n\t    }\n\t\n\t    function rawSetter(mom, unit, value) {\n\t        if (unit === 'Month') {\n\t            return rawMonthSetter(mom, value);\n\t        } else {\n\t            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t        }\n\t    }\n\t\n\t    function makeAccessor(unit, keepTime) {\n\t        return function (value) {\n\t            if (value != null) {\n\t                rawSetter(this, unit, value);\n\t                moment.updateOffset(this, keepTime);\n\t                return this;\n\t            } else {\n\t                return rawGetter(this, unit);\n\t            }\n\t        };\n\t    }\n\t\n\t    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n\t    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n\t    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n\t    // Setting the hour should keep the time, because the user explicitly\n\t    // specified which hour he wants. So trying to maintain the same hour (in\n\t    // a new timezone) makes sense. Adding/subtracting hours does not follow\n\t    // this rule.\n\t    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n\t    // moment.fn.month is defined separately\n\t    moment.fn.date = makeAccessor('Date', true);\n\t    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n\t    moment.fn.year = makeAccessor('FullYear', true);\n\t    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\t\n\t    // add plural methods\n\t    moment.fn.days = moment.fn.day;\n\t    moment.fn.months = moment.fn.month;\n\t    moment.fn.weeks = moment.fn.week;\n\t    moment.fn.isoWeeks = moment.fn.isoWeek;\n\t    moment.fn.quarters = moment.fn.quarter;\n\t\n\t    // add aliased format methods\n\t    moment.fn.toJSON = moment.fn.toISOString;\n\t\n\t    // alias isUtc for dev-friendliness\n\t    moment.fn.isUTC = moment.fn.isUtc;\n\t\n\t    /************************************\n\t        Duration Prototype\n\t    ************************************/\n\t\n\t    function daysToYears(days) {\n\t        // 400 years have 146097 days (taking into account leap year rules)\n\t        return days * 400 / 146097;\n\t    }\n\t\n\t    function yearsToDays(years) {\n\t        // years * 365 + absRound(years / 4) -\n\t        //     absRound(years / 100) + absRound(years / 400);\n\t        return years * 146097 / 400;\n\t    }\n\t\n\t    extend(moment.duration.fn = Duration.prototype, {\n\t\n\t        _bubble: function _bubble() {\n\t            var milliseconds = this._milliseconds,\n\t                days = this._days,\n\t                months = this._months,\n\t                data = this._data,\n\t                seconds,\n\t                minutes,\n\t                hours,\n\t                years = 0;\n\t\n\t            // The following code bubbles up values, see the tests for\n\t            // examples of what that means.\n\t            data.milliseconds = milliseconds % 1000;\n\t\n\t            seconds = absRound(milliseconds / 1000);\n\t            data.seconds = seconds % 60;\n\t\n\t            minutes = absRound(seconds / 60);\n\t            data.minutes = minutes % 60;\n\t\n\t            hours = absRound(minutes / 60);\n\t            data.hours = hours % 24;\n\t\n\t            days += absRound(hours / 24);\n\t\n\t            // Accurately convert days to years, assume start from year 0.\n\t            years = absRound(daysToYears(days));\n\t            days -= absRound(yearsToDays(years));\n\t\n\t            // 30 days to a month\n\t            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n\t            months += absRound(days / 30);\n\t            days %= 30;\n\t\n\t            // 12 months -> 1 year\n\t            years += absRound(months / 12);\n\t            months %= 12;\n\t\n\t            data.days = days;\n\t            data.months = months;\n\t            data.years = years;\n\t        },\n\t\n\t        abs: function abs() {\n\t            this._milliseconds = Math.abs(this._milliseconds);\n\t            this._days = Math.abs(this._days);\n\t            this._months = Math.abs(this._months);\n\t\n\t            this._data.milliseconds = Math.abs(this._data.milliseconds);\n\t            this._data.seconds = Math.abs(this._data.seconds);\n\t            this._data.minutes = Math.abs(this._data.minutes);\n\t            this._data.hours = Math.abs(this._data.hours);\n\t            this._data.months = Math.abs(this._data.months);\n\t            this._data.years = Math.abs(this._data.years);\n\t\n\t            return this;\n\t        },\n\t\n\t        weeks: function weeks() {\n\t            return absRound(this.days() / 7);\n\t        },\n\t\n\t        valueOf: function valueOf() {\n\t            return this._milliseconds + this._days * 86400000 + this._months % 12 * 2592000000 + toInt(this._months / 12) * 31536000000;\n\t        },\n\t\n\t        humanize: function humanize(withSuffix) {\n\t            var output = relativeTime(this, !withSuffix, this.localeData());\n\t\n\t            if (withSuffix) {\n\t                output = this.localeData().pastFuture(+this, output);\n\t            }\n\t\n\t            return this.localeData().postformat(output);\n\t        },\n\t\n\t        add: function add(input, val) {\n\t            // supports only 2.0-style add(1, 's') or add(moment)\n\t            var dur = moment.duration(input, val);\n\t\n\t            this._milliseconds += dur._milliseconds;\n\t            this._days += dur._days;\n\t            this._months += dur._months;\n\t\n\t            this._bubble();\n\t\n\t            return this;\n\t        },\n\t\n\t        subtract: function subtract(input, val) {\n\t            var dur = moment.duration(input, val);\n\t\n\t            this._milliseconds -= dur._milliseconds;\n\t            this._days -= dur._days;\n\t            this._months -= dur._months;\n\t\n\t            this._bubble();\n\t\n\t            return this;\n\t        },\n\t\n\t        get: function get(units) {\n\t            units = normalizeUnits(units);\n\t            return this[units.toLowerCase() + 's']();\n\t        },\n\t\n\t        as: function as(units) {\n\t            var days, months;\n\t            units = normalizeUnits(units);\n\t\n\t            if (units === 'month' || units === 'year') {\n\t                days = this._days + this._milliseconds / 86400000;\n\t                months = this._months + daysToYears(days) * 12;\n\t                return units === 'month' ? months : months / 12;\n\t            } else {\n\t                // handle milliseconds separately because of floating point math errors (issue #1867)\n\t                days = this._days + Math.round(yearsToDays(this._months / 12));\n\t                switch (units) {\n\t                    case 'week':\n\t                        return days / 7 + this._milliseconds / 604800000;\n\t                    case 'day':\n\t                        return days + this._milliseconds / 86400000;\n\t                    case 'hour':\n\t                        return days * 24 + this._milliseconds / 3600000;\n\t                    case 'minute':\n\t                        return days * 24 * 60 + this._milliseconds / 60000;\n\t                    case 'second':\n\t                        return days * 24 * 60 * 60 + this._milliseconds / 1000;\n\t                    // Math.floor prevents floating point math errors here\n\t                    case 'millisecond':\n\t                        return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n\t                    default:\n\t                        throw new Error('Unknown unit ' + units);\n\t                }\n\t            }\n\t        },\n\t\n\t        lang: moment.fn.lang,\n\t        locale: moment.fn.locale,\n\t\n\t        toIsoString: deprecate('toIsoString() is deprecated. Please use toISOString() instead ' + '(notice the capitals)', function () {\n\t            return this.toISOString();\n\t        }),\n\t\n\t        toISOString: function toISOString() {\n\t            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t            var years = Math.abs(this.years()),\n\t                months = Math.abs(this.months()),\n\t                days = Math.abs(this.days()),\n\t                hours = Math.abs(this.hours()),\n\t                minutes = Math.abs(this.minutes()),\n\t                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\t\n\t            if (!this.asSeconds()) {\n\t                // this is the same as C#'s (Noda) and python (isodate)...\n\t                // but not other JS (goog.date)\n\t                return 'P0D';\n\t            }\n\t\n\t            return (this.asSeconds() < 0 ? '-' : '') + 'P' + (years ? years + 'Y' : '') + (months ? months + 'M' : '') + (days ? days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hours + 'H' : '') + (minutes ? minutes + 'M' : '') + (seconds ? seconds + 'S' : '');\n\t        },\n\t\n\t        localeData: function localeData() {\n\t            return this._locale;\n\t        },\n\t\n\t        toJSON: function toJSON() {\n\t            return this.toISOString();\n\t        }\n\t    });\n\t\n\t    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\t\n\t    function makeDurationGetter(name) {\n\t        moment.duration.fn[name] = function () {\n\t            return this._data[name];\n\t        };\n\t    }\n\t\n\t    for (i in unitMillisecondFactors) {\n\t        if (hasOwnProp(unitMillisecondFactors, i)) {\n\t            makeDurationGetter(i.toLowerCase());\n\t        }\n\t    }\n\t\n\t    moment.duration.fn.asMilliseconds = function () {\n\t        return this.as('ms');\n\t    };\n\t    moment.duration.fn.asSeconds = function () {\n\t        return this.as('s');\n\t    };\n\t    moment.duration.fn.asMinutes = function () {\n\t        return this.as('m');\n\t    };\n\t    moment.duration.fn.asHours = function () {\n\t        return this.as('h');\n\t    };\n\t    moment.duration.fn.asDays = function () {\n\t        return this.as('d');\n\t    };\n\t    moment.duration.fn.asWeeks = function () {\n\t        return this.as('weeks');\n\t    };\n\t    moment.duration.fn.asMonths = function () {\n\t        return this.as('M');\n\t    };\n\t    moment.duration.fn.asYears = function () {\n\t        return this.as('y');\n\t    };\n\t\n\t    /************************************\n\t        Default Locale\n\t    ************************************/\n\t\n\t    // Set default locale, other locale will inherit from English.\n\t    moment.locale('en', {\n\t        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t        ordinal: function ordinal(number) {\n\t            var b = number % 10,\n\t                output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n\t            return number + output;\n\t        }\n\t    });\n\t\n\t    /* EMBED_LOCALES */\n\t\n\t    /************************************\n\t        Exposing Moment\n\t    ************************************/\n\t\n\t    function makeGlobal(shouldDeprecate) {\n\t        /*global ender:false */\n\t        if (typeof ender !== 'undefined') {\n\t            return;\n\t        }\n\t        oldGlobalMoment = globalScope.moment;\n\t        if (shouldDeprecate) {\n\t            globalScope.moment = deprecate('Accessing Moment through the global scope is ' + 'deprecated, and will be removed in an upcoming ' + 'release.', moment);\n\t        } else {\n\t            globalScope.moment = moment;\n\t        }\n\t    }\n\t\n\t    // CommonJS module is defined\n\t    if (hasModule) {\n\t        module.exports = moment;\n\t    } else if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t            if (module.config && module.config() && module.config().noGlobal === true) {\n\t                // release the global variable\n\t                globalScope.moment = oldGlobalMoment;\n\t            }\n\t\n\t            return moment;\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t        makeGlobal(true);\n\t    } else {\n\t        makeGlobal();\n\t    }\n\t}).call(undefined);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(95)(module)))\n\n/***/ },\n\n/***/ 95:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (module) {\n\t\tif (!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function () {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** profile.24a89ea91979b213affb.js\n **/","var angular = require('angular');\nvar notification = require('client/notification');\nvar moment = require('momentWithLocale');\n\nvar profile = angular.module('profile', [\n  'ui.router', 'ngResource', 'global403Interceptor', 'ajoslin.promise-tracker', 'progress', 'focusOn', 'ngMessages'\n]);\n\nrequire('./profileField');\nrequire('./profilePhoto');\nrequire('./profilePassword');\nrequire('./profileAuthProviders');\nrequire('./dateValidator');\nrequire('./dateRangeValidator');\n\n\nprofile.factory('Me', ($resource) => {\n  return $resource('/users/me', {}, {\n    get: {\n      method: 'GET',\n      transformResponse: function(data, headers){\n        data = JSON.parse(data);\n        data.created = new Date(data.created);\n        return data;\n      }\n    }\n  });\n});\n\nprofile.factory('QuizResults', ($resource) => {\n  return $resource('/quiz/results/user/' + window.currentUser.id, {}, {\n    query: {\n      method: 'GET',\n      isArray: true,\n      transformResponse: function(data, headers){\n\n        data = JSON.parse(data);\n        data.forEach(function(result) {\n          result.created = new Date(result.created);\n        });\n        console.log(data);\n        return data;\n      }\n    }\n  });\n});\n\n\nprofile\n  .config(($locationProvider, $stateProvider) => {\n    $locationProvider.html5Mode(true);\n\n    $stateProvider\n      .state('root', {\n        abstract:    true,\n        resolve:     {\n          me: (Me) => Me.get()\n        },\n        templateUrl: \"/profile/templates/partials/root\",\n        controller:  'ProfileRootCtrl'\n      });\n\n    var states = {\n      'root.aboutme': {\n        url:         \"/\",\n        title:       'Публичный профиль',\n        templateUrl: \"/profile/templates/partials/aboutme\",\n        controller:  'ProfileAboutMeCtrl'\n      },\n      'root.account': {\n        url:         '/account',\n        title:       'Аккаунт',\n        templateUrl: \"/profile/templates/partials/account\",\n        controller:  'ProfileAccountCtrl'\n      },\n      'root.quiz': {\n        url:         '/quiz',\n        title:       'Тесты',\n        templateUrl: \"/profile/templates/partials/quiz\",\n        controller:  'ProfileQuizResultsCtrl',\n        resolve:     {\n          quizResults: (QuizResults) => QuizResults.query()\n        }\n      }\n    };\n\n    // enabled states depend on user, are set to global variable in index.jade\n    for(var key in states) {\n      if (~window.profileStatesEnabled.indexOf(key)) {\n        $stateProvider.state(key, states[key]);\n      }\n    }\n\n\n  })\n  .controller('ProfileRootCtrl', ($scope, $state, $timeout, $http, me, promiseTracker) => {\n\n    //window.me = me;\n    $scope.me = me;\n\n    $scope.loadingTracker = promiseTracker();\n\n    $scope.states = $state.get()\n      .filter((state) => {\n        return !state.abstract;\n      })\n      .map((state) => {\n        return {\n          title:     state.title,\n          name:      state.name,\n          url:       state.url\n        };\n      });\n\n\n  })\n  .controller('ProfileAboutMeCtrl', ($scope, me) => {\n\n    $scope.me = me;\n\n  })\n  .controller('ProfileQuizResultsCtrl', ($scope, quizResults) => {\n\n    $scope.quizResults = quizResults;\n\n  })\n  .controller('ProfileAccountCtrl', ($scope, $http, me, Me) => {\n\n    $scope.me = me;\n\n    $scope.remove = function() {\n      var isSure = confirm(`${me.displayName} (${me.email}) - удалить пользователя без возможности восстановления?`);\n\n      if (!isSure) return;\n\n      $http({\n        method:           'DELETE',\n        url:              '/users/me',\n        tracker:          $scope.loadingTracker,\n        headers:          {'Content-Type': undefined},\n        transformRequest: angular.identity,\n        data:             new FormData()\n      }).then((response) => {\n\n        alert('Пользователь удалён.');\n        window.location.href = '/';\n\n      }, (response) => {\n        new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n      });\n    };\n\n    $scope.removeProvider = function(providerName) {\n      var isSure = confirm(`${providerName} - удалить привязку?`);\n\n      if (!isSure) return;\n\n      $http({\n        method:  'POST',\n        url:     '/auth/disconnect/' + providerName,\n        tracker: this.loadingTracker\n      }).then( (response) => {\n        // refresh user\n        $scope.me = Me.get();\n      }, (response) => {\n        new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n      });\n\n    };\n\n  })\n  .filter('capitalize', () => function(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  })\n  .filter('quizDate', () => function(date) {\n    return moment(date).format('D MMMM YYYY в LT');\n  })\n  .filter('quizDuration', () => function(seconds) {\n    return moment.duration(seconds, 'seconds').humanize();\n  });\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/index.js\n **/","module.exports = angular;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 8\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\n\nangular.module('profile')\n  .directive('profileField', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profileField',\n      scope:       {\n        title:       '@fieldTitle',\n        name:        '@fieldName',\n        formatValue: '=?fieldFormatValue',\n        value:       '=fieldValue'\n      },\n      replace:     true,\n      transclude:  true,\n      link:        function(scope, element, attrs, noCtrl, transclude) {\n\n        if (!scope.formatValue) {\n          scope.formatValue = function(value) {\n            return value;\n          };\n        }\n\n\n        scope.loadingTracker = promiseTracker();\n\n        scope.edit = function() {\n          if (this.editing) return;\n          this.editing = true;\n          this.editingValue = this.value;\n        };\n\n        scope.submit = function() {\n          if (this.form.$invalid) return;\n\n          if (this.value == this.editingValue) {\n            this.editing = false;\n            this.editingValue = '';\n            return;\n          }\n\n          var formData = new FormData();\n          formData.append(this.name, this.editingValue);\n\n          $http({\n            method:           'PATCH',\n            url:              '/users/me',\n            tracker:          this.loadingTracker,\n            headers:          {'Content-Type': undefined},\n            transformRequest: angular.identity,\n            data:             formData\n          }).then((response) => {\n\n            if (this.name == 'displayName') {\n              new notification.Success(\"Изменение имени везде произойдёт после перезагрузки страницы.\", 'slow');\n            } else if (this.name == 'email') {\n              new notification.Warning(\"Требуется подтвердить смену email, проверьте почту.\", 'slow');\n            } else if (this.name == 'profileName') {\n              new notification.Success(\"Ваш профиль доступен по новому адресу, страница будет перезагружена\");\n              setTimeout(function() {\n                window.location.href = '/profile/' + this.editingValue + '/account';\n              }, 2000);\n            } else {\n              new notification.Success(\"Информация обновлена.\");\n            }\n\n            this.editing = false;\n            this.value = this.editingValue;\n            this.editingValue = '';\n\n          }, (response) => {\n            //console.log(response);\n            if (response.status == 400) {\n\n              new notification.Error(response.data.message);\n            } else if (response.status == 409) {\n              new notification.Error(response.data.message);\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n        };\n\n\n        scope.cancel = function() {\n          if (!this.editing) return;\n          // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n          // so we wait until the event bubbles and ends, and *then* cancel\n          $timeout(() => {\n            this.editing = false;\n            this.editingValue = \"\";\n          });\n        };\n\n        transclude(scope, function(clone, scope) {\n          element[0].querySelector('[control-transclude]').append(clone[0]);\n        });\n\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profileField.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\nvar thumb = require('client/image').thumb;\n\n\nangular.module('profile')\n  .directive('profilePhoto', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profilePhoto',\n      scope: {\n        photo: '='\n      },\n      replace: true,\n\n      link: function(scope, element, attrs, noCtrl) {\n        scope.loadingTracker = promiseTracker();\n        var self = this;\n\n        scope.changePhoto = function() {\n          var fileInput = document.createElement('input');\n          fileInput.type = 'file';\n          fileInput.accept = \"image/*\";\n\n          fileInput.onchange = function() {\n\n            var reader = new FileReader();\n            var file = fileInput.files[0];\n\n            reader.onload = function(event) {\n              var image = new Image();\n              image.onload = function() {\n                if (image.width != image.height || image.width < 160) {\n                  new notification.Error(\"Изображение должно быть квадратом, размер 160x160 или больше\");\n                } else {\n                  uploadPhoto(file);\n                }\n              };\n              image.src = event.target.result;\n            };\n            reader.readAsDataURL(file);\n\n          };\n          fileInput.click();\n        };\n\n\n        function uploadPhoto(file) {\n\n          var formData = new FormData();\n          formData.append(\"photo\", file);\n\n          $http({\n            method: 'PATCH',\n            url: '/users/me',\n            headers: {'Content-Type': undefined },\n            tracker: scope.loadingTracker,\n            transformRequest: angular.identity,\n            data: formData\n          }).then(function(response) {\n            scope.photo = response.data.photo;\n            new notification.Success(\"Изображение обновлено.\");\n          }, function(response) {\n            if (response.status == 400) {\n              new notification.Error(\"Неверный тип файла или изображение повреждено.\");\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n\n        }\n      }\n    };\n\n  })\n  .filter('thumb', () => thumb);\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profilePhoto.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\n\nangular.module('profile')\n  .directive('profilePassword', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profilePassword',\n      scope:       {\n        hasPassword: '='\n      },\n      replace:     true,\n      link:        function(scope, element, attrs, noCtrl, transclude) {\n\n        scope.password = '';\n        scope.passwordOld = '';\n\n        scope.loadingTracker = promiseTracker();\n\n        scope.edit = function() {\n          if (this.editing) return;\n          this.editing = true;\n\n          $timeout(function() {\n            var input = element[0].elements[scope.hasPassword ? 'passwordOld' : 'password'];\n            input.focus();\n          });\n        };\n\n        scope.submit = function() {\n          if (scope.form.$invalid) return;\n\n          var formData = new FormData();\n          formData.append(\"password\", this.password);\n          formData.append(\"passwordOld\", this.passwordOld);\n\n          $http({\n            method:           'PATCH',\n            url:              '/users/me',\n            tracker:          this.loadingTracker,\n            headers:          {'Content-Type': undefined},\n            transformRequest: angular.identity,\n            data:             formData\n          }).then((response) => {\n            new notification.Success(\"Пароль обновлён.\");\n            scope.editing = false;\n            // now have password for sure\n            scope.hasPassword = true;\n\n            // and clean password fields\n            scope.password = '';\n            scope.passwordOld = '';\n            scope.form.$setPristine();\n\n          }, (response) => {\n            if (response.status == 400) {\n              new notification.Error(response.data.message || response.data.errors.password);\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n        };\n\n\n        scope.cancel = function() {\n          if (!this.editing) return;\n          // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n          // so we wait until the event bubbles and ends, and *then* cancel\n          $timeout(() => {\n            this.editing = false;\n          });\n        };\n\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profilePassword.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\nangular.module('profile')\n  .directive('profileAuthProviders', function(promiseTracker, $http, authPopup, Me) {\n    return {\n      templateUrl: '/profile/templates/partials/profileAuthProviders',\n      replace: true,\n\n      link: function(scope) {\n\n        scope.connect = function(providerName) {\n          authPopup('/auth/connect/' + providerName, () => {\n            // refresh user\n            scope.me = Me.get();\n\n          }, () => {\n            console.error(\"fail\", arguments);\n          });\n        };\n\n        scope.connected = function(providerName) {\n          var connected = false;\n\n          if (!scope.me.providers) return false;\n          scope.me.providers.forEach(function(provider) {\n            if (provider.name == providerName) connected = true;\n          });\n\n          return connected;\n        };\n      }\n    };\n\n  }).service('authPopup', function() {\n\n    var authPopup;\n\n    return function(url, onSuccess, onFail) {\n\n        if (authPopup && !authPopup.closed) {\n          authPopup.close(); // close old popup if any\n        }\n        var width = 800, height = 600;\n        var top = (window.outerHeight - height) / 2;\n        var left = (window.outerWidth - width) / 2;\n\n        window.authModal = {\n          onAuthSuccess: onSuccess,\n          onAuthFailure: onFail\n        };\n\n        authPopup = window.open(url, 'authModal', 'width=' + width + ',height=' + height + ',scrollbars=0,top=' + top + ',left=' + left);\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profileAuthProviders.js\n **/","var angular = require('angular');\n\nangular.module('profile')\n  .directive('dateValidator', function() {\n    return {\n      require: 'ngModel',\n      link:    function(scope, element, attrs, ngModel) {\n\n        ngModel.$validators.date = function(modelValue, viewValue) {\n          var value = modelValue || viewValue;\n          if (!value) return true;\n          var split = value.split('.');\n          if (split.length != 3) return false;\n          var date = new Date(split[2], split[1]-1, split[0]);\n\n          if (split[2].length != 4) return false;\n\n          return date.getFullYear() == split[2] && date.getMonth() == split[1]-1 && date.getDate() == split[0];\n        };\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/dateValidator.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\nvar moment = require('momentWithLocale');\n\nangular.module('profile')\n  .directive('dateRangeValidator', function() {\n    return {\n      require: 'ngModel',\n      link:    function(scope, element, attrs, ngModel) {\n\n        var range = attrs.dateRangeValidator.split('-');\n        var from = range[0] ? moment(range[0], \"DD.MM.YYYY\").toDate() : new Date();\n        var to = range[1] ? moment(range[1], \"DD.MM.YYYY\").toDate() : new Date();\n\n        ngModel.$validators.dateRange = function(modelValue, viewValue) {\n          var value = modelValue || viewValue;\n          if (!value) return true;\n\n          var split = value.split('.');\n          if (split.length != 3) return false;\n          var date = new Date(split[2], split[1]-1, split[0]);\n\n          if (split[2].length != 4) return false;\n\n          return date >= from && date <= to;\n        };\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/dateRangeValidator.js\n **/","require('moment/locale/ru');\n\nmodule.exports = require('moment');\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/momentWithLocale.js\n **/","\nexports.thumb = function(url, width, height) {\n  // sometimes this may be called without url\n  if (!url) return url;\n\n  var pixelRatio = window.devicePixelRatio;\n\n  // return pixelRatio times larger image for retina\n  width *= pixelRatio;\n  height *= pixelRatio;\n\n  var modifier = (width <= 160 && height <= 160) ? 't' :\n    (width <= 320 && height <= 320) ? 'm' :\n      (width <= 640 && height <= 640) ? 'i' :\n        (width <= 1024 && height <= 1024) ? 'h' : '';\n\n  return url.slice(0, url.lastIndexOf('.')) + modifier + url.slice(url.lastIndexOf('.'));\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/image.js\n **/","// moment.js locale configuration\n// locale : russian (ru)\n// author : Viktorminator : https://github.com/Viktorminator\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = {\n            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return monthsShort[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ru', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сегодня в] LT',\n            nextDay: '[Завтра в] LT',\n            lastDay: '[Вчера в] LT',\n            nextWeek: function () {\n                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd [в] LT';\n                    } else {\n                        return '[В] dddd [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/moment/locale/ru.js\n **/","//! moment.js\n//! version : 2.9.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.9.0',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = (typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window)) ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenOffsetMs = /[\\+\\-]?\\d+/, // 1234567890123\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            x    : function () {\n                return this.valueOf();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],\n\n        updateInProgress = false;\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    function monthDiff(a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // thie is not supposed to happen\n            return hour;\n        }\n    }\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            moment.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||\n                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||\n                                           m._a[SECOND] !== 0 ||\n                                           m._a[MILLISECOND] !== 0)) ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/utcOffset equivalent to\n    // model.\n    function makeAs(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (moment.isMoment(input) || isDate(input) ?\n                    +input : +moment(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            moment.updateOffset(res, false);\n            return res;\n        } else {\n            return moment(input).local();\n        }\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n            // Lenient ordinal parsing accepts just a number in addition to\n            // number + (possibly) stuff coming from _ordinalParseLenient.\n            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName, format, strict) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n                this._longMonthsParse = [];\n                this._shortMonthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                mom = moment.utc([2000, i]);\n                if (strict && !this._longMonthsParse[i]) {\n                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n                }\n                if (!strict && !this._monthsParse[i]) {\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (!strict && this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LTS : 'h:mm:ss A',\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom, now) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n        _ordinalParse : /\\d{1,2}/,\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        firstDayOfWeek : function () {\n            return this._week.dow;\n        },\n\n        firstDayOfYear : function () {\n            return this._week.doy;\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'x':\n            return parseTokenOffsetMs;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function utcOffsetFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input, token, config._strict);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(\n                            input.match(/\\d{1,2}/)[0], 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._meridiem = input;\n            // config._isPm = config._locale.isPM(input);\n            break;\n        // HOUR\n        case 'h' : // fall through to hh\n        case 'hh' :\n            config._pf.bigHour = true;\n            /* falls through */\n        case 'H' : // fall through to HH\n        case 'HH' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX OFFSET (MILLISECONDS)\n        case 'x':\n            config._d = new Date(toInt(input));\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = utcOffsetFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day || normalizedInput.date,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR],\n                config._meridiem);\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        res = new Moment(config);\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    moment.isDate = isDate;\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d - ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                if ('function' === typeof Date.prototype.toISOString) {\n                    // native implementation is ~50x faster, use it when we can\n                    return this.toDate().toISOString();\n                } else {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.utcOffset(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.utcOffset(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.subtract(this._dateUtcOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (that.utcOffset() - this.utcOffset()) * 6e4,\n                anchor, diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month' || units === 'quarter') {\n                output = monthDiff(this, that);\n                if (units === 'quarter') {\n                    output = output / 3;\n                } else if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = this - that;\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're locat/utc/offset\n            // or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this, moment(now)));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.utcOffset() > this.clone().month(0).utcOffset() ||\n                this.utcOffset() > this.clone().month(5).utcOffset());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            if (units === undefined || units === 'millisecond') {\n                return this;\n            }\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return inputMs < +this.clone().startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return +this.clone().endOf(units) < inputMs;\n            }\n        },\n\n        isBetween: function (from, to, units) {\n            return this.isAfter(from, units) && this.isBefore(to, units);\n        },\n\n        isSame: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                inputMs = +moment(input);\n                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        zone : deprecate(\n                'moment().zone is deprecated, use moment().utcOffset instead. ' +\n                'https://github.com/moment/moment/issues/1779',\n                function (input, keepLocalTime) {\n                    if (input != null) {\n                        if (typeof input !== 'string') {\n                            input = -input;\n                        }\n\n                        this.utcOffset(input, keepLocalTime);\n\n                        return this;\n                    } else {\n                        return -this.utcOffset();\n                    }\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        utcOffset : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = utcOffsetFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateUtcOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.add(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(input - offset, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n\n                return this;\n            } else {\n                return this._isUTC ? offset : this._dateUtcOffset();\n            }\n        },\n\n        isLocal : function () {\n            return !this._isUTC;\n        },\n\n        isUtcOffset : function () {\n            return this._isUTC;\n        },\n\n        isUtc : function () {\n            return this._isUTC && this._offset === 0;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.utcOffset(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.utcOffset(utcOffsetFromString(this._i));\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).utcOffset();\n            }\n\n            return (this.utcOffset() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            var unit;\n            if (typeof units === 'object') {\n                for (unit in units) {\n                    this.set(unit, units[unit]);\n                }\n            }\n            else {\n                units = normalizeUnits(units);\n                if (typeof this[units] === 'function') {\n                    this[units](value);\n                }\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateUtcOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    // alias isUtc for dev-friendliness\n    moment.fn.isUTC = moment.fn.isUtc;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + Math.round(yearsToDays(this._months / 12));\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        toJSON : function () {\n            return this.toISOString();\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    /* EMBED_LOCALES */\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/moment/moment.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** (webpack)/buildin/module.js\n **/"],"sourceRoot":""}