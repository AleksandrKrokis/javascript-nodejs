{"version":3,"sources":["webpack:///coursesMaterials.3d9884ee051ca78e6578.js","webpack:///./handlers/courses/client/materials/index.js","webpack:///./client/xhr.js?6852*******","webpack:///./client/getCsrfCookie.js?d12a*******"],"names":["coursesMaterials","webpackJsonp_name_",0,"module","exports","__webpack_require__","init","initShouldNotifyMaterials","checkbox","document","querySelector","form","closest","onchange","request","xhr","method","url","action","body","id","elements","value","shouldNotifyMaterials","checked","addEventListener","event","notification","Success",155,"options","wrapEvent","name","e","CustomEvent","originalEvent","fail","reason","dispatchEvent","success","result","XMLHttpRequest","open","sync","csrfCookie","getCsrfCookie","skipCsrf","setRequestHeader","toString","call","JSON","stringify","noDocumentEvents","timeStart","Date","now","raw","normalStatuses","status","indexOf","responseText","contentType","getResponseHeader","match","json","parse","setTimeout","send","Error",156,"cookie"],"mappings":"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","file":"coursesMaterials.3d9884ee051ca78e6578.js","sourcesContent":["var coursesMaterials =\nwebpackJsonp_name_([16],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar xhr = __webpack_require__(155);\n\tvar notification = __webpack_require__(147);\n\t\n\tfunction init() {\n\t\n\t  initShouldNotifyMaterials();\n\t}\n\t\n\tfunction initShouldNotifyMaterials() {\n\t\n\t  var checkbox = document.querySelector('[data-should-notify-materials]');\n\t  var form = checkbox.closest('form');\n\t\n\t  checkbox.onchange = function () {\n\t\n\t    var request = xhr({\n\t      method: 'PATCH',\n\t      url: form.action,\n\t      body: {\n\t        id: form.elements.id.value,\n\t        shouldNotifyMaterials: form.elements.shouldNotifyMaterials.checked\n\t      }\n\t    });\n\t\n\t    request.addEventListener('success', function (event) {\n\t      new notification.Success(\"Настройка сохранена.\");\n\t    });\n\t  };\n\t}\n\t\n\tinit();\n\n/***/ },\n\n/***/ 155:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(147);\n\tvar getCsrfCookie = __webpack_require__(156);\n\t// Wrapper about XHR\n\t// # Global Events\n\t// triggers document.loadstart/loadend on communication start/end\n\t//    --> unless options.noGlobalEvents is set\n\t//\n\t// # Events\n\t// triggers fail/success on load end:\n\t//    --> by default status=200 is ok, the others are failures\n\t//    --> options.normalStatuses = [201,409] allow given statuses\n\t//    --> fail event has .reason field\n\t//    --> success event has .result field\n\t//\n\t// # JSON\n\t//    --> send(object) calls JSON.stringify\n\t//    --> adds Accept: json (we want json) by default, unless options.raw\n\t// if options.json or server returned json content type\n\t//    --> autoparse json\n\t//    --> fail if error\n\t//\n\t// # CSRF\n\t//    --> requests sends header X-XSRF-TOKEN from cookie\n\t\n\tfunction xhr(options) {\n\t\n\t  var request = new XMLHttpRequest();\n\t\n\t  var method = options.method || 'GET';\n\t\n\t  var body = options.body;\n\t  var url = options.url;\n\t\n\t  request.open(method, url, options.sync ? false : true);\n\t\n\t  request.method = method;\n\t\n\t  // token/header names same as angular $http for easier interop\n\t  var csrfCookie = getCsrfCookie();\n\t  if (csrfCookie && !options.skipCsrf) {\n\t    request.setRequestHeader(\"X-XSRF-TOKEN\", csrfCookie);\n\t  }\n\t\n\t  if (({}).toString.call(body) == '[object Object]') {\n\t    // must be OPENed to setRequestHeader\n\t    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n\t    body = JSON.stringify(body);\n\t  }\n\t\n\t  if (!options.noDocumentEvents) {\n\t    request.addEventListener('loadstart', function (event) {\n\t      request.timeStart = Date.now();\n\t      var e = wrapEvent('xhrstart', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('loadend', function (event) {\n\t      var e = wrapEvent('xhrend', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('success', function (event) {\n\t      var e = wrapEvent('xhrsuccess', event);\n\t      e.result = event.result;\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('fail', function (event) {\n\t      var e = wrapEvent('xhrfail', event);\n\t      e.reason = event.reason;\n\t      document.dispatchEvent(e);\n\t    });\n\t  }\n\t\n\t  if (!options.raw) {\n\t    // means we want json\n\t    request.setRequestHeader(\"Accept\", \"application/json\");\n\t  }\n\t\n\t  request.setRequestHeader('X-Requested-With', \"XMLHttpRequest\");\n\t\n\t  var normalStatuses = options.normalStatuses || [200];\n\t\n\t  function wrapEvent(name, e) {\n\t    var event = new CustomEvent(name);\n\t    event.originalEvent = e;\n\t    return event;\n\t  }\n\t\n\t  function fail(reason, originalEvent) {\n\t    var e = wrapEvent(\"fail\", originalEvent);\n\t    e.reason = reason;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  function success(result, originalEvent) {\n\t    var e = wrapEvent(\"success\", originalEvent);\n\t    e.result = result;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  request.addEventListener(\"error\", function (e) {\n\t    fail(\"Ошибка связи с сервером.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"timeout\", function (e) {\n\t    fail(\"Превышено максимально допустимое время ожидания ответа от сервера.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"abort\", function (e) {\n\t    fail(\"Запрос был прерван.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"load\", function (e) {\n\t    if (!request.status) {\n\t      // does that ever happen?\n\t      fail(\"Не получен ответ от сервера.\", e);\n\t      return;\n\t    }\n\t\n\t    if (normalStatuses.indexOf(request.status) == -1) {\n\t      fail(\"Ошибка на стороне сервера (код \" + request.status + \"), попытайтесь позднее.\", e);\n\t      return;\n\t    }\n\t\n\t    var result = request.responseText;\n\t    var contentType = request.getResponseHeader(\"Content-Type\");\n\t    if (contentType.match(/^application\\/json/) || options.json) {\n\t      // autoparse json if WANT or RECEIVED json\n\t      try {\n\t        result = JSON.parse(result);\n\t      } catch (e) {\n\t        fail(\"Некорректный формат ответа от сервера.\", e);\n\t        return;\n\t      }\n\t    }\n\t\n\t    success(result, e);\n\t  });\n\t\n\t  // defer to let other handlers be assigned\n\t  setTimeout(function () {\n\t    request.send(body);\n\t  }, 0);\n\t\n\t  return request;\n\t}\n\t\n\tdocument.addEventListener('xhrfail', function (event) {\n\t  new notification.Error(event.reason);\n\t});\n\t\n\tmodule.exports = xhr;\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function () {\n\t  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n\t  return csrfCookie ? csrfCookie[1] : null;\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** coursesMaterials.3d9884ee051ca78e6578.js\n **/","var xhr = require('client/xhr');\nvar notification = require('client/notification');\n\nfunction init() {\n\n  initShouldNotifyMaterials();\n\n}\n\n\n\n\nfunction initShouldNotifyMaterials() {\n\n  var checkbox = document.querySelector('[data-should-notify-materials]');\n  var form = checkbox.closest('form');\n\n  checkbox.onchange = function() {\n\n    var request = xhr({\n      method: 'PATCH',\n      url:    form.action,\n      body:   {\n        id: form.elements.id.value,\n        shouldNotifyMaterials: form.elements.shouldNotifyMaterials.checked\n      }\n    });\n\n    request.addEventListener('success', function(event) {\n      new notification.Success(\"Настройка сохранена.\");\n    });\n  };\n\n}\n\ninit();\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/courses/client/materials/index.js\n **/","var notification = require('client/notification');\nvar getCsrfCookie = require('client/getCsrfCookie');\n// Wrapper about XHR\n// # Global Events\n// triggers document.loadstart/loadend on communication start/end\n//    --> unless options.noGlobalEvents is set\n//\n// # Events\n// triggers fail/success on load end:\n//    --> by default status=200 is ok, the others are failures\n//    --> options.normalStatuses = [201,409] allow given statuses\n//    --> fail event has .reason field\n//    --> success event has .result field\n//\n// # JSON\n//    --> send(object) calls JSON.stringify\n//    --> adds Accept: json (we want json) by default, unless options.raw\n// if options.json or server returned json content type\n//    --> autoparse json\n//    --> fail if error\n//\n// # CSRF\n//    --> requests sends header X-XSRF-TOKEN from cookie\n\nfunction xhr(options) {\n\n  var request = new XMLHttpRequest();\n\n  var method = options.method || 'GET';\n\n  var body = options.body;\n  var url = options.url;\n\n  request.open(method, url, options.sync ? false : true);\n\n  request.method = method;\n\n  // token/header names same as angular $http for easier interop\n  var csrfCookie = getCsrfCookie();\n  if (csrfCookie && !options.skipCsrf) {\n    request.setRequestHeader(\"X-XSRF-TOKEN\", csrfCookie);\n  }\n\n  if ({}.toString.call(body) == '[object Object]') {\n    // must be OPENed to setRequestHeader\n    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    body = JSON.stringify(body);\n  }\n\n  if (!options.noDocumentEvents) {\n    request.addEventListener('loadstart', event => {\n      request.timeStart = Date.now();\n      var e = wrapEvent('xhrstart', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('loadend', event => {\n      var e = wrapEvent('xhrend', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('success', event => {\n      var e = wrapEvent('xhrsuccess', event);\n      e.result = event.result;\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('fail', event => {\n      var e = wrapEvent('xhrfail', event);\n      e.reason = event.reason;\n      document.dispatchEvent(e);\n    });\n  }\n\n  if (!options.raw) { // means we want json\n    request.setRequestHeader(\"Accept\", \"application/json\");\n  }\n\n  request.setRequestHeader('X-Requested-With', \"XMLHttpRequest\");\n\n  var normalStatuses = options.normalStatuses || [200];\n\n  function wrapEvent(name, e) {\n    var event = new CustomEvent(name);\n    event.originalEvent = e;\n    return event;\n  }\n\n  function fail(reason, originalEvent) {\n    var e = wrapEvent(\"fail\", originalEvent);\n    e.reason = reason;\n    request.dispatchEvent(e);\n  }\n\n  function success(result, originalEvent) {\n    var e = wrapEvent(\"success\", originalEvent);\n    e.result = result;\n    request.dispatchEvent(e);\n  }\n\n  request.addEventListener(\"error\", e => {\n    fail(\"Ошибка связи с сервером.\", e);\n  });\n\n  request.addEventListener(\"timeout\", e => {\n    fail(\"Превышено максимально допустимое время ожидания ответа от сервера.\", e);\n  });\n\n  request.addEventListener(\"abort\", e => {\n    fail(\"Запрос был прерван.\", e);\n  });\n\n  request.addEventListener(\"load\", e => {\n    if (!request.status) { // does that ever happen?\n      fail(\"Не получен ответ от сервера.\", e);\n      return;\n    }\n\n    if (normalStatuses.indexOf(request.status) == -1) {\n      fail(\"Ошибка на стороне сервера (код \" + request.status + \"), попытайтесь позднее.\", e);\n      return;\n    }\n\n    var result = request.responseText;\n    var contentType = request.getResponseHeader(\"Content-Type\");\n    if (contentType.match(/^application\\/json/) || options.json) { // autoparse json if WANT or RECEIVED json\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        fail(\"Некорректный формат ответа от сервера.\", e);\n        return;\n      }\n    }\n\n    success(result, e);\n  });\n\n  // defer to let other handlers be assigned\n  setTimeout(function() {\n    request.send(body);\n  }, 0);\n\n  return request;\n\n}\n\n\ndocument.addEventListener('xhrfail', function(event) {\n  new notification.Error(event.reason);\n});\n\n\nmodule.exports = xhr;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/xhr.js\n **/","module.exports = function() {\n  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n  return csrfCookie ? csrfCookie[1] : null;\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/getCsrfCookie.js\n **/"],"sourceRoot":""}