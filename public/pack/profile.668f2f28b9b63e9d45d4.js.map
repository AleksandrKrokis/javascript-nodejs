{"version":3,"sources":["webpack:///profile.668f2f28b9b63e9d45d4.js","webpack:///./handlers/profile/client/index.js","webpack:///external \"angular\"","webpack:///./handlers/profile/client/profileField.js","webpack:///./handlers/profile/client/profilePhoto.js","webpack:///./handlers/profile/client/profilePassword.js","webpack:///./handlers/profile/client/profileAuthProviders.js","webpack:///./handlers/profile/client/dateValidator.js","webpack:///./handlers/profile/client/dateRangeValidator.js","webpack:///./modules/momentWithLocale.js","webpack:///./client/image.js?8da9**","webpack:///(webpack)/buildin/module.js","webpack:///./~/moment/locale/ru.js","webpack:///./~/moment/moment.js"],"names":["profile","webpackJsonp_name_","module","exports","__webpack_require__","angular","notification","moment","factory","$resource","get","method","transformResponse","data","JSON","parse","created","Date","window","currentUser","id","query","isArray","forEach","result","config","$locationProvider","$stateProvider","html5Mode","state","abstract","resolve","me","Me","templateUrl","controller","states","root.aboutme","url","title","root.account","root.quiz","quizResults","QuizResults","key","profileStatesEnabled","indexOf","$scope","$state","$timeout","$http","promiseTracker","loadingTracker","filter","map","name","remove","isSure","confirm","displayName","email","tracker","headers","Content-Type","undefined","transformRequest","identity","FormData","then","alert","location","href","response","Error","status","removeProvider","providerName","this","str","toUpperCase","slice","date","format","seconds","duration","humanize",1,24,"directive","scope","formatValue","value","replace","transclude","link","element","attrs","noCtrl","edit","editing","editingValue","submit","_this","form","$invalid","formData","append","Success","Warning","newProfileName","setTimeout","message","cancel","_this2","clone","querySelector",25,"thumb","photo","uploadPhoto","file","changePhoto","fileInput","document","createElement","type","accept","onchange","reader","FileReader","files","onload","event","image","Image","width","height","src","target","readAsDataURL","click",26,"hasPassword","password","passwordOld","input","elements","focus","$setPristine","errors",27,"authPopup","connect","arguments","connected","providers","provider","service","onSuccess","onFail","closed","close","top","outerHeight","left","outerWidth","authModal","onAuthSuccess","onAuthFailure","open",28,"require","ngModel","$validators","modelValue","viewValue","split","length","getFullYear","getMonth","getDate",29,"range","dateRangeValidator","from","toDate","to","dateRange",30,54,"pixelRatio","devicePixelRatio","modifier","lastIndexOf",95,"webpackPolyfill","deprecate","paths","children",96,"global","plural","word","num","forms","relativeTimeWithPlural","number","withoutSuffix","mm","hh","dd","MM","yy","monthsCaseReplace","m","months","nominative","accusative","nounCase","test","month","monthsShortCaseReplace","monthsShort","weekdaysCaseReplace","weekdays","day","ru","defineLocale","weekdaysShort","weekdaysMin","monthsParse","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","now","week","sameElse","relativeTime","future","past","s","h","d","M","y","meridiemParse","isPM","meridiem","hour","ordinalParse","ordinal","period","dow","doy",97,"hooks__hooks","hookCallback","apply","setHookCallback","callback","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","Object","prototype","toString","call","isDate","arr","fn","i","res","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","utc__createUTC","locale","strict","createLocalOrUTC","utc","valid__isValid","_isValid","isNaN","_d","getTime","_pf","_strict","bigHour","valid__createInvalid","flags","NaN","copyConfig","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","updateInProgress","updateOffset","isMoment","obj","toInt","argumentForCoercion","coercedNumber","isFinite","Math","floor","ceil","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","Locale","normalizeLocale","toLowerCase","chooseLocale","names","j","next","loadLocale","join","oldLocale","locales","globalLocale","_abbr","e","code","locales__getSetGlobalLocale","values","locales__getLocale","abbr","set","addUnitAlias","unit","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","makeGetSet","keepTime","get_set__set","get_set__get","mom","getSet","zeroFill","targetLength","forceSign","output","sign","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","Function","formatMoment","isValid","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","RegExp","unescapeFormat","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","UTC","getUTCDate","localeMonths","_months","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParse","_longMonthsParse","_shortMonthsParse","setMonth","dayOfMonth","getSetMonth","getDaysInMonth","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","warn","msg","suppressDeprecationWarnings","console","firstTime","deprecateSimple","deprecations","configFromISO","l","string","from_string__isoRegex","exec","isoDates","isoTimes","matchOffset","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","createDate","ms","setFullYear","createUTCDate","setUTCFullYear","daysInYear","isLeapYear","getIsLeapYear","weekOfYear","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","end","daysToDayOfWeek","local__createLocal","add","dayOfYear","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","dayOfYearFromWeeks","weekday","daysToAdd","getUTCDay","getSetDayOfYear","round","startOf","defaults","c","currentDateArray","_useUTC","getUTCFullYear","getUTCMonth","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","GG","W","E","gg","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","substr","meridiemFixWrap","_meridiem","isPm","meridiemHour","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","preparse","configFromInput","parseInt","isUTC","pickBy","moments","args","max","Duration","years","quarters","quarter","weeks","days","hours","minutes","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","offset","separator","utcOffset","offsetFromString","matches","chunk","parts","chunkOffset","cloneWithOffset","model","diff","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","localAdjust","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","create__isoRegex","parseIso","momentsDifference","inp","parseFloat","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","dur","tmp","isAdding","calendar__calendar","time","sod","inputMs","endOf","isBetween","isSame","absFloor","asFloat","delta","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","moment_format__toISOString","toISOString","inputString","defaultFormat","postformat","fromNow","newLocaleData","isoWeekday","to_type__valueOf","unix","moment_valid__isValid","parsingFlags","invalidAt","addWeekYearFormatToken","getter","weeksInYear","getSetWeekYear","getSetISOWeekYear","getISOWeeksInYear","getWeeksInYear","weekInfo","getSetQuarter","parseWeekday","weekdaysParse","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","localeWeekdaysParse","weekdayName","_weekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","lowercase","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","millisecond__milliseconds","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","locale_calendar__calendar","_calendar","_longDateFormat","_invalidDate","_ordinal","preParsePostFormat","relative__relativeTime","isFuture","_relativeTime","pastFuture","set__set","_ordinalParseLenient","_ordinalParse","source","lists__get","index","field","setter","list","count","out","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","bubble","daysToYears","yearsToDays","as","as__valueOf","makeAs","alias","get__get","makeGetter","substituteTimeAgo","humanize__relativeTime","posNegDuration","thresholds","humanize__getSetRelativeTimeThreshold","threshold","limit","withSuffix","iso_string__toISOString","Y","iso_string__abs","D","total","asSeconds","match1","match2","match3","match4","match6","match1to2","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","getSetDayOfMonth","invalidWeekday","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","defaultLocaleMeridiemParse","getSetHour","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","toJSON","isoWeek","isoWeeks","isoWeeksInYear","isDST","isDSTShifted","zoneAbbr","zoneName","dates","zone","momentPrototype","defaultCalendar","defaultLongDateFormat","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","prototype__proto","firstDayOfYear","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","get__milliseconds","duration_prototype__proto","toIsoString","version","invalid","relativeTimeThreshold","_moment"],"mappings":"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","file":"profile.668f2f28b9b63e9d45d4.js","sourcesContent":["var profile =\nwebpackJsonp_name_([8],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\tvar notification = __webpack_require__(23);\n\tvar moment = __webpack_require__(30);\n\t\n\tvar profile = angular.module('profile', ['ui.router', 'ngResource', 'global403Interceptor', 'ajoslin.promise-tracker', 'progress', 'focusOn', 'ngMessages']);\n\t\n\t__webpack_require__(24);\n\t__webpack_require__(25);\n\t__webpack_require__(26);\n\t__webpack_require__(27);\n\t__webpack_require__(28);\n\t__webpack_require__(29);\n\t\n\tprofile.factory('Me', [\"$resource\", function ($resource) {\n\t  return $resource('/users/me', {}, {\n\t    get: {\n\t      method: 'GET',\n\t      transformResponse: function transformResponse(data, headers) {\n\t        data = JSON.parse(data);\n\t        data.created = new Date(data.created);\n\t        return data;\n\t      }\n\t    }\n\t  });\n\t}]);\n\t\n\tprofile.factory('QuizResults', [\"$resource\", function ($resource) {\n\t  return $resource('/quiz/results/user/' + window.currentUser.id, {}, {\n\t    query: {\n\t      method: 'GET',\n\t      isArray: true,\n\t      transformResponse: function transformResponse(data, headers) {\n\t\n\t        data = JSON.parse(data);\n\t        data.forEach(function (result) {\n\t          result.created = new Date(result.created);\n\t        });\n\t        console.log(data);\n\t        return data;\n\t      }\n\t    }\n\t  });\n\t}]);\n\t\n\tprofile.config([\"$locationProvider\", \"$stateProvider\", function ($locationProvider, $stateProvider) {\n\t  $locationProvider.html5Mode(true);\n\t\n\t  $stateProvider.state('root', {\n\t    abstract: true,\n\t    resolve: {\n\t      me: [\"Me\", function me(Me) {\n\t        return Me.get();\n\t      }]\n\t    },\n\t    templateUrl: '/profile/templates/partials/root',\n\t    controller: 'ProfileRootCtrl'\n\t  });\n\t\n\t  var states = {\n\t    'root.aboutme': {\n\t      url: '/',\n\t      title: 'Публичный профиль',\n\t      templateUrl: '/profile/templates/partials/aboutme',\n\t      controller: 'ProfileAboutMeCtrl'\n\t    },\n\t    'root.account': {\n\t      url: '/account',\n\t      title: 'Аккаунт',\n\t      templateUrl: '/profile/templates/partials/account',\n\t      controller: 'ProfileAccountCtrl'\n\t    },\n\t    'root.quiz': {\n\t      url: '/quiz',\n\t      title: 'Тесты',\n\t      templateUrl: '/profile/templates/partials/quiz',\n\t      controller: 'ProfileQuizResultsCtrl',\n\t      resolve: {\n\t        quizResults: function quizResults(QuizResults) {\n\t          return QuizResults.query();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  // enabled states depend on user, are set to global variable in index.jade\n\t  for (var key in states) {\n\t    if (~window.profileStatesEnabled.indexOf(key)) {\n\t      $stateProvider.state(key, states[key]);\n\t    }\n\t  }\n\t}]).controller('ProfileRootCtrl', [\"$scope\", \"$state\", \"$timeout\", \"$http\", \"me\", \"promiseTracker\", function ($scope, $state, $timeout, $http, me, promiseTracker) {\n\t\n\t  //window.me = me;\n\t  $scope.me = me;\n\t\n\t  $scope.loadingTracker = promiseTracker();\n\t\n\t  $scope.states = $state.get().filter(function (state) {\n\t    return !state.abstract;\n\t  }).map(function (state) {\n\t    return {\n\t      title: state.title,\n\t      name: state.name,\n\t      url: state.url\n\t    };\n\t  });\n\t}]).controller('ProfileAboutMeCtrl', [\"$scope\", \"me\", function ($scope, me) {\n\t\n\t  $scope.me = me;\n\t}]).controller('ProfileQuizResultsCtrl', [\"$scope\", \"quizResults\", function ($scope, quizResults) {\n\t\n\t  $scope.quizResults = quizResults;\n\t}]).controller('ProfileAccountCtrl', [\"$scope\", \"$http\", \"me\", \"Me\", function ($scope, $http, me, Me) {\n\t\n\t  $scope.me = me;\n\t\n\t  $scope.remove = function () {\n\t    var isSure = confirm('' + me.displayName + ' (' + me.email + ') - удалить пользователя без возможности восстановления?');\n\t\n\t    if (!isSure) return;\n\t\n\t    $http({\n\t      method: 'DELETE',\n\t      url: '/users/me',\n\t      tracker: $scope.loadingTracker,\n\t      headers: { 'Content-Type': undefined },\n\t      transformRequest: angular.identity,\n\t      data: new FormData()\n\t    }).then(function (response) {\n\t\n\t      alert('Пользователь удалён.');\n\t      window.location.href = '/';\n\t    }, function (response) {\n\t      new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t    });\n\t  };\n\t\n\t  $scope.removeProvider = function (providerName) {\n\t    var isSure = confirm('' + providerName + ' - удалить привязку?');\n\t\n\t    if (!isSure) return;\n\t\n\t    $http({\n\t      method: 'POST',\n\t      url: '/auth/disconnect/' + providerName,\n\t      tracker: this.loadingTracker\n\t    }).then(function (response) {\n\t      // refresh user\n\t      $scope.me = Me.get();\n\t    }, function (response) {\n\t      new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t    });\n\t  };\n\t}]).filter('capitalize', function () {\n\t  return function (str) {\n\t    return str[0].toUpperCase() + str.slice(1);\n\t  };\n\t}).filter('quizDate', function () {\n\t  return function (date) {\n\t    return moment(date).format('D MMMM YYYY в LT');\n\t  };\n\t}).filter('quizDuration', function () {\n\t  return function (seconds) {\n\t    return moment.duration(seconds, 'seconds').humanize();\n\t  };\n\t});\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = angular;\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('profileField', [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profileField',\n\t    scope: {\n\t      title: '@fieldTitle',\n\t      name: '@fieldName',\n\t      formatValue: '=?fieldFormatValue',\n\t      value: '=fieldValue'\n\t    },\n\t    replace: true,\n\t    transclude: true,\n\t    link: function link(scope, element, attrs, noCtrl, transclude) {\n\t\n\t      if (!scope.formatValue) {\n\t        scope.formatValue = function (value) {\n\t          return value;\n\t        };\n\t      }\n\t\n\t      scope.loadingTracker = promiseTracker();\n\t\n\t      scope.edit = function () {\n\t        if (this.editing) return;\n\t        this.editing = true;\n\t        this.editingValue = this.value;\n\t      };\n\t\n\t      scope.submit = function () {\n\t        var _this = this;\n\t\n\t        if (this.form.$invalid) return;\n\t\n\t        if (this.value == this.editingValue) {\n\t          this.editing = false;\n\t          this.editingValue = '';\n\t          return;\n\t        }\n\t\n\t        var formData = new FormData();\n\t        formData.append(this.name, this.editingValue);\n\t\n\t        $http({\n\t          method: 'PATCH',\n\t          url: '/users/me',\n\t          tracker: this.loadingTracker,\n\t          headers: { 'Content-Type': undefined },\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t\n\t          if (_this.name == 'displayName') {\n\t            new notification.Success('Изменение имени везде произойдёт после перезагрузки страницы.', 'slow');\n\t          } else if (_this.name == 'email') {\n\t            new notification.Warning('Требуется подтвердить смену email, проверьте почту.', 'slow');\n\t          } else if (_this.name == 'profileName') {\n\t            new notification.Success('Ваш профиль доступен по новому адресу, страница будет перезагружена');\n\t            var newProfileName = _this.editingValue; // remember now, (editing field will be reset)\n\t            setTimeout(function () {\n\t              window.location.href = '/profile/' + newProfileName + '/account';\n\t            }, 2000);\n\t          } else {\n\t            new notification.Success('Информация обновлена.');\n\t          }\n\t\n\t          _this.editing = false;\n\t          _this.value = _this.editingValue;\n\t          _this.editingValue = '';\n\t        }, function (response) {\n\t          //console.log(response);\n\t          if (response.status == 400) {\n\t\n\t            new notification.Error(response.data.message);\n\t          } else if (response.status == 409) {\n\t            new notification.Error(response.data.message);\n\t          } else {\n\t            new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t          }\n\t        });\n\t      };\n\t\n\t      scope.cancel = function () {\n\t        var _this2 = this;\n\t\n\t        if (!this.editing) return;\n\t        // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n\t        // so we wait until the event bubbles and ends, and *then* cancel\n\t        $timeout(function () {\n\t          _this2.editing = false;\n\t          _this2.editingValue = '';\n\t        });\n\t      };\n\t\n\t      transclude(scope, function (clone, scope) {\n\t        element[0].querySelector('[control-transclude]').append(clone[0]);\n\t      });\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\tvar thumb = __webpack_require__(54).thumb;\n\t\n\tangular.module('profile').directive('profilePhoto', [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profilePhoto',\n\t    scope: {\n\t      photo: '='\n\t    },\n\t    replace: true,\n\t\n\t    link: function link(scope, element, attrs, noCtrl) {\n\t      scope.loadingTracker = promiseTracker();\n\t      var self = this;\n\t\n\t      scope.changePhoto = function () {\n\t        var fileInput = document.createElement('input');\n\t        fileInput.type = 'file';\n\t        fileInput.accept = 'image/*';\n\t\n\t        fileInput.onchange = function () {\n\t\n\t          var reader = new FileReader();\n\t          var file = fileInput.files[0];\n\t\n\t          reader.onload = function (event) {\n\t            var image = new Image();\n\t            image.onload = function () {\n\t              if (image.width != image.height || image.width < 160) {\n\t                new notification.Error('Изображение должно быть квадратом, размер 160x160 или больше');\n\t              } else {\n\t                uploadPhoto(file);\n\t              }\n\t            };\n\t            image.src = event.target.result;\n\t          };\n\t          reader.readAsDataURL(file);\n\t        };\n\t        fileInput.click();\n\t      };\n\t\n\t      function uploadPhoto(file) {\n\t\n\t        var formData = new FormData();\n\t        formData.append('photo', file);\n\t\n\t        $http({\n\t          method: 'PATCH',\n\t          url: '/users/me',\n\t          headers: { 'Content-Type': undefined },\n\t          tracker: scope.loadingTracker,\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t          scope.photo = response.data.photo;\n\t          new notification.Success('Изображение обновлено.');\n\t        }, function (response) {\n\t          if (response.status == 400) {\n\t            new notification.Error('Неверный тип файла или изображение повреждено.');\n\t          } else {\n\t            new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  };\n\t}]).filter('thumb', function () {\n\t  return thumb;\n\t});\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('profilePassword', [\"promiseTracker\", \"$http\", \"$timeout\", function (promiseTracker, $http, $timeout) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profilePassword',\n\t    scope: {\n\t      hasPassword: '='\n\t    },\n\t    replace: true,\n\t    link: function link(scope, element, attrs, noCtrl, transclude) {\n\t\n\t      scope.password = '';\n\t      scope.passwordOld = '';\n\t\n\t      scope.loadingTracker = promiseTracker();\n\t\n\t      scope.edit = function () {\n\t        if (this.editing) return;\n\t        this.editing = true;\n\t\n\t        $timeout(function () {\n\t          var input = element[0].elements[scope.hasPassword ? 'passwordOld' : 'password'];\n\t          input.focus();\n\t        });\n\t      };\n\t\n\t      scope.submit = function () {\n\t        if (scope.form.$invalid) return;\n\t\n\t        var formData = new FormData();\n\t        formData.append('password', this.password);\n\t        formData.append('passwordOld', this.passwordOld);\n\t\n\t        $http({\n\t          method: 'PATCH',\n\t          url: '/users/me',\n\t          tracker: this.loadingTracker,\n\t          headers: { 'Content-Type': undefined },\n\t          transformRequest: angular.identity,\n\t          data: formData\n\t        }).then(function (response) {\n\t          new notification.Success('Пароль обновлён.');\n\t          scope.editing = false;\n\t          // now have password for sure\n\t          scope.hasPassword = true;\n\t\n\t          // and clean password fields\n\t          scope.password = '';\n\t          scope.passwordOld = '';\n\t          scope.form.$setPristine();\n\t        }, function (response) {\n\t          if (response.status == 400) {\n\t            new notification.Error(response.data.message || response.data.errors.password);\n\t          } else {\n\t            new notification.Error('Ошибка загрузки, статус ' + response.status);\n\t          }\n\t        });\n\t      };\n\t\n\t      scope.cancel = function () {\n\t        var _this = this;\n\t\n\t        if (!this.editing) return;\n\t        // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n\t        // so we wait until the event bubbles and ends, and *then* cancel\n\t        $timeout(function () {\n\t          _this.editing = false;\n\t        });\n\t      };\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('profileAuthProviders', [\"promiseTracker\", \"$http\", \"authPopup\", \"Me\", function (promiseTracker, $http, authPopup, Me) {\n\t  return {\n\t    templateUrl: '/profile/templates/partials/profileAuthProviders',\n\t    replace: true,\n\t\n\t    link: function link(scope) {\n\t\n\t      scope.connect = function (providerName) {\n\t        var _arguments = arguments;\n\t\n\t        authPopup('/auth/connect/' + providerName, function () {\n\t          // refresh user\n\t          scope.me = Me.get();\n\t        }, function () {\n\t          console.error('fail', _arguments);\n\t        });\n\t      };\n\t\n\t      scope.connected = function (providerName) {\n\t        var connected = false;\n\t\n\t        if (!scope.me.providers) return false;\n\t        scope.me.providers.forEach(function (provider) {\n\t          if (provider.name == providerName) connected = true;\n\t        });\n\t\n\t        return connected;\n\t      };\n\t    }\n\t  };\n\t}]).service('authPopup', function () {\n\t\n\t  var authPopup;\n\t\n\t  return function (url, onSuccess, onFail) {\n\t\n\t    if (authPopup && !authPopup.closed) {\n\t      authPopup.close(); // close old popup if any\n\t    }\n\t    var width = 800,\n\t        height = 600;\n\t    var top = (window.outerHeight - height) / 2;\n\t    var left = (window.outerWidth - width) / 2;\n\t\n\t    window.authModal = {\n\t      onAuthSuccess: onSuccess,\n\t      onAuthFailure: onFail\n\t    };\n\t\n\t    authPopup = window.open(url, 'authModal', 'width=' + width + ',height=' + height + ',scrollbars=0,top=' + top + ',left=' + left);\n\t  };\n\t});\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\t\n\tangular.module('profile').directive('dateValidator', function () {\n\t  return {\n\t    require: 'ngModel',\n\t    link: function link(scope, element, attrs, ngModel) {\n\t\n\t      ngModel.$validators.date = function (modelValue, viewValue) {\n\t        var value = modelValue || viewValue;\n\t        if (!value) return true;\n\t        var split = value.split('.');\n\t        if (split.length != 3) return false;\n\t        var date = new Date(split[2], split[1] - 1, split[0]);\n\t\n\t        if (split[2].length != 4) return false;\n\t\n\t        return date.getFullYear() == split[2] && date.getMonth() == split[1] - 1 && date.getDate() == split[0];\n\t      };\n\t    }\n\t  };\n\t});\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(23);\n\tvar angular = __webpack_require__(1);\n\tvar moment = __webpack_require__(30);\n\t\n\tangular.module('profile').directive('dateRangeValidator', function () {\n\t  return {\n\t    require: 'ngModel',\n\t    link: function link(scope, element, attrs, ngModel) {\n\t\n\t      var range = attrs.dateRangeValidator.split('-');\n\t      var from = range[0] ? moment(range[0], 'DD.MM.YYYY').toDate() : new Date();\n\t      var to = range[1] ? moment(range[1], 'DD.MM.YYYY').toDate() : new Date();\n\t\n\t      ngModel.$validators.dateRange = function (modelValue, viewValue) {\n\t        var value = modelValue || viewValue;\n\t        if (!value) return true;\n\t\n\t        var split = value.split('.');\n\t        if (split.length != 3) return false;\n\t        var date = new Date(split[2], split[1] - 1, split[0]);\n\t\n\t        if (split[2].length != 4) return false;\n\t\n\t        return date >= from && date <= to;\n\t      };\n\t    }\n\t  };\n\t});\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(96);\n\t\n\tmodule.exports = __webpack_require__(97);\n\n/***/ },\n\n/***/ 54:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.thumb = function (url, width, height) {\n\t  // sometimes this may be called without url\n\t  if (!url) return url;\n\t\n\t  var pixelRatio = window.devicePixelRatio;\n\t\n\t  // return pixelRatio times larger image for retina\n\t  width *= pixelRatio;\n\t  height *= pixelRatio;\n\t\n\t  var modifier = width <= 160 && height <= 160 ? 't' : width <= 320 && height <= 320 ? 'm' : width <= 640 && height <= 640 ? 'i' : width <= 1024 && height <= 1024 ? 'h' : '';\n\t\n\t  return url.slice(0, url.lastIndexOf('.')) + modifier + url.slice(url.lastIndexOf('.'));\n\t};\n\n/***/ },\n\n/***/ 95:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (module) {\n\t\tif (!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function () {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t};\n\n/***/ },\n\n/***/ 96:\n/***/ function(module, exports, __webpack_require__) {\n\n\t//! moment.js locale configuration\n\t//! locale : russian (ru)\n\t//! author : Viktorminator : https://github.com/Viktorminator\n\t//! Author : Menelion Elensúle : https://github.com/Oire\n\t\n\t(function (global, factory) {\n\t   true ? factory(__webpack_require__(97)) :\n\t   typeof define === 'function' && define.amd ? define(['moment'], factory) :\n\t   factory(global.moment)\n\t}(this, function (moment) { 'use strict';\n\t\n\t\n\t    function plural(word, num) {\n\t        var forms = word.split('_');\n\t        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n\t    }\n\t    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\t        var format = {\n\t            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n\t            'hh': 'час_часа_часов',\n\t            'dd': 'день_дня_дней',\n\t            'MM': 'месяц_месяца_месяцев',\n\t            'yy': 'год_года_лет'\n\t        };\n\t        if (key === 'm') {\n\t            return withoutSuffix ? 'минута' : 'минуту';\n\t        }\n\t        else {\n\t            return number + ' ' + plural(format[key], +number);\n\t        }\n\t    }\n\t    function monthsCaseReplace(m, format) {\n\t        var months = {\n\t            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n\t            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n\t        },\n\t        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n\t            'accusative' :\n\t            'nominative';\n\t        return months[nounCase][m.month()];\n\t    }\n\t    function monthsShortCaseReplace(m, format) {\n\t        var monthsShort = {\n\t            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n\t            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n\t        },\n\t        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n\t            'accusative' :\n\t            'nominative';\n\t        return monthsShort[nounCase][m.month()];\n\t    }\n\t    function weekdaysCaseReplace(m, format) {\n\t        var weekdays = {\n\t            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n\t            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n\t        },\n\t        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\n\t            'accusative' :\n\t            'nominative';\n\t        return weekdays[nounCase][m.day()];\n\t    }\n\t\n\t    var ru = moment.defineLocale('ru', {\n\t        months : monthsCaseReplace,\n\t        monthsShort : monthsShortCaseReplace,\n\t        weekdays : weekdaysCaseReplace,\n\t        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n\t        longDateFormat : {\n\t            LT : 'HH:mm',\n\t            LTS : 'LT:ss',\n\t            L : 'DD.MM.YYYY',\n\t            LL : 'D MMMM YYYY г.',\n\t            LLL : 'D MMMM YYYY г., LT',\n\t            LLLL : 'dddd, D MMMM YYYY г., LT'\n\t        },\n\t        calendar : {\n\t            sameDay: '[Сегодня в] LT',\n\t            nextDay: '[Завтра в] LT',\n\t            lastDay: '[Вчера в] LT',\n\t            nextWeek: function () {\n\t                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n\t            },\n\t            lastWeek: function (now) {\n\t                if (now.week() !== this.week()) {\n\t                    switch (this.day()) {\n\t                    case 0:\n\t                        return '[В прошлое] dddd [в] LT';\n\t                    case 1:\n\t                    case 2:\n\t                    case 4:\n\t                        return '[В прошлый] dddd [в] LT';\n\t                    case 3:\n\t                    case 5:\n\t                    case 6:\n\t                        return '[В прошлую] dddd [в] LT';\n\t                    }\n\t                } else {\n\t                    if (this.day() === 2) {\n\t                        return '[Во] dddd [в] LT';\n\t                    } else {\n\t                        return '[В] dddd [в] LT';\n\t                    }\n\t                }\n\t            },\n\t            sameElse: 'L'\n\t        },\n\t        relativeTime : {\n\t            future : 'через %s',\n\t            past : '%s назад',\n\t            s : 'несколько секунд',\n\t            m : relativeTimeWithPlural,\n\t            mm : relativeTimeWithPlural,\n\t            h : 'час',\n\t            hh : relativeTimeWithPlural,\n\t            d : 'день',\n\t            dd : relativeTimeWithPlural,\n\t            M : 'месяц',\n\t            MM : relativeTimeWithPlural,\n\t            y : 'год',\n\t            yy : relativeTimeWithPlural\n\t        },\n\t        meridiemParse: /ночи|утра|дня|вечера/i,\n\t        isPM : function (input) {\n\t            return /^(дня|вечера)$/.test(input);\n\t        },\n\t        meridiem : function (hour, minute, isLower) {\n\t            if (hour < 4) {\n\t                return 'ночи';\n\t            } else if (hour < 12) {\n\t                return 'утра';\n\t            } else if (hour < 17) {\n\t                return 'дня';\n\t            } else {\n\t                return 'вечера';\n\t            }\n\t        },\n\t        ordinalParse: /\\d{1,2}-(й|го|я)/,\n\t        ordinal: function (number, period) {\n\t            switch (period) {\n\t            case 'M':\n\t            case 'd':\n\t            case 'DDD':\n\t                return number + '-й';\n\t            case 'D':\n\t                return number + '-го';\n\t            case 'w':\n\t            case 'W':\n\t                return number + '-я';\n\t            default:\n\t                return number;\n\t            }\n\t        },\n\t        week : {\n\t            dow : 1, // Monday is the first day of the week.\n\t            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\t        }\n\t    });\n\t\n\t    return ru;\n\t\n\t}));\n\n/***/ },\n\n/***/ 97:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.10.0\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t(function (global, factory) {\n\t    true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, function () { 'use strict';\n\t\n\t    var hookCallback;\n\t\n\t    function hooks__hooks () {\n\t        return hookCallback.apply(null, arguments);\n\t    }\n\t\n\t    // This is done to register the method called with moment()\n\t    // without creating circular dependencies.\n\t    function setHookCallback (callback) {\n\t        hookCallback = callback;\n\t    }\n\t\n\t    function defaultParsingFlags() {\n\t        // We need to deep clone this object.\n\t        return {\n\t            empty           : false,\n\t            unusedTokens    : [],\n\t            unusedInput     : [],\n\t            overflow        : -2,\n\t            charsLeftOver   : 0,\n\t            nullInput       : false,\n\t            invalidMonth    : null,\n\t            invalidFormat   : false,\n\t            userInvalidated : false,\n\t            iso             : false\n\t        };\n\t    }\n\t\n\t    function isArray(input) {\n\t        return Object.prototype.toString.call(input) === '[object Array]';\n\t    }\n\t\n\t    function isDate(input) {\n\t        return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\n\t    }\n\t\n\t    function map(arr, fn) {\n\t        var res = [], i;\n\t        for (i = 0; i < arr.length; ++i) {\n\t            res.push(fn(arr[i], i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    function hasOwnProp(a, b) {\n\t        return Object.prototype.hasOwnProperty.call(a, b);\n\t    }\n\t\n\t    function extend(a, b) {\n\t        for (var i in b) {\n\t            if (hasOwnProp(b, i)) {\n\t                a[i] = b[i];\n\t            }\n\t        }\n\t\n\t        if (hasOwnProp(b, 'toString')) {\n\t            a.toString = b.toString;\n\t        }\n\t\n\t        if (hasOwnProp(b, 'valueOf')) {\n\t            a.valueOf = b.valueOf;\n\t        }\n\t\n\t        return a;\n\t    }\n\t\n\t    function utc__createUTC (input, format, locale, strict) {\n\t        return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t    }\n\t\n\t    function valid__isValid(m) {\n\t        if (m._isValid == null) {\n\t            m._isValid = !isNaN(m._d.getTime()) &&\n\t                m._pf.overflow < 0 &&\n\t                !m._pf.empty &&\n\t                !m._pf.invalidMonth &&\n\t                !m._pf.nullInput &&\n\t                !m._pf.invalidFormat &&\n\t                !m._pf.userInvalidated;\n\t\n\t            if (m._strict) {\n\t                m._isValid = m._isValid &&\n\t                    m._pf.charsLeftOver === 0 &&\n\t                    m._pf.unusedTokens.length === 0 &&\n\t                    m._pf.bigHour === undefined;\n\t            }\n\t        }\n\t        return m._isValid;\n\t    }\n\t\n\t    function valid__createInvalid (flags) {\n\t        var m = utc__createUTC(NaN);\n\t        if (flags != null) {\n\t            extend(m._pf, flags);\n\t        }\n\t        else {\n\t            m._pf.userInvalidated = true;\n\t        }\n\t\n\t        return m;\n\t    }\n\t\n\t    var momentProperties = hooks__hooks.momentProperties = [];\n\t\n\t    function copyConfig(to, from) {\n\t        var i, prop, val;\n\t\n\t        if (typeof from._isAMomentObject !== 'undefined') {\n\t            to._isAMomentObject = from._isAMomentObject;\n\t        }\n\t        if (typeof from._i !== 'undefined') {\n\t            to._i = from._i;\n\t        }\n\t        if (typeof from._f !== 'undefined') {\n\t            to._f = from._f;\n\t        }\n\t        if (typeof from._l !== 'undefined') {\n\t            to._l = from._l;\n\t        }\n\t        if (typeof from._strict !== 'undefined') {\n\t            to._strict = from._strict;\n\t        }\n\t        if (typeof from._tzm !== 'undefined') {\n\t            to._tzm = from._tzm;\n\t        }\n\t        if (typeof from._isUTC !== 'undefined') {\n\t            to._isUTC = from._isUTC;\n\t        }\n\t        if (typeof from._offset !== 'undefined') {\n\t            to._offset = from._offset;\n\t        }\n\t        if (typeof from._pf !== 'undefined') {\n\t            to._pf = from._pf;\n\t        }\n\t        if (typeof from._locale !== 'undefined') {\n\t            to._locale = from._locale;\n\t        }\n\t\n\t        if (momentProperties.length > 0) {\n\t            for (i in momentProperties) {\n\t                prop = momentProperties[i];\n\t                val = from[prop];\n\t                if (typeof val !== 'undefined') {\n\t                    to[prop] = val;\n\t                }\n\t            }\n\t        }\n\t\n\t        return to;\n\t    }\n\t\n\t    var updateInProgress = false;\n\t\n\t    // Moment prototype object\n\t    function Moment(config) {\n\t        copyConfig(this, config);\n\t        this._d = new Date(+config._d);\n\t        // Prevent infinite loop in case updateOffset creates new moment\n\t        // objects.\n\t        if (updateInProgress === false) {\n\t            updateInProgress = true;\n\t            hooks__hooks.updateOffset(this);\n\t            updateInProgress = false;\n\t        }\n\t    }\n\t\n\t    function isMoment (obj) {\n\t        return obj instanceof Moment || (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n\t    }\n\t\n\t    function toInt(argumentForCoercion) {\n\t        var coercedNumber = +argumentForCoercion,\n\t            value = 0;\n\t\n\t        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t            if (coercedNumber >= 0) {\n\t                value = Math.floor(coercedNumber);\n\t            } else {\n\t                value = Math.ceil(coercedNumber);\n\t            }\n\t        }\n\t\n\t        return value;\n\t    }\n\t\n\t    function compareArrays(array1, array2, dontConvert) {\n\t        var len = Math.min(array1.length, array2.length),\n\t            lengthDiff = Math.abs(array1.length - array2.length),\n\t            diffs = 0,\n\t            i;\n\t        for (i = 0; i < len; i++) {\n\t            if ((dontConvert && array1[i] !== array2[i]) ||\n\t                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t                diffs++;\n\t            }\n\t        }\n\t        return diffs + lengthDiff;\n\t    }\n\t\n\t    function Locale() {\n\t    }\n\t\n\t    var locales = {};\n\t    var globalLocale;\n\t\n\t    function normalizeLocale(key) {\n\t        return key ? key.toLowerCase().replace('_', '-') : key;\n\t    }\n\t\n\t    // pick the locale from the array\n\t    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\t    function chooseLocale(names) {\n\t        var i = 0, j, next, locale, split;\n\t\n\t        while (i < names.length) {\n\t            split = normalizeLocale(names[i]).split('-');\n\t            j = split.length;\n\t            next = normalizeLocale(names[i + 1]);\n\t            next = next ? next.split('-') : null;\n\t            while (j > 0) {\n\t                locale = loadLocale(split.slice(0, j).join('-'));\n\t                if (locale) {\n\t                    return locale;\n\t                }\n\t                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                    //the next array item is better than a shallower substring of this one\n\t                    break;\n\t                }\n\t                j--;\n\t            }\n\t            i++;\n\t        }\n\t        return null;\n\t    }\n\t\n\t    function loadLocale(name) {\n\t        var oldLocale = null;\n\t        // TODO: Find a better way to register and load all the locales in Node\n\t        if (!locales[name] && typeof module !== 'undefined' &&\n\t                module && module.exports) {\n\t            try {\n\t                oldLocale = globalLocale._abbr;\n\t                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\t                // because defineLocale currently also sets the global locale, we\n\t                // want to undo that for lazy loaded locales\n\t                locales__getSetGlobalLocale(oldLocale);\n\t            } catch (e) { }\n\t        }\n\t        return locales[name];\n\t    }\n\t\n\t    // This function will load locale and then set the global locale.  If\n\t    // no arguments are passed in, it will simply return the current global\n\t    // locale key.\n\t    function locales__getSetGlobalLocale (key, values) {\n\t        var data;\n\t        if (key) {\n\t            if (typeof values === 'undefined') {\n\t                data = locales__getLocale(key);\n\t            }\n\t            else {\n\t                data = defineLocale(key, values);\n\t            }\n\t\n\t            if (data) {\n\t                // moment.duration._locale = moment._locale = data;\n\t                globalLocale = data;\n\t            }\n\t        }\n\t\n\t        return globalLocale._abbr;\n\t    }\n\t\n\t    function defineLocale (name, values) {\n\t        if (values !== null) {\n\t            values.abbr = name;\n\t            if (!locales[name]) {\n\t                locales[name] = new Locale();\n\t            }\n\t            locales[name].set(values);\n\t\n\t            // backwards compat for now: also set the locale\n\t            locales__getSetGlobalLocale(name);\n\t\n\t            return locales[name];\n\t        } else {\n\t            // useful for testing\n\t            delete locales[name];\n\t            return null;\n\t        }\n\t    }\n\t\n\t    // returns locale data\n\t    function locales__getLocale (key) {\n\t        var locale;\n\t\n\t        if (key && key._locale && key._locale._abbr) {\n\t            key = key._locale._abbr;\n\t        }\n\t\n\t        if (!key) {\n\t            return globalLocale;\n\t        }\n\t\n\t        if (!isArray(key)) {\n\t            //short-circuit everything else\n\t            locale = loadLocale(key);\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            key = [key];\n\t        }\n\t\n\t        return chooseLocale(key);\n\t    }\n\t\n\t    var aliases = {};\n\t\n\t    function addUnitAlias (unit, shorthand) {\n\t        var lowerCase = unit.toLowerCase();\n\t        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t    }\n\t\n\t    function normalizeUnits(units) {\n\t        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t    }\n\t\n\t    function normalizeObjectUnits(inputObject) {\n\t        var normalizedInput = {},\n\t            normalizedProp,\n\t            prop;\n\t\n\t        for (prop in inputObject) {\n\t            if (hasOwnProp(inputObject, prop)) {\n\t                normalizedProp = normalizeUnits(prop);\n\t                if (normalizedProp) {\n\t                    normalizedInput[normalizedProp] = inputObject[prop];\n\t                }\n\t            }\n\t        }\n\t\n\t        return normalizedInput;\n\t    }\n\t\n\t    function makeGetSet (unit, keepTime) {\n\t        return function (value) {\n\t            if (value != null) {\n\t                get_set__set(this, unit, value);\n\t                hooks__hooks.updateOffset(this, keepTime);\n\t                return this;\n\t            } else {\n\t                return get_set__get(this, unit);\n\t            }\n\t        };\n\t    }\n\t\n\t    function get_set__get (mom, unit) {\n\t        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n\t    }\n\t\n\t    function get_set__set (mom, unit, value) {\n\t        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSet (units, value) {\n\t        var unit;\n\t        if (typeof units === 'object') {\n\t            for (unit in units) {\n\t                this.set(unit, units[unit]);\n\t            }\n\t        } else {\n\t            units = normalizeUnits(units);\n\t            if (typeof this[units] === 'function') {\n\t                return this[units](value);\n\t            }\n\t        }\n\t        return this;\n\t    }\n\t\n\t    function zeroFill(number, targetLength, forceSign) {\n\t        var output = '' + Math.abs(number),\n\t            sign = number >= 0;\n\t\n\t        while (output.length < targetLength) {\n\t            output = '0' + output;\n\t        }\n\t        return (sign ? (forceSign ? '+' : '') : '-') + output;\n\t    }\n\t\n\t    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g;\n\t\n\t    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\t    var formatFunctions = {};\n\t\n\t    var formatTokenFunctions = {};\n\t\n\t    // token:    'M'\n\t    // padded:   ['MM', 2]\n\t    // ordinal:  'Mo'\n\t    // callback: function () { this.month() + 1 }\n\t    function addFormatToken (token, padded, ordinal, callback) {\n\t        var func = callback;\n\t        if (typeof callback === 'string') {\n\t            func = function () {\n\t                return this[callback]();\n\t            };\n\t        }\n\t        if (token) {\n\t            formatTokenFunctions[token] = func;\n\t        }\n\t        if (padded) {\n\t            formatTokenFunctions[padded[0]] = function () {\n\t                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t            };\n\t        }\n\t        if (ordinal) {\n\t            formatTokenFunctions[ordinal] = function () {\n\t                return this.localeData().ordinal(func.apply(this, arguments), token);\n\t            };\n\t        }\n\t    }\n\t\n\t    function removeFormattingTokens(input) {\n\t        if (input.match(/\\[[\\s\\S]/)) {\n\t            return input.replace(/^\\[|\\]$/g, '');\n\t        }\n\t        return input.replace(/\\\\/g, '');\n\t    }\n\t\n\t    function makeFormatFunction(format) {\n\t        var array = format.match(formattingTokens), i, length;\n\t\n\t        for (i = 0, length = array.length; i < length; i++) {\n\t            if (formatTokenFunctions[array[i]]) {\n\t                array[i] = formatTokenFunctions[array[i]];\n\t            } else {\n\t                array[i] = removeFormattingTokens(array[i]);\n\t            }\n\t        }\n\t\n\t        return function (mom) {\n\t            var output = '';\n\t            for (i = 0; i < length; i++) {\n\t                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n\t            }\n\t            return output;\n\t        };\n\t    }\n\t\n\t    // format date using native date object\n\t    function formatMoment(m, format) {\n\t        if (!m.isValid()) {\n\t            return m.localeData().invalidDate();\n\t        }\n\t\n\t        format = expandFormat(format, m.localeData());\n\t\n\t        if (!formatFunctions[format]) {\n\t            formatFunctions[format] = makeFormatFunction(format);\n\t        }\n\t\n\t        return formatFunctions[format](m);\n\t    }\n\t\n\t    function expandFormat(format, locale) {\n\t        var i = 5;\n\t\n\t        function replaceLongDateFormatTokens(input) {\n\t            return locale.longDateFormat(input) || input;\n\t        }\n\t\n\t        localFormattingTokens.lastIndex = 0;\n\t        while (i >= 0 && localFormattingTokens.test(format)) {\n\t            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t            localFormattingTokens.lastIndex = 0;\n\t            i -= 1;\n\t        }\n\t\n\t        return format;\n\t    }\n\t\n\t    var match1         = /\\d/;            //       0 - 9\n\t    var match2         = /\\d\\d/;          //      00 - 99\n\t    var match3         = /\\d{3}/;         //     000 - 999\n\t    var match4         = /\\d{4}/;         //    0000 - 9999\n\t    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\t    var match1to2      = /\\d\\d?/;         //       0 - 99\n\t    var match1to3      = /\\d{1,3}/;       //       0 - 999\n\t    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n\t    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\t    var matchUnsigned  = /\\d+/;           //       0 - inf\n\t    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\t    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\t\n\t    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t    // any word (or two) characters or numbers including two/three word month in arabic.\n\t    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t    var regexes = {};\n\t\n\t    function addRegexToken (token, regex, strictRegex) {\n\t        regexes[token] = typeof regex === 'function' ? regex : function (isStrict) {\n\t            return (isStrict && strictRegex) ? strictRegex : regex;\n\t        };\n\t    }\n\t\n\t    function getParseRegexForToken (token, config) {\n\t        if (!hasOwnProp(regexes, token)) {\n\t            return new RegExp(unescapeFormat(token));\n\t        }\n\t\n\t        return regexes[token](config._strict, config._locale);\n\t    }\n\t\n\t    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\t    function unescapeFormat(s) {\n\t        return s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t            return p1 || p2 || p3 || p4;\n\t        }).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t    }\n\t\n\t    var tokens = {};\n\t\n\t    function addParseToken (token, callback) {\n\t        var i, func = callback;\n\t        if (typeof token === 'string') {\n\t            token = [token];\n\t        }\n\t        if (typeof callback === 'number') {\n\t            func = function (input, array) {\n\t                array[callback] = toInt(input);\n\t            };\n\t        }\n\t        for (i = 0; i < token.length; i++) {\n\t            tokens[token[i]] = func;\n\t        }\n\t    }\n\t\n\t    function addWeekParseToken (token, callback) {\n\t        addParseToken(token, function (input, array, config, token) {\n\t            config._w = config._w || {};\n\t            callback(input, config._w, config, token);\n\t        });\n\t    }\n\t\n\t    function addTimeToArrayFromToken(token, input, config) {\n\t        if (input != null && hasOwnProp(tokens, token)) {\n\t            tokens[token](input, config._a, config, token);\n\t        }\n\t    }\n\t\n\t    var YEAR = 0;\n\t    var MONTH = 1;\n\t    var DATE = 2;\n\t    var HOUR = 3;\n\t    var MINUTE = 4;\n\t    var SECOND = 5;\n\t    var MILLISECOND = 6;\n\t\n\t    function daysInMonth(year, month) {\n\t        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('M', ['MM', 2], 'Mo', function () {\n\t        return this.month() + 1;\n\t    });\n\t\n\t    addFormatToken('MMM', 0, 0, function (format) {\n\t        return this.localeData().monthsShort(this, format);\n\t    });\n\t\n\t    addFormatToken('MMMM', 0, 0, function (format) {\n\t        return this.localeData().months(this, format);\n\t    });\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('month', 'M');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('M',    match1to2);\n\t    addRegexToken('MM',   match1to2, match2);\n\t    addRegexToken('MMM',  matchWord);\n\t    addRegexToken('MMMM', matchWord);\n\t\n\t    addParseToken(['M', 'MM'], function (input, array) {\n\t        array[MONTH] = toInt(input) - 1;\n\t    });\n\t\n\t    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t        var month = config._locale.monthsParse(input, token, config._strict);\n\t        // if we didn't find a month name, mark the date as invalid.\n\t        if (month != null) {\n\t            array[MONTH] = month;\n\t        } else {\n\t            config._pf.invalidMonth = input;\n\t        }\n\t    });\n\t\n\t    // LOCALES\n\t\n\t    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\t    function localeMonths (m) {\n\t        return this._months[m.month()];\n\t    }\n\t\n\t    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\t    function localeMonthsShort (m) {\n\t        return this._monthsShort[m.month()];\n\t    }\n\t\n\t    function localeMonthsParse (monthName, format, strict) {\n\t        var i, mom, regex;\n\t\n\t        if (!this._monthsParse) {\n\t            this._monthsParse = [];\n\t            this._longMonthsParse = [];\n\t            this._shortMonthsParse = [];\n\t        }\n\t\n\t        for (i = 0; i < 12; i++) {\n\t            // make the regex if we don't have it already\n\t            mom = utc__createUTC([2000, i]);\n\t            if (strict && !this._longMonthsParse[i]) {\n\t                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t            }\n\t            if (!strict && !this._monthsParse[i]) {\n\t                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t            }\n\t            // test the regex\n\t            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t                return i;\n\t            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t                return i;\n\t            } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t                return i;\n\t            }\n\t        }\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function setMonth (mom, value) {\n\t        var dayOfMonth;\n\t\n\t        // TODO: Move this out of here!\n\t        if (typeof value === 'string') {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (typeof value !== 'number') {\n\t                return mom;\n\t            }\n\t        }\n\t\n\t        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t        return mom;\n\t    }\n\t\n\t    function getSetMonth (value) {\n\t        if (value != null) {\n\t            setMonth(this, value);\n\t            hooks__hooks.updateOffset(this, true);\n\t            return this;\n\t        } else {\n\t            return get_set__get(this, 'Month');\n\t        }\n\t    }\n\t\n\t    function getDaysInMonth () {\n\t        return daysInMonth(this.year(), this.month());\n\t    }\n\t\n\t    function checkOverflow (m) {\n\t        var overflow;\n\t        var a = m._a;\n\t\n\t        if (a && m._pf.overflow === -2) {\n\t            overflow =\n\t                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t                -1;\n\t\n\t            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t                overflow = DATE;\n\t            }\n\t\n\t            m._pf.overflow = overflow;\n\t        }\n\t\n\t        return m;\n\t    }\n\t\n\t    function warn(msg) {\n\t        if (hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n\t            console.warn('Deprecation warning: ' + msg);\n\t        }\n\t    }\n\t\n\t    function deprecate(msg, fn) {\n\t        var firstTime = true;\n\t        return extend(function () {\n\t            if (firstTime) {\n\t                warn(msg);\n\t                firstTime = false;\n\t            }\n\t            return fn.apply(this, arguments);\n\t        }, fn);\n\t    }\n\t\n\t    var deprecations = {};\n\t\n\t    function deprecateSimple(name, msg) {\n\t        if (!deprecations[name]) {\n\t            warn(msg);\n\t            deprecations[name] = true;\n\t        }\n\t    }\n\t\n\t    hooks__hooks.suppressDeprecationWarnings = false;\n\t\n\t    var from_string__isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\t    var isoDates = [\n\t        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n\t        ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n\t        ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n\t        ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n\t        ['YYYY-DDD', /\\d{4}-\\d{3}/]\n\t    ];\n\t\n\t    // iso time formats and regexes\n\t    var isoTimes = [\n\t        ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t        ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n\t        ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n\t        ['HH', /(T| )\\d\\d/]\n\t    ];\n\t\n\t    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t    // date from iso format\n\t    function configFromISO(config) {\n\t        var i, l,\n\t            string = config._i,\n\t            match = from_string__isoRegex.exec(string);\n\t\n\t        if (match) {\n\t            config._pf.iso = true;\n\t            for (i = 0, l = isoDates.length; i < l; i++) {\n\t                if (isoDates[i][1].exec(string)) {\n\t                    // match[5] should be 'T' or undefined\n\t                    config._f = isoDates[i][0] + (match[6] || ' ');\n\t                    break;\n\t                }\n\t            }\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(string)) {\n\t                    config._f += isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (string.match(matchOffset)) {\n\t                config._f += 'Z';\n\t            }\n\t            configFromStringAndFormat(config);\n\t        } else {\n\t            config._isValid = false;\n\t        }\n\t    }\n\t\n\t    // date from iso format or fallback\n\t    function configFromString(config) {\n\t        var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t        if (matched !== null) {\n\t            config._d = new Date(+matched[1]);\n\t            return;\n\t        }\n\t\n\t        configFromISO(config);\n\t        if (config._isValid === false) {\n\t            delete config._isValid;\n\t            hooks__hooks.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    hooks__hooks.createFromInputFallback = deprecate(\n\t        'moment construction falls back to js Date. This is ' +\n\t        'discouraged and will be removed in upcoming major ' +\n\t        'release. Please refer to ' +\n\t        'https://github.com/moment/moment/issues/1407 for more info.',\n\t        function (config) {\n\t            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t        }\n\t    );\n\t\n\t    function createDate (y, m, d, h, M, s, ms) {\n\t        //can't just apply() to create a date:\n\t        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n\t        var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t        //the date constructor doesn't accept years < 1970\n\t        if (y < 1970) {\n\t            date.setFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    function createUTCDate (y) {\n\t        var date = new Date(Date.UTC.apply(null, arguments));\n\t        if (y < 1970) {\n\t            date.setUTCFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    addFormatToken(0, ['YY', 2], 0, function () {\n\t        return this.year() % 100;\n\t    });\n\t\n\t    addFormatToken(0, ['YYYY',   4],       0, 'year');\n\t    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n\t    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('year', 'y');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('Y',      matchSigned);\n\t    addRegexToken('YY',     match1to2, match2);\n\t    addRegexToken('YYYY',   match1to4, match4);\n\t    addRegexToken('YYYYY',  match1to6, match6);\n\t    addRegexToken('YYYYYY', match1to6, match6);\n\t\n\t    addParseToken(['YYYY', 'YYYYY', 'YYYYYY'], YEAR);\n\t    addParseToken('YY', function (input, array) {\n\t        array[YEAR] = hooks__hooks.parseTwoDigitYear(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    function daysInYear(year) {\n\t        return isLeapYear(year) ? 366 : 365;\n\t    }\n\t\n\t    function isLeapYear(year) {\n\t        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t    }\n\t\n\t    // HOOKS\n\t\n\t    hooks__hooks.parseTwoDigitYear = function (input) {\n\t        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t    };\n\t\n\t    // MOMENTS\n\t\n\t    var getSetYear = makeGetSet('FullYear', false);\n\t\n\t    function getIsLeapYear () {\n\t        return isLeapYear(this.year());\n\t    }\n\t\n\t    addFormatToken('w', ['ww', 2], 'wo', 'week');\n\t    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('week', 'w');\n\t    addUnitAlias('isoWeek', 'W');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('w',  match1to2);\n\t    addRegexToken('ww', match1to2, match2);\n\t    addRegexToken('W',  match1to2);\n\t    addRegexToken('WW', match1to2, match2);\n\t\n\t    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t        week[token.substr(0, 1)] = toInt(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    // firstDayOfWeek       0 = sun, 6 = sat\n\t    //                      the day of the week that starts the week\n\t    //                      (usually sunday or monday)\n\t    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n\t    //                      the first week is the week that contains the first\n\t    //                      of this day of the week\n\t    //                      (eg. ISO weeks use thursday (4))\n\t    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n\t        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n\t            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n\t            adjustedMoment;\n\t\n\t\n\t        if (daysToDayOfWeek > end) {\n\t            daysToDayOfWeek -= 7;\n\t        }\n\t\n\t        if (daysToDayOfWeek < end - 7) {\n\t            daysToDayOfWeek += 7;\n\t        }\n\t\n\t        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');\n\t        return {\n\t            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n\t            year: adjustedMoment.year()\n\t        };\n\t    }\n\t\n\t    // LOCALES\n\t\n\t    function localeWeek (mom) {\n\t        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t    }\n\t\n\t    var defaultLocaleWeek = {\n\t        dow : 0, // Sunday is the first day of the week.\n\t        doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t    };\n\t\n\t    function localeFirstDayOfWeek () {\n\t        return this._week.dow;\n\t    }\n\t\n\t    function localeFirstDayOfYear () {\n\t        return this._week.doy;\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSetWeek (input) {\n\t        var week = this.localeData().week(this);\n\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t    }\n\t\n\t    function getSetISOWeek (input) {\n\t        var week = weekOfYear(this, 1, 4).week;\n\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t    }\n\t\n\t    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('dayOfYear', 'DDD');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('DDD',  match1to3);\n\t    addRegexToken('DDDD', match3);\n\t    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t        config._dayOfYear = toInt(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\t    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n\t        var d = createUTCDate(year, 0, 1).getUTCDay();\n\t        var daysToAdd;\n\t        var dayOfYear;\n\t\n\t        d = d === 0 ? 7 : d;\n\t        weekday = weekday != null ? weekday : firstDayOfWeek;\n\t        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n\t        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\t\n\t        return {\n\t            year      : dayOfYear > 0 ? year      : year - 1,\n\t            dayOfYear : dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear\n\t        };\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSetDayOfYear (input) {\n\t        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t    }\n\t\n\t    // Pick the first defined of two or three arguments.\n\t    function defaults(a, b, c) {\n\t        if (a != null) {\n\t            return a;\n\t        }\n\t        if (b != null) {\n\t            return b;\n\t        }\n\t        return c;\n\t    }\n\t\n\t    function currentDateArray(config) {\n\t        var now = new Date();\n\t        if (config._useUTC) {\n\t            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n\t        }\n\t        return [now.getFullYear(), now.getMonth(), now.getDate()];\n\t    }\n\t\n\t    // convert an array to a date.\n\t    // the array should mirror the parameters below\n\t    // note: all values past the year are optional and will default to the lowest possible value.\n\t    // [year, month, day , hour, minute, second, millisecond]\n\t    function configFromArray (config) {\n\t        var i, date, input = [], currentDate, yearToUse;\n\t\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        currentDate = currentDateArray(config);\n\t\n\t        //compute day of the year from weeks and weekdays\n\t        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t            dayOfYearFromWeekInfo(config);\n\t        }\n\t\n\t        //if the day of the year is set, figure out what it is\n\t        if (config._dayOfYear) {\n\t            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t            if (config._dayOfYear > daysInYear(yearToUse)) {\n\t                config._pf._overflowDayOfYear = true;\n\t            }\n\t\n\t            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t            config._a[MONTH] = date.getUTCMonth();\n\t            config._a[DATE] = date.getUTCDate();\n\t        }\n\t\n\t        // Default to current date.\n\t        // * if no year, month, day of month are given, default to today\n\t        // * if day of month is given, default month and year\n\t        // * if month is given, default only year\n\t        // * if year is given, don't default anything\n\t        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t            config._a[i] = input[i] = currentDate[i];\n\t        }\n\t\n\t        // Zero out whatever was not defaulted, including time\n\t        for (; i < 7; i++) {\n\t            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t        }\n\t\n\t        // Check for 24:00:00.000\n\t        if (config._a[HOUR] === 24 &&\n\t                config._a[MINUTE] === 0 &&\n\t                config._a[SECOND] === 0 &&\n\t                config._a[MILLISECOND] === 0) {\n\t            config._nextDay = true;\n\t            config._a[HOUR] = 0;\n\t        }\n\t\n\t        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t        // Apply timezone offset from input. The actual utcOffset can be changed\n\t        // with parseZone.\n\t        if (config._tzm != null) {\n\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t        }\n\t\n\t        if (config._nextDay) {\n\t            config._a[HOUR] = 24;\n\t        }\n\t    }\n\t\n\t    function dayOfYearFromWeekInfo(config) {\n\t        var w, weekYear, week, weekday, dow, doy, temp;\n\t\n\t        w = config._w;\n\t        if (w.GG != null || w.W != null || w.E != null) {\n\t            dow = 1;\n\t            doy = 4;\n\t\n\t            // TODO: We need to take the current isoWeekYear, but that depends on\n\t            // how we interpret now (local, utc, fixed offset). So create\n\t            // a now version of current config (take local/utc/offset flags, and\n\t            // create now).\n\t            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n\t            week = defaults(w.W, 1);\n\t            weekday = defaults(w.E, 1);\n\t        } else {\n\t            dow = config._locale._week.dow;\n\t            doy = config._locale._week.doy;\n\t\n\t            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n\t            week = defaults(w.w, 1);\n\t\n\t            if (w.d != null) {\n\t                // weekday -- low day numbers are considered next week\n\t                weekday = w.d;\n\t                if (weekday < dow) {\n\t                    ++week;\n\t                }\n\t            } else if (w.e != null) {\n\t                // local weekday -- counting starts from begining of week\n\t                weekday = w.e + dow;\n\t            } else {\n\t                // default to begining of week\n\t                weekday = dow;\n\t            }\n\t        }\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\t\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t\n\t    hooks__hooks.ISO_8601 = function () {};\n\t\n\t    // date from string and format string\n\t    function configFromStringAndFormat(config) {\n\t        // TODO: Move this to another part of the creation flow to prevent circular deps\n\t        if (config._f === hooks__hooks.ISO_8601) {\n\t            configFromISO(config);\n\t            return;\n\t        }\n\t\n\t        config._a = [];\n\t        config._pf.empty = true;\n\t\n\t        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t        var string = '' + config._i,\n\t            i, parsedInput, tokens, token, skipped,\n\t            stringLength = string.length,\n\t            totalParsedInputLength = 0;\n\t\n\t        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t        for (i = 0; i < tokens.length; i++) {\n\t            token = tokens[i];\n\t            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t            if (parsedInput) {\n\t                skipped = string.substr(0, string.indexOf(parsedInput));\n\t                if (skipped.length > 0) {\n\t                    config._pf.unusedInput.push(skipped);\n\t                }\n\t                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t                totalParsedInputLength += parsedInput.length;\n\t            }\n\t            // don't parse if it's not a known token\n\t            if (formatTokenFunctions[token]) {\n\t                if (parsedInput) {\n\t                    config._pf.empty = false;\n\t                }\n\t                else {\n\t                    config._pf.unusedTokens.push(token);\n\t                }\n\t                addTimeToArrayFromToken(token, parsedInput, config);\n\t            }\n\t            else if (config._strict && !parsedInput) {\n\t                config._pf.unusedTokens.push(token);\n\t            }\n\t        }\n\t\n\t        // add remaining unparsed input length to the string\n\t        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n\t        if (string.length > 0) {\n\t            config._pf.unusedInput.push(string);\n\t        }\n\t\n\t        // clear _12h flag if hour is <= 12\n\t        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n\t            config._pf.bigHour = undefined;\n\t        }\n\t        // handle meridiem\n\t        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t        configFromArray(config);\n\t        checkOverflow(config);\n\t    }\n\t\n\t\n\t    function meridiemFixWrap (locale, hour, meridiem) {\n\t        var isPm;\n\t\n\t        if (meridiem == null) {\n\t            // nothing to do\n\t            return hour;\n\t        }\n\t        if (locale.meridiemHour != null) {\n\t            return locale.meridiemHour(hour, meridiem);\n\t        } else if (locale.isPM != null) {\n\t            // Fallback\n\t            isPm = locale.isPM(meridiem);\n\t            if (isPm && hour < 12) {\n\t                hour += 12;\n\t            }\n\t            if (!isPm && hour === 12) {\n\t                hour = 0;\n\t            }\n\t            return hour;\n\t        } else {\n\t            // this is not supposed to happen\n\t            return hour;\n\t        }\n\t    }\n\t\n\t    function configFromStringAndArray(config) {\n\t        var tempConfig,\n\t            bestMoment,\n\t\n\t            scoreToBeat,\n\t            i,\n\t            currentScore;\n\t\n\t        if (config._f.length === 0) {\n\t            config._pf.invalidFormat = true;\n\t            config._d = new Date(NaN);\n\t            return;\n\t        }\n\t\n\t        for (i = 0; i < config._f.length; i++) {\n\t            currentScore = 0;\n\t            tempConfig = copyConfig({}, config);\n\t            if (config._useUTC != null) {\n\t                tempConfig._useUTC = config._useUTC;\n\t            }\n\t            tempConfig._pf = defaultParsingFlags();\n\t            tempConfig._f = config._f[i];\n\t            configFromStringAndFormat(tempConfig);\n\t\n\t            if (!valid__isValid(tempConfig)) {\n\t                continue;\n\t            }\n\t\n\t            // if there is any input that was not parsed add a penalty for that format\n\t            currentScore += tempConfig._pf.charsLeftOver;\n\t\n\t            //or tokens\n\t            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\t\n\t            tempConfig._pf.score = currentScore;\n\t\n\t            if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t                scoreToBeat = currentScore;\n\t                bestMoment = tempConfig;\n\t            }\n\t        }\n\t\n\t        extend(config, bestMoment || tempConfig);\n\t    }\n\t\n\t    function configFromObject(config) {\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        var i = normalizeObjectUnits(config._i);\n\t        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];\n\t\n\t        configFromArray(config);\n\t    }\n\t\n\t    function createFromConfig (config) {\n\t        var input = config._i,\n\t            format = config._f,\n\t            res;\n\t\n\t        config._locale = config._locale || locales__getLocale(config._l);\n\t\n\t        if (input === null || (format === undefined && input === '')) {\n\t            return valid__createInvalid({nullInput: true});\n\t        }\n\t\n\t        if (typeof input === 'string') {\n\t            config._i = input = config._locale.preparse(input);\n\t        }\n\t\n\t        if (isMoment(input)) {\n\t            return new Moment(checkOverflow(input));\n\t        } else if (isArray(format)) {\n\t            configFromStringAndArray(config);\n\t        } else if (format) {\n\t            configFromStringAndFormat(config);\n\t        } else {\n\t            configFromInput(config);\n\t        }\n\t\n\t        res = new Moment(checkOverflow(config));\n\t        if (res._nextDay) {\n\t            // Adding is smart enough around DST\n\t            res.add(1, 'd');\n\t            res._nextDay = undefined;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    function configFromInput(config) {\n\t        var input = config._i;\n\t        if (input === undefined) {\n\t            config._d = new Date();\n\t        } else if (isDate(input)) {\n\t            config._d = new Date(+input);\n\t        } else if (typeof input === 'string') {\n\t            configFromString(config);\n\t        } else if (isArray(input)) {\n\t            config._a = map(input.slice(0), function (obj) {\n\t                return parseInt(obj, 10);\n\t            });\n\t            configFromArray(config);\n\t        } else if (typeof(input) === 'object') {\n\t            configFromObject(config);\n\t        } else if (typeof(input) === 'number') {\n\t            // from milliseconds\n\t            config._d = new Date(input);\n\t        } else {\n\t            hooks__hooks.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t        var c = {};\n\t\n\t        if (typeof(locale) === 'boolean') {\n\t            strict = locale;\n\t            locale = undefined;\n\t        }\n\t        // object construction must be done this way.\n\t        // https://github.com/moment/moment/issues/1423\n\t        c._isAMomentObject = true;\n\t        c._useUTC = c._isUTC = isUTC;\n\t        c._l = locale;\n\t        c._i = input;\n\t        c._f = format;\n\t        c._strict = strict;\n\t        c._pf = defaultParsingFlags();\n\t\n\t        return createFromConfig(c);\n\t    }\n\t\n\t    function local__createLocal (input, format, locale, strict) {\n\t        return createLocalOrUTC(input, format, locale, strict, false);\n\t    }\n\t\n\t    var prototypeMin = deprecate(\n\t         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n\t         function () {\n\t             var other = local__createLocal.apply(null, arguments);\n\t             return other < this ? this : other;\n\t         }\n\t     );\n\t\n\t    var prototypeMax = deprecate(\n\t        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n\t        function () {\n\t            var other = local__createLocal.apply(null, arguments);\n\t            return other > this ? this : other;\n\t        }\n\t    );\n\t\n\t    // Pick a moment m from moments so that m[fn](other) is true for all\n\t    // other. This relies on the function fn to be transitive.\n\t    //\n\t    // moments should either be an array of moment objects or an array, whose\n\t    // first element is an array of moment objects.\n\t    function pickBy(fn, moments) {\n\t        var res, i;\n\t        if (moments.length === 1 && isArray(moments[0])) {\n\t            moments = moments[0];\n\t        }\n\t        if (!moments.length) {\n\t            return local__createLocal();\n\t        }\n\t        res = moments[0];\n\t        for (i = 1; i < moments.length; ++i) {\n\t            if (moments[i][fn](res)) {\n\t                res = moments[i];\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t\n\t    // TODO: Use [].sort instead?\n\t    function min () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy('isBefore', args);\n\t    }\n\t\n\t    function max () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy('isAfter', args);\n\t    }\n\t\n\t    function Duration (duration) {\n\t        var normalizedInput = normalizeObjectUnits(duration),\n\t            years = normalizedInput.year || 0,\n\t            quarters = normalizedInput.quarter || 0,\n\t            months = normalizedInput.month || 0,\n\t            weeks = normalizedInput.week || 0,\n\t            days = normalizedInput.day || 0,\n\t            hours = normalizedInput.hour || 0,\n\t            minutes = normalizedInput.minute || 0,\n\t            seconds = normalizedInput.second || 0,\n\t            milliseconds = normalizedInput.millisecond || 0;\n\t\n\t        // representation for dateAddRemove\n\t        this._milliseconds = +milliseconds +\n\t            seconds * 1e3 + // 1000\n\t            minutes * 6e4 + // 1000 * 60\n\t            hours * 36e5; // 1000 * 60 * 60\n\t        // Because of dateAddRemove treats 24 hours as different from a\n\t        // day when working around DST, we need to store them separately\n\t        this._days = +days +\n\t            weeks * 7;\n\t        // It is impossible translate months into days without knowing\n\t        // which months you are are talking about, so we have to store\n\t        // it separately.\n\t        this._months = +months +\n\t            quarters * 3 +\n\t            years * 12;\n\t\n\t        this._data = {};\n\t\n\t        this._locale = locales__getLocale();\n\t\n\t        this._bubble();\n\t    }\n\t\n\t    function isDuration (obj) {\n\t        return obj instanceof Duration;\n\t    }\n\t\n\t    function offset (token, separator) {\n\t        addFormatToken(token, 0, 0, function () {\n\t            var offset = this.utcOffset();\n\t            var sign = '+';\n\t            if (offset < 0) {\n\t                offset = -offset;\n\t                sign = '-';\n\t            }\n\t            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t        });\n\t    }\n\t\n\t    offset('Z', ':');\n\t    offset('ZZ', '');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('Z',  matchOffset);\n\t    addRegexToken('ZZ', matchOffset);\n\t    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t        config._useUTC = true;\n\t        config._tzm = offsetFromString(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    // timezone chunker\n\t    // '+10:00' > ['10',  '00']\n\t    // '-1530'  > ['-15', '30']\n\t    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\t    function offsetFromString(string) {\n\t        var matches = ((string || '').match(matchOffset) || []);\n\t        var chunk   = matches[matches.length - 1] || [];\n\t        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t        return parts[0] === '+' ? minutes : -minutes;\n\t    }\n\t\n\t    // Return a moment from input, that is local/utc/zone equivalent to model.\n\t    function cloneWithOffset(input, model) {\n\t        var res, diff;\n\t        if (model._isUTC) {\n\t            res = model.clone();\n\t            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n\t            // Use low-level api, because this fn is low-level api.\n\t            res._d.setTime(+res._d + diff);\n\t            hooks__hooks.updateOffset(res, false);\n\t            return res;\n\t        } else {\n\t            return local__createLocal(input).local();\n\t        }\n\t        return model._isUTC ? local__createLocal(input).zone(model._offset || 0) : local__createLocal(input).local();\n\t    }\n\t\n\t    function getDateOffset (m) {\n\t        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t        // https://github.com/moment/moment/pull/1871\n\t        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t    }\n\t\n\t    // HOOKS\n\t\n\t    // This function will be called whenever a moment is mutated.\n\t    // It is intended to keep the offset in sync with the timezone.\n\t    hooks__hooks.updateOffset = function () {};\n\t\n\t    // MOMENTS\n\t\n\t    // keepLocalTime = true means only change the timezone, without\n\t    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t    // +0200, so we adjust the time as needed, to be valid.\n\t    //\n\t    // Keeping the time actually adds/subtracts (one hour)\n\t    // from the actual represented time. That is why we call updateOffset\n\t    // a second time. In case it wants us to change the offset again\n\t    // _changeInProgress == true case, then we have to adjust, because\n\t    // there is no such time in the given timezone.\n\t    function getSetOffset (input, keepLocalTime) {\n\t        var offset = this._offset || 0,\n\t            localAdjust;\n\t        if (input != null) {\n\t            if (typeof input === 'string') {\n\t                input = offsetFromString(input);\n\t            }\n\t            if (Math.abs(input) < 16) {\n\t                input = input * 60;\n\t            }\n\t            if (!this._isUTC && keepLocalTime) {\n\t                localAdjust = getDateOffset(this);\n\t            }\n\t            this._offset = input;\n\t            this._isUTC = true;\n\t            if (localAdjust != null) {\n\t                this.add(localAdjust, 'm');\n\t            }\n\t            if (offset !== input) {\n\t                if (!keepLocalTime || this._changeInProgress) {\n\t                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n\t                } else if (!this._changeInProgress) {\n\t                    this._changeInProgress = true;\n\t                    hooks__hooks.updateOffset(this, true);\n\t                    this._changeInProgress = null;\n\t                }\n\t            }\n\t            return this;\n\t        } else {\n\t            return this._isUTC ? offset : getDateOffset(this);\n\t        }\n\t    }\n\t\n\t    function getSetZone (input, keepLocalTime) {\n\t        if (input != null) {\n\t            if (typeof input !== 'string') {\n\t                input = -input;\n\t            }\n\t\n\t            this.utcOffset(input, keepLocalTime);\n\t\n\t            return this;\n\t        } else {\n\t            return -this.utcOffset();\n\t        }\n\t    }\n\t\n\t    function setOffsetToUTC (keepLocalTime) {\n\t        return this.utcOffset(0, keepLocalTime);\n\t    }\n\t\n\t    function setOffsetToLocal (keepLocalTime) {\n\t        if (this._isUTC) {\n\t            this.utcOffset(0, keepLocalTime);\n\t            this._isUTC = false;\n\t\n\t            if (keepLocalTime) {\n\t                this.subtract(getDateOffset(this), 'm');\n\t            }\n\t        }\n\t        return this;\n\t    }\n\t\n\t    function setOffsetToParsedOffset () {\n\t        if (this._tzm) {\n\t            this.utcOffset(this._tzm);\n\t        } else if (typeof this._i === 'string') {\n\t            this.utcOffset(offsetFromString(this._i));\n\t        }\n\t        return this;\n\t    }\n\t\n\t    function hasAlignedHourOffset (input) {\n\t        if (!input) {\n\t            input = 0;\n\t        }\n\t        else {\n\t            input = local__createLocal(input).utcOffset();\n\t        }\n\t\n\t        return (this.utcOffset() - input) % 60 === 0;\n\t    }\n\t\n\t    function isDaylightSavingTime () {\n\t        return (\n\t            this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t            this.utcOffset() > this.clone().month(5).utcOffset()\n\t        );\n\t    }\n\t\n\t    function isDaylightSavingTimeShifted () {\n\t        if (this._a) {\n\t            var other = this._isUTC ? utc__createUTC(this._a) : local__createLocal(this._a);\n\t            return this.isValid() && compareArrays(this._a, other.toArray()) > 0;\n\t        }\n\t\n\t        return false;\n\t    }\n\t\n\t    function isLocal () {\n\t        return !this._isUTC;\n\t    }\n\t\n\t    function isUtcOffset () {\n\t        return this._isUTC;\n\t    }\n\t\n\t    function isUtc () {\n\t        return this._isUTC && this._offset === 0;\n\t    }\n\t\n\t    var aspNetRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\t\n\t    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\t\n\t    function create__createDuration (input, key) {\n\t        var duration = input,\n\t            // matching against regexp is expensive, do it on demand\n\t            match = null,\n\t            sign,\n\t            ret,\n\t            diffRes;\n\t\n\t        if (isDuration(input)) {\n\t            duration = {\n\t                ms : input._milliseconds,\n\t                d  : input._days,\n\t                M  : input._months\n\t            };\n\t        } else if (typeof input === 'number') {\n\t            duration = {};\n\t            if (key) {\n\t                duration[key] = input;\n\t            } else {\n\t                duration.milliseconds = input;\n\t            }\n\t        } else if (!!(match = aspNetRegex.exec(input))) {\n\t            sign = (match[1] === '-') ? -1 : 1;\n\t            duration = {\n\t                y  : 0,\n\t                d  : toInt(match[DATE])        * sign,\n\t                h  : toInt(match[HOUR])        * sign,\n\t                m  : toInt(match[MINUTE])      * sign,\n\t                s  : toInt(match[SECOND])      * sign,\n\t                ms : toInt(match[MILLISECOND]) * sign\n\t            };\n\t        } else if (!!(match = create__isoRegex.exec(input))) {\n\t            sign = (match[1] === '-') ? -1 : 1;\n\t            duration = {\n\t                y : parseIso(match[2], sign),\n\t                M : parseIso(match[3], sign),\n\t                d : parseIso(match[4], sign),\n\t                h : parseIso(match[5], sign),\n\t                m : parseIso(match[6], sign),\n\t                s : parseIso(match[7], sign),\n\t                w : parseIso(match[8], sign)\n\t            };\n\t        } else if (duration == null) {// checks for null or undefined\n\t            duration = {};\n\t        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\t\n\t            duration = {};\n\t            duration.ms = diffRes.milliseconds;\n\t            duration.M = diffRes.months;\n\t        }\n\t\n\t        ret = new Duration(duration);\n\t\n\t        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t            ret._locale = input._locale;\n\t        }\n\t\n\t        return ret;\n\t    }\n\t\n\t    function parseIso (inp, sign) {\n\t        // We'd normally use ~~inp for this, but unfortunately it also\n\t        // converts floats to ints.\n\t        // inp may be undefined, so careful calling replace on it.\n\t        var res = inp && parseFloat(inp.replace(',', '.'));\n\t        // apply sign while we're at it\n\t        return (isNaN(res) ? 0 : res) * sign;\n\t    }\n\t\n\t    function positiveMomentsDifference(base, other) {\n\t        var res = {milliseconds: 0, months: 0};\n\t\n\t        res.months = other.month() - base.month() +\n\t            (other.year() - base.year()) * 12;\n\t        if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t            --res.months;\n\t        }\n\t\n\t        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t        return res;\n\t    }\n\t\n\t    function momentsDifference(base, other) {\n\t        var res;\n\t        other = cloneWithOffset(other, base);\n\t        if (base.isBefore(other)) {\n\t            res = positiveMomentsDifference(base, other);\n\t        } else {\n\t            res = positiveMomentsDifference(other, base);\n\t            res.milliseconds = -res.milliseconds;\n\t            res.months = -res.months;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    function createAdder(direction, name) {\n\t        return function (val, period) {\n\t            var dur, tmp;\n\t            //invert the arguments, but complain about it\n\t            if (period !== null && !isNaN(+period)) {\n\t                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n\t                tmp = val; val = period; period = tmp;\n\t            }\n\t\n\t            val = typeof val === 'string' ? +val : val;\n\t            dur = create__createDuration(val, period);\n\t            add_subtract__addSubtract(this, dur, direction);\n\t            return this;\n\t        };\n\t    }\n\t\n\t    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n\t        var milliseconds = duration._milliseconds,\n\t            days = duration._days,\n\t            months = duration._months;\n\t        updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t        if (milliseconds) {\n\t            mom._d.setTime(+mom._d + milliseconds * isAdding);\n\t        }\n\t        if (days) {\n\t            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n\t        }\n\t        if (months) {\n\t            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n\t        }\n\t        if (updateOffset) {\n\t            hooks__hooks.updateOffset(mom, days || months);\n\t        }\n\t    }\n\t\n\t    var add_subtract__add      = createAdder(1, 'add');\n\t    var add_subtract__subtract = createAdder(-1, 'subtract');\n\t\n\t    function calendar__calendar (time) {\n\t        // We want to compare the start of today, vs this.\n\t        // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t        var now = time || local__createLocal(),\n\t            sod = cloneWithOffset(now, this).startOf('day'),\n\t            diff = this.diff(sod, 'days', true),\n\t            format = diff < -6 ? 'sameElse' :\n\t                diff < -1 ? 'lastWeek' :\n\t                diff < 0 ? 'lastDay' :\n\t                diff < 1 ? 'sameDay' :\n\t                diff < 2 ? 'nextDay' :\n\t                diff < 7 ? 'nextWeek' : 'sameElse';\n\t        return this.format(this.localeData().calendar(format, this, local__createLocal(now)));\n\t    }\n\t\n\t    function clone () {\n\t        return new Moment(this);\n\t    }\n\t\n\t    function isAfter (input, units) {\n\t        var inputMs;\n\t        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n\t        if (units === 'millisecond') {\n\t            input = isMoment(input) ? input : local__createLocal(input);\n\t            return +this > +input;\n\t        } else {\n\t            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n\t            return inputMs < +this.clone().startOf(units);\n\t        }\n\t    }\n\t\n\t    function isBefore (input, units) {\n\t        var inputMs;\n\t        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n\t        if (units === 'millisecond') {\n\t            input = isMoment(input) ? input : local__createLocal(input);\n\t            return +this < +input;\n\t        } else {\n\t            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n\t            return +this.clone().endOf(units) < inputMs;\n\t        }\n\t    }\n\t\n\t    function isBetween (from, to, units) {\n\t        return this.isAfter(from, units) && this.isBefore(to, units);\n\t    }\n\t\n\t    function isSame (input, units) {\n\t        var inputMs;\n\t        units = normalizeUnits(units || 'millisecond');\n\t        if (units === 'millisecond') {\n\t            input = isMoment(input) ? input : local__createLocal(input);\n\t            return +this === +input;\n\t        } else {\n\t            inputMs = +local__createLocal(input);\n\t            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n\t        }\n\t    }\n\t\n\t    function absFloor (number) {\n\t        if (number < 0) {\n\t            return Math.ceil(number);\n\t        } else {\n\t            return Math.floor(number);\n\t        }\n\t    }\n\t\n\t    function diff (input, units, asFloat) {\n\t        var that = cloneWithOffset(input, this),\n\t            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,\n\t            delta, output;\n\t\n\t        units = normalizeUnits(units);\n\t\n\t        if (units === 'year' || units === 'month' || units === 'quarter') {\n\t            output = monthDiff(this, that);\n\t            if (units === 'quarter') {\n\t                output = output / 3;\n\t            } else if (units === 'year') {\n\t                output = output / 12;\n\t            }\n\t        } else {\n\t            delta = this - that;\n\t            output = units === 'second' ? delta / 1e3 : // 1000\n\t                units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t                delta;\n\t        }\n\t        return asFloat ? output : absFloor(output);\n\t    }\n\t\n\t    function monthDiff (a, b) {\n\t        // difference in months\n\t        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t            // b is in (anchor - 1 month, anchor + 1 month)\n\t            anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t            anchor2, adjust;\n\t\n\t        if (b - anchor < 0) {\n\t            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor - anchor2);\n\t        } else {\n\t            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor2 - anchor);\n\t        }\n\t\n\t        return -(wholeMonthDiff + adjust);\n\t    }\n\t\n\t    hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\t\n\t    function toString () {\n\t        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t    }\n\t\n\t    function moment_format__toISOString () {\n\t        var m = this.clone().utc();\n\t        if (0 < m.year() && m.year() <= 9999) {\n\t            if ('function' === typeof Date.prototype.toISOString) {\n\t                // native implementation is ~50x faster, use it when we can\n\t                return this.toDate().toISOString();\n\t            } else {\n\t                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t            }\n\t        } else {\n\t            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t        }\n\t    }\n\t\n\t    function format (inputString) {\n\t        var output = formatMoment(this, inputString || hooks__hooks.defaultFormat);\n\t        return this.localeData().postformat(output);\n\t    }\n\t\n\t    function from (time, withoutSuffix) {\n\t        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    }\n\t\n\t    function fromNow (withoutSuffix) {\n\t        return this.from(local__createLocal(), withoutSuffix);\n\t    }\n\t\n\t    function locale (key) {\n\t        var newLocaleData;\n\t\n\t        if (key === undefined) {\n\t            return this._locale._abbr;\n\t        } else {\n\t            newLocaleData = locales__getLocale(key);\n\t            if (newLocaleData != null) {\n\t                this._locale = newLocaleData;\n\t            }\n\t            return this;\n\t        }\n\t    }\n\t\n\t    var lang = deprecate(\n\t        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t        function (key) {\n\t            if (key === undefined) {\n\t                return this.localeData();\n\t            } else {\n\t                return this.locale(key);\n\t            }\n\t        }\n\t    );\n\t\n\t    function localeData () {\n\t        return this._locale;\n\t    }\n\t\n\t    function startOf (units) {\n\t        units = normalizeUnits(units);\n\t        // the following switch intentionally omits break keywords\n\t        // to utilize falling through the cases.\n\t        switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t            /* falls through */\n\t        }\n\t\n\t        // weeks are a special case\n\t        if (units === 'week') {\n\t            this.weekday(0);\n\t        }\n\t        if (units === 'isoWeek') {\n\t            this.isoWeekday(1);\n\t        }\n\t\n\t        // quarters are also special\n\t        if (units === 'quarter') {\n\t            this.month(Math.floor(this.month() / 3) * 3);\n\t        }\n\t\n\t        return this;\n\t    }\n\t\n\t    function endOf (units) {\n\t        units = normalizeUnits(units);\n\t        if (units === undefined || units === 'millisecond') {\n\t            return this;\n\t        }\n\t        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t    }\n\t\n\t    function to_type__valueOf () {\n\t        return +this._d - ((this._offset || 0) * 60000);\n\t    }\n\t\n\t    function unix () {\n\t        return Math.floor(+this / 1000);\n\t    }\n\t\n\t    function toDate () {\n\t        return this._offset ? new Date(+this) : this._d;\n\t    }\n\t\n\t    function toArray () {\n\t        var m = this;\n\t        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t    }\n\t\n\t    function moment_valid__isValid () {\n\t        return valid__isValid(this);\n\t    }\n\t\n\t    function parsingFlags () {\n\t        return extend({}, this._pf);\n\t    }\n\t\n\t    function invalidAt () {\n\t        return this._pf.overflow;\n\t    }\n\t\n\t    addFormatToken(0, ['gg', 2], 0, function () {\n\t        return this.weekYear() % 100;\n\t    });\n\t\n\t    addFormatToken(0, ['GG', 2], 0, function () {\n\t        return this.isoWeekYear() % 100;\n\t    });\n\t\n\t    function addWeekYearFormatToken (token, getter) {\n\t        addFormatToken(0, [token, token.length], 0, getter);\n\t    }\n\t\n\t    addWeekYearFormatToken('gggg',     'weekYear');\n\t    addWeekYearFormatToken('ggggg',    'weekYear');\n\t    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n\t    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('weekYear', 'gg');\n\t    addUnitAlias('isoWeekYear', 'GG');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('G',      matchSigned);\n\t    addRegexToken('g',      matchSigned);\n\t    addRegexToken('GG',     match1to2, match2);\n\t    addRegexToken('gg',     match1to2, match2);\n\t    addRegexToken('GGGG',   match1to4, match4);\n\t    addRegexToken('gggg',   match1to4, match4);\n\t    addRegexToken('GGGGG',  match1to6, match6);\n\t    addRegexToken('ggggg',  match1to6, match6);\n\t\n\t    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t        week[token.substr(0, 2)] = toInt(input);\n\t    });\n\t\n\t    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t        week[token] = hooks__hooks.parseTwoDigitYear(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    function weeksInYear(year, dow, doy) {\n\t        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSetWeekYear (input) {\n\t        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n\t        return input == null ? year : this.add((input - year), 'y');\n\t    }\n\t\n\t    function getSetISOWeekYear (input) {\n\t        var year = weekOfYear(this, 1, 4).year;\n\t        return input == null ? year : this.add((input - year), 'y');\n\t    }\n\t\n\t    function getISOWeeksInYear () {\n\t        return weeksInYear(this.year(), 1, 4);\n\t    }\n\t\n\t    function getWeeksInYear () {\n\t        var weekInfo = this.localeData()._week;\n\t        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t    }\n\t\n\t    addFormatToken('Q', 0, 0, 'quarter');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('quarter', 'Q');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('Q', match1);\n\t    addParseToken('Q', function (input, array) {\n\t        array[MONTH] = (toInt(input) - 1) * 3;\n\t    });\n\t\n\t    // MOMENTS\n\t\n\t    function getSetQuarter (input) {\n\t        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t    }\n\t\n\t    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('date', 'D');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('D',  match1to2);\n\t    addRegexToken('DD', match1to2, match2);\n\t    addRegexToken('Do', function (isStrict, locale) {\n\t        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n\t    });\n\t\n\t    addParseToken(['D', 'DD'], DATE);\n\t    addParseToken('Do', function (input, array) {\n\t        array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t    });\n\t\n\t    // MOMENTS\n\t\n\t    var getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t    addFormatToken('d', 0, 'do', 'day');\n\t\n\t    addFormatToken('dd', 0, 0, function (format) {\n\t        return this.localeData().weekdaysMin(this, format);\n\t    });\n\t\n\t    addFormatToken('ddd', 0, 0, function (format) {\n\t        return this.localeData().weekdaysShort(this, format);\n\t    });\n\t\n\t    addFormatToken('dddd', 0, 0, function (format) {\n\t        return this.localeData().weekdays(this, format);\n\t    });\n\t\n\t    addFormatToken('e', 0, 0, 'weekday');\n\t    addFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('day', 'd');\n\t    addUnitAlias('weekday', 'e');\n\t    addUnitAlias('isoWeekday', 'E');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('d',    match1to2);\n\t    addRegexToken('e',    match1to2);\n\t    addRegexToken('E',    match1to2);\n\t    addRegexToken('dd',   matchWord);\n\t    addRegexToken('ddd',  matchWord);\n\t    addRegexToken('dddd', matchWord);\n\t\n\t    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {\n\t        var weekday = config._locale.weekdaysParse(input);\n\t        // if we didn't get a weekday name, mark the date as invalid\n\t        if (weekday != null) {\n\t            week.d = weekday;\n\t        } else {\n\t            config._pf.invalidWeekday = input;\n\t        }\n\t    });\n\t\n\t    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t        week[token] = toInt(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    function parseWeekday(input, locale) {\n\t        if (typeof input === 'string') {\n\t            if (!isNaN(input)) {\n\t                input = parseInt(input, 10);\n\t            }\n\t            else {\n\t                input = locale.weekdaysParse(input);\n\t                if (typeof input !== 'number') {\n\t                    return null;\n\t                }\n\t            }\n\t        }\n\t        return input;\n\t    }\n\t\n\t    // LOCALES\n\t\n\t    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\t    function localeWeekdays (m) {\n\t        return this._weekdays[m.day()];\n\t    }\n\t\n\t    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\t    function localeWeekdaysShort (m) {\n\t        return this._weekdaysShort[m.day()];\n\t    }\n\t\n\t    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\t    function localeWeekdaysMin (m) {\n\t        return this._weekdaysMin[m.day()];\n\t    }\n\t\n\t    function localeWeekdaysParse (weekdayName) {\n\t        var i, mom, regex;\n\t\n\t        if (!this._weekdaysParse) {\n\t            this._weekdaysParse = [];\n\t        }\n\t\n\t        for (i = 0; i < 7; i++) {\n\t            // make the regex if we don't have it already\n\t            if (!this._weekdaysParse[i]) {\n\t                mom = local__createLocal([2000, 1]).day(i);\n\t                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t            }\n\t            // test the regex\n\t            if (this._weekdaysParse[i].test(weekdayName)) {\n\t                return i;\n\t            }\n\t        }\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSetDayOfWeek (input) {\n\t        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t        if (input != null) {\n\t            input = parseWeekday(input, this.localeData());\n\t            return this.add(input - day, 'd');\n\t        } else {\n\t            return day;\n\t        }\n\t    }\n\t\n\t    function getSetLocaleDayOfWeek (input) {\n\t        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t        return input == null ? weekday : this.add(input - weekday, 'd');\n\t    }\n\t\n\t    function getSetISODayOfWeek (input) {\n\t        // behaves the same as moment#day except\n\t        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t        // as a setter, sunday should belong to the previous week.\n\t        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n\t    }\n\t\n\t    addFormatToken('H', ['HH', 2], 0, 'hour');\n\t    addFormatToken('h', ['hh', 2], 0, function () {\n\t        return this.hours() % 12 || 12;\n\t    });\n\t\n\t    function meridiem (token, lowercase) {\n\t        addFormatToken(token, 0, 0, function () {\n\t            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t        });\n\t    }\n\t\n\t    meridiem('a', true);\n\t    meridiem('A', false);\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('hour', 'h');\n\t\n\t    // PARSING\n\t\n\t    function matchMeridiem (isStrict, locale) {\n\t        return locale._meridiemParse;\n\t    }\n\t\n\t    addRegexToken('a',  matchMeridiem);\n\t    addRegexToken('A',  matchMeridiem);\n\t    addRegexToken('H',  match1to2);\n\t    addRegexToken('h',  match1to2);\n\t    addRegexToken('HH', match1to2, match2);\n\t    addRegexToken('hh', match1to2, match2);\n\t\n\t    addParseToken(['H', 'HH'], HOUR);\n\t    addParseToken(['a', 'A'], function (input, array, config) {\n\t        config._isPm = config._locale.isPM(input);\n\t        config._meridiem = input;\n\t    });\n\t    addParseToken(['h', 'hh'], function (input, array, config) {\n\t        array[HOUR] = toInt(input);\n\t        config._pf.bigHour = true;\n\t    });\n\t\n\t    // LOCALES\n\t\n\t    function localeIsPM (input) {\n\t        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t        // Using charAt should be more compatible.\n\t        return ((input + '').toLowerCase().charAt(0) === 'p');\n\t    }\n\t\n\t    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\t    function localeMeridiem (hours, minutes, isLower) {\n\t        if (hours > 11) {\n\t            return isLower ? 'pm' : 'PM';\n\t        } else {\n\t            return isLower ? 'am' : 'AM';\n\t        }\n\t    }\n\t\n\t\n\t    // MOMENTS\n\t\n\t    // Setting the hour should keep the time, because the user explicitly\n\t    // specified which hour he wants. So trying to maintain the same hour (in\n\t    // a new timezone) makes sense. Adding/subtracting hours does not follow\n\t    // this rule.\n\t    var getSetHour = makeGetSet('Hours', true);\n\t\n\t    addFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('minute', 'm');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('m',  match1to2);\n\t    addRegexToken('mm', match1to2, match2);\n\t    addParseToken(['m', 'mm'], MINUTE);\n\t\n\t    // MOMENTS\n\t\n\t    var getSetMinute = makeGetSet('Minutes', false);\n\t\n\t    addFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('second', 's');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('s',  match1to2);\n\t    addRegexToken('ss', match1to2, match2);\n\t    addParseToken(['s', 'ss'], SECOND);\n\t\n\t    // MOMENTS\n\t\n\t    var getSetSecond = makeGetSet('Seconds', false);\n\t\n\t    addFormatToken('S', 0, 0, function () {\n\t        return ~~(this.millisecond() / 100);\n\t    });\n\t\n\t    addFormatToken(0, ['SS', 2], 0, function () {\n\t        return ~~(this.millisecond() / 10);\n\t    });\n\t\n\t    function millisecond__milliseconds (token) {\n\t        addFormatToken(0, [token, 3], 0, 'millisecond');\n\t    }\n\t\n\t    millisecond__milliseconds('SSS');\n\t    millisecond__milliseconds('SSSS');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('millisecond', 'ms');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('S',    match1to3, match1);\n\t    addRegexToken('SS',   match1to3, match2);\n\t    addRegexToken('SSS',  match1to3, match3);\n\t    addRegexToken('SSSS', matchUnsigned);\n\t    addParseToken(['S', 'SS', 'SSS', 'SSSS'], function (input, array) {\n\t        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t    });\n\t\n\t    // MOMENTS\n\t\n\t    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t    addFormatToken('z',  0, 0, 'zoneAbbr');\n\t    addFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t    // MOMENTS\n\t\n\t    function getZoneAbbr () {\n\t        return this._isUTC ? 'UTC' : '';\n\t    }\n\t\n\t    function getZoneName () {\n\t        return this._isUTC ? 'Coordinated Universal Time' : '';\n\t    }\n\t\n\t    var momentPrototype__proto = Moment.prototype;\n\t\n\t    momentPrototype__proto.add          = add_subtract__add;\n\t    momentPrototype__proto.calendar     = calendar__calendar;\n\t    momentPrototype__proto.clone        = clone;\n\t    momentPrototype__proto.diff         = diff;\n\t    momentPrototype__proto.endOf        = endOf;\n\t    momentPrototype__proto.format       = format;\n\t    momentPrototype__proto.from         = from;\n\t    momentPrototype__proto.fromNow      = fromNow;\n\t    momentPrototype__proto.get          = getSet;\n\t    momentPrototype__proto.invalidAt    = invalidAt;\n\t    momentPrototype__proto.isAfter      = isAfter;\n\t    momentPrototype__proto.isBefore     = isBefore;\n\t    momentPrototype__proto.isBetween    = isBetween;\n\t    momentPrototype__proto.isSame       = isSame;\n\t    momentPrototype__proto.isValid      = moment_valid__isValid;\n\t    momentPrototype__proto.lang         = lang;\n\t    momentPrototype__proto.locale       = locale;\n\t    momentPrototype__proto.localeData   = localeData;\n\t    momentPrototype__proto.max          = prototypeMax;\n\t    momentPrototype__proto.min          = prototypeMin;\n\t    momentPrototype__proto.parsingFlags = parsingFlags;\n\t    momentPrototype__proto.set          = getSet;\n\t    momentPrototype__proto.startOf      = startOf;\n\t    momentPrototype__proto.subtract     = add_subtract__subtract;\n\t    momentPrototype__proto.toArray      = toArray;\n\t    momentPrototype__proto.toDate       = toDate;\n\t    momentPrototype__proto.toISOString  = moment_format__toISOString;\n\t    momentPrototype__proto.toJSON       = moment_format__toISOString;\n\t    momentPrototype__proto.toString     = toString;\n\t    momentPrototype__proto.unix         = unix;\n\t    momentPrototype__proto.valueOf      = to_type__valueOf;\n\t\n\t    // Year\n\t    momentPrototype__proto.year       = getSetYear;\n\t    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\t\n\t    // Week Year\n\t    momentPrototype__proto.weekYear    = getSetWeekYear;\n\t    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\t\n\t    // Quarter\n\t    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\t\n\t    // Month\n\t    momentPrototype__proto.month       = getSetMonth;\n\t    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\t\n\t    // Week\n\t    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n\t    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n\t    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n\t    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t    // Day\n\t    momentPrototype__proto.date       = getSetDayOfMonth;\n\t    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n\t    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n\t    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n\t    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\t\n\t    // Hour\n\t    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\t\n\t    // Minute\n\t    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\t\n\t    // Second\n\t    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\t\n\t    // Millisecond\n\t    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\t\n\t    // Offset\n\t    momentPrototype__proto.utcOffset            = getSetOffset;\n\t    momentPrototype__proto.utc                  = setOffsetToUTC;\n\t    momentPrototype__proto.local                = setOffsetToLocal;\n\t    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n\t    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n\t    momentPrototype__proto.isDST                = isDaylightSavingTime;\n\t    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n\t    momentPrototype__proto.isLocal              = isLocal;\n\t    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n\t    momentPrototype__proto.isUtc                = isUtc;\n\t    momentPrototype__proto.isUTC                = isUtc;\n\t\n\t    // Timezone\n\t    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n\t    momentPrototype__proto.zoneName = getZoneName;\n\t\n\t    // Deprecations\n\t    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\t    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\t    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\t    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\t\n\t    var momentPrototype = momentPrototype__proto;\n\t\n\t    function moment__createUnix (input) {\n\t        return local__createLocal(input * 1000);\n\t    }\n\t\n\t    function moment__createInZone () {\n\t        return local__createLocal.apply(null, arguments).parseZone();\n\t    }\n\t\n\t    var defaultCalendar = {\n\t        sameDay : '[Today at] LT',\n\t        nextDay : '[Tomorrow at] LT',\n\t        nextWeek : 'dddd [at] LT',\n\t        lastDay : '[Yesterday at] LT',\n\t        lastWeek : '[Last] dddd [at] LT',\n\t        sameElse : 'L'\n\t    };\n\t\n\t    function locale_calendar__calendar (key, mom, now) {\n\t        var output = this._calendar[key];\n\t        return typeof output === 'function' ? output.call(mom, now) : output;\n\t    }\n\t\n\t    var defaultLongDateFormat = {\n\t        LTS  : 'h:mm:ss A',\n\t        LT   : 'h:mm A',\n\t        L    : 'MM/DD/YYYY',\n\t        LL   : 'MMMM D, YYYY',\n\t        LLL  : 'MMMM D, YYYY LT',\n\t        LLLL : 'dddd, MMMM D, YYYY LT'\n\t    };\n\t\n\t    function longDateFormat (key) {\n\t        var output = this._longDateFormat[key];\n\t        if (!output && this._longDateFormat[key.toUpperCase()]) {\n\t            output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t                return val.slice(1);\n\t            });\n\t            this._longDateFormat[key] = output;\n\t        }\n\t        return output;\n\t    }\n\t\n\t    var defaultInvalidDate = 'Invalid date';\n\t\n\t    function invalidDate () {\n\t        return this._invalidDate;\n\t    }\n\t\n\t    var defaultOrdinal = '%d';\n\t    var defaultOrdinalParse = /\\d{1,2}/;\n\t\n\t    function ordinal (number) {\n\t        return this._ordinal.replace('%d', number);\n\t    }\n\t\n\t    function preParsePostFormat (string) {\n\t        return string;\n\t    }\n\t\n\t    var defaultRelativeTime = {\n\t        future : 'in %s',\n\t        past   : '%s ago',\n\t        s  : 'a few seconds',\n\t        m  : 'a minute',\n\t        mm : '%d minutes',\n\t        h  : 'an hour',\n\t        hh : '%d hours',\n\t        d  : 'a day',\n\t        dd : '%d days',\n\t        M  : 'a month',\n\t        MM : '%d months',\n\t        y  : 'a year',\n\t        yy : '%d years'\n\t    };\n\t\n\t    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n\t        var output = this._relativeTime[string];\n\t        return (typeof output === 'function') ?\n\t            output(number, withoutSuffix, string, isFuture) :\n\t            output.replace(/%d/i, number);\n\t    }\n\t\n\t    function pastFuture (diff, output) {\n\t        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n\t    }\n\t\n\t    function set__set (config) {\n\t        var prop, i;\n\t        for (i in config) {\n\t            prop = config[i];\n\t            if (typeof prop === 'function') {\n\t                this[i] = prop;\n\t            } else {\n\t                this['_' + i] = prop;\n\t            }\n\t        }\n\t        // Lenient ordinal parsing accepts just a number in addition to\n\t        // number + (possibly) stuff coming from _ordinalParseLenient.\n\t        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n\t    }\n\t\n\t    var prototype__proto = Locale.prototype;\n\t\n\t    prototype__proto._calendar       = defaultCalendar;\n\t    prototype__proto.calendar        = locale_calendar__calendar;\n\t    prototype__proto._longDateFormat = defaultLongDateFormat;\n\t    prototype__proto.longDateFormat  = longDateFormat;\n\t    prototype__proto._invalidDate    = defaultInvalidDate;\n\t    prototype__proto.invalidDate     = invalidDate;\n\t    prototype__proto._ordinal        = defaultOrdinal;\n\t    prototype__proto.ordinal         = ordinal;\n\t    prototype__proto._ordinalParse   = defaultOrdinalParse;\n\t    prototype__proto.preparse        = preParsePostFormat;\n\t    prototype__proto.postformat      = preParsePostFormat;\n\t    prototype__proto._relativeTime   = defaultRelativeTime;\n\t    prototype__proto.relativeTime    = relative__relativeTime;\n\t    prototype__proto.pastFuture      = pastFuture;\n\t    prototype__proto.set             = set__set;\n\t\n\t    // Month\n\t    prototype__proto.months       =        localeMonths;\n\t    prototype__proto._months      = defaultLocaleMonths;\n\t    prototype__proto.monthsShort  =        localeMonthsShort;\n\t    prototype__proto._monthsShort = defaultLocaleMonthsShort;\n\t    prototype__proto.monthsParse  =        localeMonthsParse;\n\t\n\t    // Week\n\t    prototype__proto.week = localeWeek;\n\t    prototype__proto._week = defaultLocaleWeek;\n\t    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n\t    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t    // Day of Week\n\t    prototype__proto.weekdays       =        localeWeekdays;\n\t    prototype__proto._weekdays      = defaultLocaleWeekdays;\n\t    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n\t    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n\t    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n\t    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n\t    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\t\n\t    // Hours\n\t    prototype__proto.isPM = localeIsPM;\n\t    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n\t    prototype__proto.meridiem = localeMeridiem;\n\t\n\t    function lists__get (format, index, field, setter) {\n\t        var locale = locales__getLocale();\n\t        var utc = utc__createUTC().set(setter, index);\n\t        return locale[field](utc, format);\n\t    }\n\t\n\t    function list (format, index, field, count, setter) {\n\t        if (typeof format === 'number') {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t\n\t        if (index != null) {\n\t            return lists__get(format, index, field, setter);\n\t        }\n\t\n\t        var i;\n\t        var out = [];\n\t        for (i = 0; i < count; i++) {\n\t            out[i] = lists__get(format, i, field, setter);\n\t        }\n\t        return out;\n\t    }\n\t\n\t    function lists__listMonths (format, index) {\n\t        return list(format, index, 'months', 12, 'month');\n\t    }\n\t\n\t    function lists__listMonthsShort (format, index) {\n\t        return list(format, index, 'monthsShort', 12, 'month');\n\t    }\n\t\n\t    function lists__listWeekdays (format, index) {\n\t        return list(format, index, 'weekdays', 7, 'day');\n\t    }\n\t\n\t    function lists__listWeekdaysShort (format, index) {\n\t        return list(format, index, 'weekdaysShort', 7, 'day');\n\t    }\n\t\n\t    function lists__listWeekdaysMin (format, index) {\n\t        return list(format, index, 'weekdaysMin', 7, 'day');\n\t    }\n\t\n\t    locales__getSetGlobalLocale('en', {\n\t        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t        ordinal : function (number) {\n\t            var b = number % 10,\n\t                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t                (b === 1) ? 'st' :\n\t                (b === 2) ? 'nd' :\n\t                (b === 3) ? 'rd' : 'th';\n\t            return number + output;\n\t        }\n\t    });\n\t\n\t    // Side effect imports\n\t    hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locales__getSetGlobalLocale);\n\t    hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locales__getLocale);\n\t\n\t    var mathAbs = Math.abs;\n\t\n\t    function abs__abs () {\n\t        var data           = this._data;\n\t\n\t        this._milliseconds = mathAbs(this._milliseconds);\n\t        this._days         = mathAbs(this._days);\n\t        this._months       = mathAbs(this._months);\n\t\n\t        data.milliseconds  = mathAbs(data.milliseconds);\n\t        data.seconds       = mathAbs(data.seconds);\n\t        data.minutes       = mathAbs(data.minutes);\n\t        data.hours         = mathAbs(data.hours);\n\t        data.months        = mathAbs(data.months);\n\t        data.years         = mathAbs(data.years);\n\t\n\t        return this;\n\t    }\n\t\n\t    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n\t        var other = create__createDuration(input, value);\n\t\n\t        duration._milliseconds += direction * other._milliseconds;\n\t        duration._days         += direction * other._days;\n\t        duration._months       += direction * other._months;\n\t\n\t        return duration._bubble();\n\t    }\n\t\n\t    // supports only 2.0-style add(1, 's') or add(duration)\n\t    function duration_add_subtract__add (input, value) {\n\t        return duration_add_subtract__addSubtract(this, input, value, 1);\n\t    }\n\t\n\t    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\t    function duration_add_subtract__subtract (input, value) {\n\t        return duration_add_subtract__addSubtract(this, input, value, -1);\n\t    }\n\t\n\t    function bubble () {\n\t        var milliseconds = this._milliseconds;\n\t        var days         = this._days;\n\t        var months       = this._months;\n\t        var data         = this._data;\n\t        var seconds, minutes, hours, years = 0;\n\t\n\t        // The following code bubbles up values, see the tests for\n\t        // examples of what that means.\n\t        data.milliseconds = milliseconds % 1000;\n\t\n\t        seconds           = absFloor(milliseconds / 1000);\n\t        data.seconds      = seconds % 60;\n\t\n\t        minutes           = absFloor(seconds / 60);\n\t        data.minutes      = minutes % 60;\n\t\n\t        hours             = absFloor(minutes / 60);\n\t        data.hours        = hours % 24;\n\t\n\t        days += absFloor(hours / 24);\n\t\n\t        // Accurately convert days to years, assume start from year 0.\n\t        years = absFloor(daysToYears(days));\n\t        days -= absFloor(yearsToDays(years));\n\t\n\t        // 30 days to a month\n\t        // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n\t        months += absFloor(days / 30);\n\t        days   %= 30;\n\t\n\t        // 12 months -> 1 year\n\t        years  += absFloor(months / 12);\n\t        months %= 12;\n\t\n\t        data.days   = days;\n\t        data.months = months;\n\t        data.years  = years;\n\t\n\t        return this;\n\t    }\n\t\n\t    function daysToYears (days) {\n\t        // 400 years have 146097 days (taking into account leap year rules)\n\t        return days * 400 / 146097;\n\t    }\n\t\n\t    function yearsToDays (years) {\n\t        // years * 365 + absFloor(years / 4) -\n\t        //     absFloor(years / 100) + absFloor(years / 400);\n\t        return years * 146097 / 400;\n\t    }\n\t\n\t    function as (units) {\n\t        var days;\n\t        var months;\n\t        var milliseconds = this._milliseconds;\n\t\n\t        units = normalizeUnits(units);\n\t\n\t        if (units === 'month' || units === 'year') {\n\t            days   = this._days   + milliseconds / 864e5;\n\t            months = this._months + daysToYears(days) * 12;\n\t            return units === 'month' ? months : months / 12;\n\t        } else {\n\t            // handle milliseconds separately because of floating point math errors (issue #1867)\n\t            days = this._days + Math.round(yearsToDays(this._months / 12));\n\t            switch (units) {\n\t                case 'week'   : return days / 7            + milliseconds / 6048e5;\n\t                case 'day'    : return days                + milliseconds / 864e5;\n\t                case 'hour'   : return days * 24           + milliseconds / 36e5;\n\t                case 'minute' : return days * 24 * 60      + milliseconds / 6e4;\n\t                case 'second' : return days * 24 * 60 * 60 + milliseconds / 1000;\n\t                // Math.floor prevents floating point math errors here\n\t                case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + milliseconds;\n\t                default: throw new Error('Unknown unit ' + units);\n\t            }\n\t        }\n\t    }\n\t\n\t    // TODO: Use this.as('ms')?\n\t    function as__valueOf () {\n\t        return (\n\t            this._milliseconds +\n\t            this._days * 864e5 +\n\t            (this._months % 12) * 2592e6 +\n\t            toInt(this._months / 12) * 31536e6\n\t        );\n\t    }\n\t\n\t    function makeAs (alias) {\n\t        return function () {\n\t            return this.as(alias);\n\t        };\n\t    }\n\t\n\t    var asMilliseconds = makeAs('ms');\n\t    var asSeconds      = makeAs('s');\n\t    var asMinutes      = makeAs('m');\n\t    var asHours        = makeAs('h');\n\t    var asDays         = makeAs('d');\n\t    var asWeeks        = makeAs('w');\n\t    var asMonths       = makeAs('M');\n\t    var asYears        = makeAs('y');\n\t\n\t    function get__get (units) {\n\t        units = normalizeUnits(units);\n\t        return this[units + 's']();\n\t    }\n\t\n\t    function makeGetter(name) {\n\t        return function () {\n\t            return this._data[name];\n\t        };\n\t    }\n\t\n\t    var get__milliseconds = makeGetter('milliseconds');\n\t    var seconds      = makeGetter('seconds');\n\t    var minutes      = makeGetter('minutes');\n\t    var hours        = makeGetter('hours');\n\t    var days         = makeGetter('days');\n\t    var months       = makeGetter('months');\n\t    var years        = makeGetter('years');\n\t\n\t    function weeks () {\n\t        return absFloor(this.days() / 7);\n\t    }\n\t\n\t    var round = Math.round;\n\t    var thresholds = {\n\t        s: 45,  // seconds to minute\n\t        m: 45,  // minutes to hour\n\t        h: 22,  // hours to day\n\t        d: 26,  // days to month\n\t        M: 11   // months to year\n\t    };\n\t\n\t    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\t    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t    }\n\t\n\t    function humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n\t        var duration = create__createDuration(posNegDuration).abs();\n\t        var seconds  = round(duration.as('s'));\n\t        var minutes  = round(duration.as('m'));\n\t        var hours    = round(duration.as('h'));\n\t        var days     = round(duration.as('d'));\n\t        var months   = round(duration.as('M'));\n\t        var years    = round(duration.as('y'));\n\t\n\t        var a = seconds < thresholds.s && ['s', seconds]  ||\n\t                minutes === 1          && ['m']           ||\n\t                minutes < thresholds.m && ['mm', minutes] ||\n\t                hours   === 1          && ['h']           ||\n\t                hours   < thresholds.h && ['hh', hours]   ||\n\t                days    === 1          && ['d']           ||\n\t                days    < thresholds.d && ['dd', days]    ||\n\t                months  === 1          && ['M']           ||\n\t                months  < thresholds.M && ['MM', months]  ||\n\t                years   === 1          && ['y']           || ['yy', years];\n\t\n\t        a[2] = withoutSuffix;\n\t        a[3] = +posNegDuration > 0;\n\t        a[4] = locale;\n\t        return substituteTimeAgo.apply(null, a);\n\t    }\n\t\n\t    // This function allows you to set a threshold for relative time strings\n\t    function humanize__getSetRelativeTimeThreshold (threshold, limit) {\n\t        if (thresholds[threshold] === undefined) {\n\t            return false;\n\t        }\n\t        if (limit === undefined) {\n\t            return thresholds[threshold];\n\t        }\n\t        thresholds[threshold] = limit;\n\t        return true;\n\t    }\n\t\n\t    function humanize (withSuffix) {\n\t        var locale = this.localeData();\n\t        var output = humanize__relativeTime(this, !withSuffix, locale);\n\t\n\t        if (withSuffix) {\n\t            output = locale.pastFuture(+this, output);\n\t        }\n\t\n\t        return locale.postformat(output);\n\t    }\n\t\n\t    var iso_string__abs = Math.abs;\n\t\n\t    function iso_string__toISOString() {\n\t        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t        var Y = iso_string__abs(this.years());\n\t        var M = iso_string__abs(this.months());\n\t        var D = iso_string__abs(this.days());\n\t        var h = iso_string__abs(this.hours());\n\t        var m = iso_string__abs(this.minutes());\n\t        var s = iso_string__abs(this.seconds() + this.milliseconds() / 1000);\n\t        var total = this.asSeconds();\n\t\n\t        if (!total) {\n\t            // this is the same as C#'s (Noda) and python (isodate)...\n\t            // but not other JS (goog.date)\n\t            return 'P0D';\n\t        }\n\t\n\t        return (total < 0 ? '-' : '') +\n\t            'P' +\n\t            (Y ? Y + 'Y' : '') +\n\t            (M ? M + 'M' : '') +\n\t            (D ? D + 'D' : '') +\n\t            ((h || m || s) ? 'T' : '') +\n\t            (h ? h + 'H' : '') +\n\t            (m ? m + 'M' : '') +\n\t            (s ? s + 'S' : '');\n\t    }\n\t\n\t    var duration_prototype__proto = Duration.prototype;\n\t\n\t    duration_prototype__proto.abs            = abs__abs;\n\t    duration_prototype__proto.add            = duration_add_subtract__add;\n\t    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n\t    duration_prototype__proto.as             = as;\n\t    duration_prototype__proto.asMilliseconds = asMilliseconds;\n\t    duration_prototype__proto.asSeconds      = asSeconds;\n\t    duration_prototype__proto.asMinutes      = asMinutes;\n\t    duration_prototype__proto.asHours        = asHours;\n\t    duration_prototype__proto.asDays         = asDays;\n\t    duration_prototype__proto.asWeeks        = asWeeks;\n\t    duration_prototype__proto.asMonths       = asMonths;\n\t    duration_prototype__proto.asYears        = asYears;\n\t    duration_prototype__proto.valueOf        = as__valueOf;\n\t    duration_prototype__proto._bubble        = bubble;\n\t    duration_prototype__proto.get            = get__get;\n\t    duration_prototype__proto.milliseconds   = get__milliseconds;\n\t    duration_prototype__proto.seconds        = seconds;\n\t    duration_prototype__proto.minutes        = minutes;\n\t    duration_prototype__proto.hours          = hours;\n\t    duration_prototype__proto.days           = days;\n\t    duration_prototype__proto.weeks          = weeks;\n\t    duration_prototype__proto.months         = months;\n\t    duration_prototype__proto.years          = years;\n\t    duration_prototype__proto.humanize       = humanize;\n\t    duration_prototype__proto.toISOString    = iso_string__toISOString;\n\t    duration_prototype__proto.toString       = iso_string__toISOString;\n\t    duration_prototype__proto.toJSON         = iso_string__toISOString;\n\t    duration_prototype__proto.locale         = locale;\n\t    duration_prototype__proto.localeData     = localeData;\n\t\n\t    // Deprecations\n\t    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n\t    duration_prototype__proto.lang = lang;\n\t\n\t    // Side effect imports\n\t\n\t    addFormatToken('X', 0, 0, 'unix');\n\t    addFormatToken('x', 0, 0, 'valueOf');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('x', matchSigned);\n\t    addRegexToken('X', matchTimestamp);\n\t    addParseToken('X', function (input, array, config) {\n\t        config._d = new Date(parseFloat(input, 10) * 1000);\n\t    });\n\t    addParseToken('x', function (input, array, config) {\n\t        config._d = new Date(toInt(input));\n\t    });\n\t\n\t    // Side effect imports\n\t\n\t\n\t    hooks__hooks.version = '2.10.0';\n\t\n\t    setHookCallback(local__createLocal);\n\t\n\t    hooks__hooks.fn                    = momentPrototype;\n\t    hooks__hooks.min                   = min;\n\t    hooks__hooks.max                   = max;\n\t    hooks__hooks.utc                   = utc__createUTC;\n\t    hooks__hooks.unix                  = moment__createUnix;\n\t    hooks__hooks.months                = lists__listMonths;\n\t    hooks__hooks.isDate                = isDate;\n\t    hooks__hooks.locale                = locales__getSetGlobalLocale;\n\t    hooks__hooks.invalid               = valid__createInvalid;\n\t    hooks__hooks.duration              = create__createDuration;\n\t    hooks__hooks.isMoment              = isMoment;\n\t    hooks__hooks.weekdays              = lists__listWeekdays;\n\t    hooks__hooks.parseZone             = moment__createInZone;\n\t    hooks__hooks.localeData            = locales__getLocale;\n\t    hooks__hooks.isDuration            = isDuration;\n\t    hooks__hooks.monthsShort           = lists__listMonthsShort;\n\t    hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n\t    hooks__hooks.defineLocale          = defineLocale;\n\t    hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n\t    hooks__hooks.normalizeUnits        = normalizeUnits;\n\t    hooks__hooks.relativeTimeThreshold = humanize__getSetRelativeTimeThreshold;\n\t\n\t    var _moment = hooks__hooks;\n\t\n\t    return _moment;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(95)(module)))\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** profile.668f2f28b9b63e9d45d4.js\n **/","var angular = require('angular');\nvar notification = require('client/notification');\nvar moment = require('momentWithLocale');\n\nvar profile = angular.module('profile', [\n  'ui.router', 'ngResource', 'global403Interceptor', 'ajoslin.promise-tracker', 'progress', 'focusOn', 'ngMessages'\n]);\n\nrequire('./profileField');\nrequire('./profilePhoto');\nrequire('./profilePassword');\nrequire('./profileAuthProviders');\nrequire('./dateValidator');\nrequire('./dateRangeValidator');\n\n\nprofile.factory('Me', ($resource) => {\n  return $resource('/users/me', {}, {\n    get: {\n      method: 'GET',\n      transformResponse: function(data, headers){\n        data = JSON.parse(data);\n        data.created = new Date(data.created);\n        return data;\n      }\n    }\n  });\n});\n\nprofile.factory('QuizResults', ($resource) => {\n  return $resource('/quiz/results/user/' + window.currentUser.id, {}, {\n    query: {\n      method: 'GET',\n      isArray: true,\n      transformResponse: function(data, headers){\n\n        data = JSON.parse(data);\n        data.forEach(function(result) {\n          result.created = new Date(result.created);\n        });\n        console.log(data);\n        return data;\n      }\n    }\n  });\n});\n\n\nprofile\n  .config(($locationProvider, $stateProvider) => {\n    $locationProvider.html5Mode(true);\n\n    $stateProvider\n      .state('root', {\n        abstract:    true,\n        resolve:     {\n          me: (Me) => Me.get()\n        },\n        templateUrl: \"/profile/templates/partials/root\",\n        controller:  'ProfileRootCtrl'\n      });\n\n    var states = {\n      'root.aboutme': {\n        url:         \"/\",\n        title:       'Публичный профиль',\n        templateUrl: \"/profile/templates/partials/aboutme\",\n        controller:  'ProfileAboutMeCtrl'\n      },\n      'root.account': {\n        url:         '/account',\n        title:       'Аккаунт',\n        templateUrl: \"/profile/templates/partials/account\",\n        controller:  'ProfileAccountCtrl'\n      },\n      'root.quiz': {\n        url:         '/quiz',\n        title:       'Тесты',\n        templateUrl: \"/profile/templates/partials/quiz\",\n        controller:  'ProfileQuizResultsCtrl',\n        resolve:     {\n          quizResults: (QuizResults) => QuizResults.query()\n        }\n      }\n    };\n\n    // enabled states depend on user, are set to global variable in index.jade\n    for(var key in states) {\n      if (~window.profileStatesEnabled.indexOf(key)) {\n        $stateProvider.state(key, states[key]);\n      }\n    }\n\n\n  })\n  .controller('ProfileRootCtrl', ($scope, $state, $timeout, $http, me, promiseTracker) => {\n\n    //window.me = me;\n    $scope.me = me;\n\n    $scope.loadingTracker = promiseTracker();\n\n    $scope.states = $state.get()\n      .filter((state) => {\n        return !state.abstract;\n      })\n      .map((state) => {\n        return {\n          title:     state.title,\n          name:      state.name,\n          url:       state.url\n        };\n      });\n\n\n  })\n  .controller('ProfileAboutMeCtrl', ($scope, me) => {\n\n    $scope.me = me;\n\n  })\n  .controller('ProfileQuizResultsCtrl', ($scope, quizResults) => {\n\n    $scope.quizResults = quizResults;\n\n  })\n  .controller('ProfileAccountCtrl', ($scope, $http, me, Me) => {\n\n    $scope.me = me;\n\n    $scope.remove = function() {\n      var isSure = confirm(`${me.displayName} (${me.email}) - удалить пользователя без возможности восстановления?`);\n\n      if (!isSure) return;\n\n      $http({\n        method:           'DELETE',\n        url:              '/users/me',\n        tracker:          $scope.loadingTracker,\n        headers:          {'Content-Type': undefined},\n        transformRequest: angular.identity,\n        data:             new FormData()\n      }).then((response) => {\n\n        alert('Пользователь удалён.');\n        window.location.href = '/';\n\n      }, (response) => {\n        new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n      });\n    };\n\n    $scope.removeProvider = function(providerName) {\n      var isSure = confirm(`${providerName} - удалить привязку?`);\n\n      if (!isSure) return;\n\n      $http({\n        method:  'POST',\n        url:     '/auth/disconnect/' + providerName,\n        tracker: this.loadingTracker\n      }).then( (response) => {\n        // refresh user\n        $scope.me = Me.get();\n      }, (response) => {\n        new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n      });\n\n    };\n\n  })\n  .filter('capitalize', () => function(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  })\n  .filter('quizDate', () => function(date) {\n    return moment(date).format('D MMMM YYYY в LT');\n  })\n  .filter('quizDuration', () => function(seconds) {\n    return moment.duration(seconds, 'seconds').humanize();\n  });\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/index.js\n **/","module.exports = angular;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 8\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\n\nangular.module('profile')\n  .directive('profileField', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profileField',\n      scope:       {\n        title:       '@fieldTitle',\n        name:        '@fieldName',\n        formatValue: '=?fieldFormatValue',\n        value:       '=fieldValue'\n      },\n      replace:     true,\n      transclude:  true,\n      link:        function(scope, element, attrs, noCtrl, transclude) {\n\n        if (!scope.formatValue) {\n          scope.formatValue = function(value) {\n            return value;\n          };\n        }\n\n\n        scope.loadingTracker = promiseTracker();\n\n        scope.edit = function() {\n          if (this.editing) return;\n          this.editing = true;\n          this.editingValue = this.value;\n        };\n\n        scope.submit = function() {\n          if (this.form.$invalid) return;\n\n          if (this.value == this.editingValue) {\n            this.editing = false;\n            this.editingValue = '';\n            return;\n          }\n\n          var formData = new FormData();\n          formData.append(this.name, this.editingValue);\n\n          $http({\n            method:           'PATCH',\n            url:              '/users/me',\n            tracker:          this.loadingTracker,\n            headers:          {'Content-Type': undefined},\n            transformRequest: angular.identity,\n            data:             formData\n          }).then((response) => {\n\n            if (this.name == 'displayName') {\n              new notification.Success(\"Изменение имени везде произойдёт после перезагрузки страницы.\", 'slow');\n            } else if (this.name == 'email') {\n              new notification.Warning(\"Требуется подтвердить смену email, проверьте почту.\", 'slow');\n            } else if (this.name == 'profileName') {\n              new notification.Success(\"Ваш профиль доступен по новому адресу, страница будет перезагружена\");\n              var newProfileName = this.editingValue; // remember now, (editing field will be reset)\n              setTimeout(function() {\n                window.location.href = '/profile/' + newProfileName + '/account';\n              }, 2000);\n            } else {\n              new notification.Success(\"Информация обновлена.\");\n            }\n\n            this.editing = false;\n            this.value = this.editingValue;\n            this.editingValue = '';\n\n          }, (response) => {\n            //console.log(response);\n            if (response.status == 400) {\n\n              new notification.Error(response.data.message);\n            } else if (response.status == 409) {\n              new notification.Error(response.data.message);\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n        };\n\n\n        scope.cancel = function() {\n          if (!this.editing) return;\n          // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n          // so we wait until the event bubbles and ends, and *then* cancel\n          $timeout(() => {\n            this.editing = false;\n            this.editingValue = \"\";\n          });\n        };\n\n        transclude(scope, function(clone, scope) {\n          element[0].querySelector('[control-transclude]').append(clone[0]);\n        });\n\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profileField.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\nvar thumb = require('client/image').thumb;\n\n\nangular.module('profile')\n  .directive('profilePhoto', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profilePhoto',\n      scope: {\n        photo: '='\n      },\n      replace: true,\n\n      link: function(scope, element, attrs, noCtrl) {\n        scope.loadingTracker = promiseTracker();\n        var self = this;\n\n        scope.changePhoto = function() {\n          var fileInput = document.createElement('input');\n          fileInput.type = 'file';\n          fileInput.accept = \"image/*\";\n\n          fileInput.onchange = function() {\n\n            var reader = new FileReader();\n            var file = fileInput.files[0];\n\n            reader.onload = function(event) {\n              var image = new Image();\n              image.onload = function() {\n                if (image.width != image.height || image.width < 160) {\n                  new notification.Error(\"Изображение должно быть квадратом, размер 160x160 или больше\");\n                } else {\n                  uploadPhoto(file);\n                }\n              };\n              image.src = event.target.result;\n            };\n            reader.readAsDataURL(file);\n\n          };\n          fileInput.click();\n        };\n\n\n        function uploadPhoto(file) {\n\n          var formData = new FormData();\n          formData.append(\"photo\", file);\n\n          $http({\n            method: 'PATCH',\n            url: '/users/me',\n            headers: {'Content-Type': undefined },\n            tracker: scope.loadingTracker,\n            transformRequest: angular.identity,\n            data: formData\n          }).then(function(response) {\n            scope.photo = response.data.photo;\n            new notification.Success(\"Изображение обновлено.\");\n          }, function(response) {\n            if (response.status == 400) {\n              new notification.Error(\"Неверный тип файла или изображение повреждено.\");\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n\n        }\n      }\n    };\n\n  })\n  .filter('thumb', () => thumb);\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profilePhoto.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\n\nangular.module('profile')\n  .directive('profilePassword', function(promiseTracker, $http, $timeout) {\n    return {\n      templateUrl: '/profile/templates/partials/profilePassword',\n      scope:       {\n        hasPassword: '='\n      },\n      replace:     true,\n      link:        function(scope, element, attrs, noCtrl, transclude) {\n\n        scope.password = '';\n        scope.passwordOld = '';\n\n        scope.loadingTracker = promiseTracker();\n\n        scope.edit = function() {\n          if (this.editing) return;\n          this.editing = true;\n\n          $timeout(function() {\n            var input = element[0].elements[scope.hasPassword ? 'passwordOld' : 'password'];\n            input.focus();\n          });\n        };\n\n        scope.submit = function() {\n          if (scope.form.$invalid) return;\n\n          var formData = new FormData();\n          formData.append(\"password\", this.password);\n          formData.append(\"passwordOld\", this.passwordOld);\n\n          $http({\n            method:           'PATCH',\n            url:              '/users/me',\n            tracker:          this.loadingTracker,\n            headers:          {'Content-Type': undefined},\n            transformRequest: angular.identity,\n            data:             formData\n          }).then((response) => {\n            new notification.Success(\"Пароль обновлён.\");\n            scope.editing = false;\n            // now have password for sure\n            scope.hasPassword = true;\n\n            // and clean password fields\n            scope.password = '';\n            scope.passwordOld = '';\n            scope.form.$setPristine();\n\n          }, (response) => {\n            if (response.status == 400) {\n              new notification.Error(response.data.message || response.data.errors.password);\n            } else {\n              new notification.Error(\"Ошибка загрузки, статус \" + response.status);\n            }\n          });\n\n        };\n\n\n        scope.cancel = function() {\n          if (!this.editing) return;\n          // if we turn editing off now, then click event may bubble up, reach the form and enable editing back\n          // so we wait until the event bubbles and ends, and *then* cancel\n          $timeout(() => {\n            this.editing = false;\n          });\n        };\n\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profilePassword.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\n\nangular.module('profile')\n  .directive('profileAuthProviders', function(promiseTracker, $http, authPopup, Me) {\n    return {\n      templateUrl: '/profile/templates/partials/profileAuthProviders',\n      replace: true,\n\n      link: function(scope) {\n\n        scope.connect = function(providerName) {\n          authPopup('/auth/connect/' + providerName, () => {\n            // refresh user\n            scope.me = Me.get();\n\n          }, () => {\n            console.error(\"fail\", arguments);\n          });\n        };\n\n        scope.connected = function(providerName) {\n          var connected = false;\n\n          if (!scope.me.providers) return false;\n          scope.me.providers.forEach(function(provider) {\n            if (provider.name == providerName) connected = true;\n          });\n\n          return connected;\n        };\n      }\n    };\n\n  }).service('authPopup', function() {\n\n    var authPopup;\n\n    return function(url, onSuccess, onFail) {\n\n        if (authPopup && !authPopup.closed) {\n          authPopup.close(); // close old popup if any\n        }\n        var width = 800, height = 600;\n        var top = (window.outerHeight - height) / 2;\n        var left = (window.outerWidth - width) / 2;\n\n        window.authModal = {\n          onAuthSuccess: onSuccess,\n          onAuthFailure: onFail\n        };\n\n        authPopup = window.open(url, 'authModal', 'width=' + width + ',height=' + height + ',scrollbars=0,top=' + top + ',left=' + left);\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/profileAuthProviders.js\n **/","var angular = require('angular');\n\nangular.module('profile')\n  .directive('dateValidator', function() {\n    return {\n      require: 'ngModel',\n      link:    function(scope, element, attrs, ngModel) {\n\n        ngModel.$validators.date = function(modelValue, viewValue) {\n          var value = modelValue || viewValue;\n          if (!value) return true;\n          var split = value.split('.');\n          if (split.length != 3) return false;\n          var date = new Date(split[2], split[1]-1, split[0]);\n\n          if (split[2].length != 4) return false;\n\n          return date.getFullYear() == split[2] && date.getMonth() == split[1]-1 && date.getDate() == split[0];\n        };\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/dateValidator.js\n **/","var notification = require('client/notification');\nvar angular = require('angular');\nvar moment = require('momentWithLocale');\n\nangular.module('profile')\n  .directive('dateRangeValidator', function() {\n    return {\n      require: 'ngModel',\n      link:    function(scope, element, attrs, ngModel) {\n\n        var range = attrs.dateRangeValidator.split('-');\n        var from = range[0] ? moment(range[0], \"DD.MM.YYYY\").toDate() : new Date();\n        var to = range[1] ? moment(range[1], \"DD.MM.YYYY\").toDate() : new Date();\n\n        ngModel.$validators.dateRange = function(modelValue, viewValue) {\n          var value = modelValue || viewValue;\n          if (!value) return true;\n\n          var split = value.split('.');\n          if (split.length != 3) return false;\n          var date = new Date(split[2], split[1]-1, split[0]);\n\n          if (split[2].length != 4) return false;\n\n          return date >= from && date <= to;\n        };\n      }\n    };\n\n  });\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/profile/client/dateRangeValidator.js\n **/","require('moment/locale/ru');\n\nmodule.exports = require('moment');\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/momentWithLocale.js\n **/","\nexports.thumb = function(url, width, height) {\n  // sometimes this may be called without url\n  if (!url) return url;\n\n  var pixelRatio = window.devicePixelRatio;\n\n  // return pixelRatio times larger image for retina\n  width *= pixelRatio;\n  height *= pixelRatio;\n\n  var modifier = (width <= 160 && height <= 160) ? 't' :\n    (width <= 320 && height <= 320) ? 'm' :\n      (width <= 640 && height <= 640) ? 'i' :\n        (width <= 1024 && height <= 1024) ? 'h' : '';\n\n  return url.slice(0, url.lastIndexOf('.')) + modifier + url.slice(url.lastIndexOf('.'));\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/image.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** (webpack)/buildin/module.js\n **/","//! moment.js locale configuration\n//! locale : russian (ru)\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['moment'], factory) :\n   factory(global.moment)\n}(this, function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n        },\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n        return months[nounCase][m.month()];\n    }\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = {\n            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n        },\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n        return monthsShort[nounCase][m.month()];\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n        },\n        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n\n    var ru = moment.defineLocale('ru', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сегодня в] LT',\n            nextDay: '[Завтра в] LT',\n            lastDay: '[Вчера в] LT',\n            nextWeek: function () {\n                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd [в] LT';\n                    } else {\n                        return '[В] dddd [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        ordinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ru;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/moment/locale/ru.js\n ** module id = 96\n ** module chunks = 8\n **/","//! moment.js\n//! version : 2.10.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = utc__createUTC(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    var momentProperties = hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function Locale() {\n    }\n\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && typeof module !== 'undefined' &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (typeof values === 'undefined') {\n                data = locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    // returns locale data\n    function locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function get_set__set (mom, unit, value) {\n        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = typeof regex === 'function' ? regex : function (isStrict) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  matchWord);\n    addRegexToken('MMMM', matchWord);\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            config._pf.invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m) {\n        return this._months[m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m) {\n        return this._monthsShort[m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && m._pf.overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n\n        return m;\n    }\n\n    function warn(msg) {\n        if (hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                warn(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks__hooks.suppressDeprecationWarnings = false;\n\n    var from_string__isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n        ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n        ['HH', /(T| )\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = from_string__isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(matchOffset)) {\n                config._f += 'Z';\n            }\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYY', 'YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = createUTCDate(year, 0, 1).getUTCDay();\n        var daysToAdd;\n        var dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year      : dayOfYear > 0 ? year      : year - 1,\n            dayOfYear : dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n        }\n        return [now.getFullYear(), now.getMonth(), now.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        res = new Moment(checkOverflow(config));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             return other < this ? this : other;\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            return other > this ? this : other;\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchOffset);\n    addRegexToken('ZZ', matchOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(string) {\n        var matches = ((string || '').match(matchOffset) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n        return model._isUTC ? local__createLocal(input).zone(model._offset || 0) : local__createLocal(input).local();\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(input);\n            }\n            if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!input) {\n            input = 0;\n        }\n        else {\n            input = local__createLocal(input).utcOffset();\n        }\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (this._a) {\n            var other = this._isUTC ? utc__createUTC(this._a) : local__createLocal(this._a);\n            return this.isValid() && compareArrays(this._a, other.toArray()) > 0;\n        }\n\n        return false;\n    }\n\n    function isLocal () {\n        return !this._isUTC;\n    }\n\n    function isUtcOffset () {\n        return this._isUTC;\n    }\n\n    function isUtc () {\n        return this._isUTC && this._offset === 0;\n    }\n\n    var aspNetRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = create__isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                d : parseIso(match[4], sign),\n                h : parseIso(match[5], sign),\n                m : parseIso(match[6], sign),\n                s : parseIso(match[7], sign),\n                w : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function calendar__calendar (time) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n        return this.format(this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this > +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return inputMs < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this < +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return +this.clone().endOf(units) < inputMs;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var inputMs;\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this === +input;\n        } else {\n            inputMs = +local__createLocal(input);\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function diff (input, units, asFloat) {\n        var that = cloneWithOffset(input, this),\n            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,\n            delta, output;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if ('function' === typeof Date.prototype.toISOString) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n            /* falls through */\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, this._pf);\n    }\n\n    function invalidAt () {\n        return this._pf.overflow;\n    }\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getSetISOWeekYear (input) {\n        var year = weekOfYear(this, 1, 4).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    addFormatToken('Q', 0, 0, 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {\n        var weekday = config._locale.weekdaysParse(input);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            config._pf.invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m) {\n        return this._weekdays[m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName) {\n        var i, mom, regex;\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            if (!this._weekdaysParse[i]) {\n                mom = local__createLocal([2000, 1]).day(i);\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, function () {\n        return this.hours() % 12 || 12;\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        config._pf.bigHour = true;\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    function millisecond__milliseconds (token) {\n        addFormatToken(0, [token, 3], 0, 'millisecond');\n    }\n\n    millisecond__milliseconds('SSS');\n    millisecond__milliseconds('SSSS');\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n    addRegexToken('SSSS', matchUnsigned);\n    addParseToken(['S', 'SS', 'SSS', 'SSSS'], function (input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    });\n\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add          = add_subtract__add;\n    momentPrototype__proto.calendar     = calendar__calendar;\n    momentPrototype__proto.clone        = clone;\n    momentPrototype__proto.diff         = diff;\n    momentPrototype__proto.endOf        = endOf;\n    momentPrototype__proto.format       = format;\n    momentPrototype__proto.from         = from;\n    momentPrototype__proto.fromNow      = fromNow;\n    momentPrototype__proto.get          = getSet;\n    momentPrototype__proto.invalidAt    = invalidAt;\n    momentPrototype__proto.isAfter      = isAfter;\n    momentPrototype__proto.isBefore     = isBefore;\n    momentPrototype__proto.isBetween    = isBetween;\n    momentPrototype__proto.isSame       = isSame;\n    momentPrototype__proto.isValid      = moment_valid__isValid;\n    momentPrototype__proto.lang         = lang;\n    momentPrototype__proto.locale       = locale;\n    momentPrototype__proto.localeData   = localeData;\n    momentPrototype__proto.max          = prototypeMax;\n    momentPrototype__proto.min          = prototypeMin;\n    momentPrototype__proto.parsingFlags = parsingFlags;\n    momentPrototype__proto.set          = getSet;\n    momentPrototype__proto.startOf      = startOf;\n    momentPrototype__proto.subtract     = add_subtract__subtract;\n    momentPrototype__proto.toArray      = toArray;\n    momentPrototype__proto.toDate       = toDate;\n    momentPrototype__proto.toISOString  = moment_format__toISOString;\n    momentPrototype__proto.toJSON       = moment_format__toISOString;\n    momentPrototype__proto.toString     = toString;\n    momentPrototype__proto.unix         = unix;\n    momentPrototype__proto.valueOf      = to_type__valueOf;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return typeof output === 'function' ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY LT',\n        LLLL : 'dddd, MMMM D, YYYY LT'\n    };\n\n    function longDateFormat (key) {\n        var output = this._longDateFormat[key];\n        if (!output && this._longDateFormat[key.toUpperCase()]) {\n            output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                return val.slice(1);\n            });\n            this._longDateFormat[key] = output;\n        }\n        return output;\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (typeof output === 'function') ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n    }\n\n    function set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (typeof prop === 'function') {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = set__set;\n\n    // Month\n    prototype__proto.months       =        localeMonths;\n    prototype__proto._months      = defaultLocaleMonths;\n    prototype__proto.monthsShort  =        localeMonthsShort;\n    prototype__proto._monthsShort = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse  =        localeMonthsParse;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locales__getLocale();\n        var utc = utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locales__getSetGlobalLocale);\n    hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years = 0;\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // Accurately convert days to years, assume start from year 0.\n        years = absFloor(daysToYears(days));\n        days -= absFloor(yearsToDays(years));\n\n        // 30 days to a month\n        // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n        months += absFloor(days / 30);\n        days   %= 30;\n\n        // 12 months -> 1 year\n        years  += absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absFloor(years / 4) -\n        //     absFloor(years / 100) + absFloor(years / 400);\n        return years * 146097 / 400;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToYears(days) * 12;\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(yearsToDays(this._months / 12));\n            switch (units) {\n                case 'week'   : return days / 7            + milliseconds / 6048e5;\n                case 'day'    : return days                + milliseconds / 864e5;\n                case 'hour'   : return days * 24           + milliseconds / 36e5;\n                case 'minute' : return days * 24 * 60      + milliseconds / 6e4;\n                case 'second' : return days * 24 * 60 * 60 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var get__milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes === 1          && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   === 1          && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    === 1          && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  === 1          && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   === 1          && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = iso_string__abs(this.years());\n        var M = iso_string__abs(this.months());\n        var D = iso_string__abs(this.days());\n        var h = iso_string__abs(this.hours());\n        var m = iso_string__abs(this.minutes());\n        var s = iso_string__abs(this.seconds() + this.milliseconds() / 1000);\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = get__get;\n    duration_prototype__proto.milliseconds   = get__milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks__hooks.version = '2.10.0';\n\n    setHookCallback(local__createLocal);\n\n    hooks__hooks.fn                    = momentPrototype;\n    hooks__hooks.min                   = min;\n    hooks__hooks.max                   = max;\n    hooks__hooks.utc                   = utc__createUTC;\n    hooks__hooks.unix                  = moment__createUnix;\n    hooks__hooks.months                = lists__listMonths;\n    hooks__hooks.isDate                = isDate;\n    hooks__hooks.locale                = locales__getSetGlobalLocale;\n    hooks__hooks.invalid               = valid__createInvalid;\n    hooks__hooks.duration              = create__createDuration;\n    hooks__hooks.isMoment              = isMoment;\n    hooks__hooks.weekdays              = lists__listWeekdays;\n    hooks__hooks.parseZone             = moment__createInZone;\n    hooks__hooks.localeData            = locales__getLocale;\n    hooks__hooks.isDuration            = isDuration;\n    hooks__hooks.monthsShort           = lists__listMonthsShort;\n    hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    hooks__hooks.defineLocale          = defineLocale;\n    hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    hooks__hooks.normalizeUnits        = normalizeUnits;\n    hooks__hooks.relativeTimeThreshold = humanize__getSetRelativeTimeThreshold;\n\n    var _moment = hooks__hooks;\n\n    return _moment;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/moment/moment.js\n ** module id = 97\n ** module chunks = 8\n **/"],"sourceRoot":""}