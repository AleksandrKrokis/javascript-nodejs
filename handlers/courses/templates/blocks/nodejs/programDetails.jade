+b.courses-parts.courses-mix
  +e('h2').title Основные темы программы

  +b.tabbed-pane._01

    +e('ul').tabs
      +e('li').tab._01 Первая часть курса
      +e('li').tab._02 Вторая часть курса
      +e('li').tab._03 Третья часть курса

    +e.body._01
      +e('h2').title.phone-only Первая часть курса
      ol
        li
          strong Фундаментальный Node.JS
          p Здесь мы изучим особенности работы Node.JS, его важнейшие модули и приёмы разработки.
          p Мы используем наше знание браузерного JavaScript, чтобы изучить их быстрее.
          ul
            li Настройка окружения, редактора, инструменты для разработки и отладки.
            li Модули: организация, подключение, версионность.
            li Встроенные модули http, path, fs, child_process и другие.
            li Событийный цикл, потоки в деталях, важные подводные камни и примеры.
        li
          strong Сервер на Node.JS
          p Создадим код и тесты для веб-сервера на Node.JS, кластеризуем его на всех ядрах процессора.
          ul
            li Создание сервера на Node.JS
            li Тестирование с использованием mocha, supertest и других фреймворков.
            li Promises, Iterators, Generators, их особенности в Node.JS
            li Фреймворк Koa.JS для создания серверов
            li Структура приложения и виды Middleware для Koa.JS
            li PM2 для запуска и поддержания процессов сервера.

      p По окончанию первой части курса вы понимаете, как разрабатывать на Node.JS, как делать сервер, устойчивый к пользовательским и, по возможности, к программным ошибкам, и можете запустить, пока ещё, весьма небольшой Node-проект.

    +e.body._02
      +e('h2').title.phone-only Вторая часть курса
      ol
        li
          strong Работа с базой данных
          p Мы будем использовать MongoDB и Mongoose, однако те же принципы применимы к другим базам, на их место можно поставить MySQL, PostgreSQL, Redis и т.п.
          ul
            li MongoDB и Mongoose, их особенности, примеры использования, схемы, валидация, плагины.
            li REST-сервис для управления объектами User

        li
          strong Веб-сервис, уровень 2
          ul
            li CLS и его грамотное использование для получения текущего запроса вне middleware
            li Логирование и обработка ошибок без потери контекста
            li Шаблонизация с Jade
            li Авторизация с Passport.JS
            li CSRF-защита от взлома для форм и AJAX-запросов
            li Socket.IO – интеграция и использование с Koa.JS и другими сервисами.

    +e.body._03
      +e('h2').title.phone-only Третья часть курса
      ol
        li
          strong Архитектура проекта
          p В среднем Node.JS-проекте – более сотни файлов. Это нормально, и даже вполне удобно, если их правильно организовать.
          ul
            li Архитектура HMVC для Koa.JS
            li Организация шаблонов, тестов, клиентских скриптов.
            li Gulp.JS для сборки.
        li
          strong Выкладка Production
          ul
            li Организация git-репозитария и модулей.
            li Deploy через свой Gulp-task или через PM2.

      p На практике эти части не так чтобы резко отделены друг от друга, переход между ними плавный. Продвинутые темы используют элементы предыдущих.

      p
        strong В программе есть много того, о чём в этом списке не написано, так как деталей в разработке очень много.

      p Если у вас есть какой-то вопрос по программе – вы можете задать его внизу страницы, в комментарии.

  script.
    var className = 'tabbed-pane', block = document.querySelector('.' + className);

    block.querySelector('.' + className + '__tabs').addEventListener('click', function(e) {
       block.className = className + ' ' + className + '_' +  e.target.className.split('_').pop();
    });



